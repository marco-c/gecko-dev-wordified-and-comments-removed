'
use
strict
'
;
let
fakeManagedConfigurationService
=
undefined
;
async
function
loadChromiumResources
(
)
{
await
import
(
'
/
resources
/
chromium
/
mock
-
managed
-
config
.
js
'
)
;
}
async
function
createManagedConfigTest
(
)
{
if
(
typeof
ManagedConfigTest
=
=
=
'
undefined
'
)
{
if
(
isChromiumBased
)
{
await
loadChromiumResources
(
)
;
}
}
assert_implements
(
ManagedConfigTest
'
ManagedConfigTest
is
unavailable
.
'
)
;
if
(
fakeManagedConfigurationService
!
=
=
undefined
)
{
await
fakeManagedConfigurationService
.
initialize
(
)
;
return
fakeManagedConfigurationService
;
}
let
managedConfigTest
=
new
ManagedConfigTest
(
)
;
await
managedConfigTest
.
initialize
(
)
;
fakeManagedConfigurationService
=
managedConfigTest
;
return
managedConfigTest
;
}
function
managed_config_test
(
func
description
)
{
promise_test
(
async
test
=
>
{
const
managedConfigTest
=
await
createManagedConfigTest
(
)
;
await
func
(
test
managedConfigTest
)
;
}
description
)
;
}
