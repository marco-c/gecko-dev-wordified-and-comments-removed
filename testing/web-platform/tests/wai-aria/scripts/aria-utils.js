const
AriaUtils
=
{
assignAndVerifyRolesByRoleNames
:
function
(
roleNames
)
{
for
(
const
role
of
roleNames
)
{
promise_test
(
async
t
=
>
{
let
el
=
document
.
createElement
(
"
div
"
)
;
el
.
appendChild
(
document
.
createTextNode
(
"
x
"
)
)
;
el
.
setAttribute
(
"
role
"
role
)
;
el
.
id
=
role_
{
role
}
;
document
.
body
.
appendChild
(
el
)
;
const
computedRole
=
await
test_driver
.
get_computed_role
(
document
.
getElementById
(
el
.
id
)
)
;
assert_equals
(
computedRole
role
el
.
outerHTML
)
;
}
role
:
{
role
}
)
;
}
}
verifyRolesBySelector
:
function
(
selector
)
{
const
els
=
document
.
querySelectorAll
(
selector
)
;
for
(
const
el
of
els
)
{
let
role
=
el
.
getAttribute
(
"
data
-
expectedrole
"
)
;
let
testName
=
el
.
getAttribute
(
"
data
-
testname
"
)
|
|
role
;
promise_test
(
async
t
=
>
{
const
expectedRole
=
el
.
getAttribute
(
"
data
-
expectedrole
"
)
;
if
(
!
el
.
id
)
{
let
roleCount
=
1
;
let
elID
=
{
expectedRole
}
{
roleCount
}
;
while
(
document
.
getElementById
(
elID
)
)
{
roleCount
+
+
;
elID
=
{
expectedRole
}
{
roleCount
}
;
}
el
.
id
=
elID
;
}
const
computedRole
=
await
test_driver
.
get_computed_role
(
document
.
getElementById
(
el
.
id
)
)
;
assert_equals
(
computedRole
expectedRole
el
.
outerHTML
)
;
}
{
testName
}
)
;
}
}
}
;
