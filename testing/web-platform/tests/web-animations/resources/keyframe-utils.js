'
use
strict
'
;
function
assert_frame_lists_equal
(
a
b
message
)
{
assert_equals
(
a
.
length
b
.
length
number
of
frames
:
{
(
message
|
|
'
'
)
}
)
;
for
(
let
i
=
0
;
i
<
Math
.
min
(
a
.
length
b
.
length
)
;
i
+
+
)
{
assert_frames_equal
(
a
[
i
]
b
[
i
]
ComputedKeyframe
#
{
i
}
:
{
(
message
|
|
'
'
)
}
)
;
}
}
function
assert_frames_equal
(
a
b
name
)
{
assert_equals
(
Object
.
keys
(
a
)
.
sort
(
)
.
toString
(
)
Object
.
keys
(
b
)
.
sort
(
)
.
toString
(
)
properties
on
{
name
}
should
match
)
;
for
(
const
p
of
Object
.
keys
(
a
)
.
sort
(
)
)
{
if
(
typeof
a
[
p
]
=
=
'
number
'
)
assert_approx_equals
(
a
[
p
]
b
[
p
]
1e
-
6
value
for
'
{
p
}
'
on
{
name
}
)
;
else
assert_equals
(
a
[
p
]
b
[
p
]
value
for
'
{
p
}
'
on
{
name
}
)
;
}
}
