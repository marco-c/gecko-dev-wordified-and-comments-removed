import
time
from
firefox_puppeteer
import
PuppeteerMixin
from
marionette_driver
import
By
Wait
from
marionette_driver
.
errors
import
MarionetteException
from
marionette_harness
import
MarionetteTestCase
class
TestUntrustedConnectionErrorPage
(
PuppeteerMixin
MarionetteTestCase
)
:
    
def
setUp
(
self
)
:
        
super
(
TestUntrustedConnectionErrorPage
self
)
.
setUp
(
)
        
self
.
url
=
'
https
:
/
/
self
-
signed
.
badssl
.
com
'
        
self
.
marionette
.
set_pref
(
'
network
.
http
.
rcwn
.
enabled
'
False
)
    
def
tearDown
(
self
)
:
        
try
:
            
self
.
marionette
.
clear_pref
(
'
network
.
http
.
rcwn
.
enabled
'
)
        
finally
:
            
super
(
TestUntrustedConnectionErrorPage
self
)
.
tearDown
(
)
    
def
test_untrusted_connection_error_page
(
self
)
:
        
self
.
marionette
.
set_context
(
'
content
'
)
        
target_url
=
self
.
browser
.
get_final_url
(
self
.
browser
.
default_homepage
)
        
self
.
assertRaises
(
MarionetteException
self
.
marionette
.
navigate
self
.
url
)
        
time
.
sleep
(
1
)
        
button
=
self
.
marionette
.
find_element
(
By
.
ID
"
returnButton
"
)
        
button
.
click
(
)
        
Wait
(
self
.
marionette
timeout
=
self
.
marionette
.
timeout
.
page_load
)
.
until
(
            
lambda
mn
:
target_url
=
=
self
.
marionette
.
get_url
(
)
)
