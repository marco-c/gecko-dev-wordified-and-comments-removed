import
time
from
marionette_driver
import
By
Wait
from
marionette_driver
.
errors
import
MarionetteException
from
firefox_ui_harness
.
testcases
import
FirefoxTestCase
class
TestUntrustedConnectionErrorPage
(
FirefoxTestCase
)
:
    
def
setUp
(
self
)
:
        
super
(
TestUntrustedConnectionErrorPage
self
)
.
setUp
(
)
        
self
.
url
=
'
https
:
/
/
ssl
-
selfsigned
.
mozqa
.
com
'
    
def
test_untrusted_connection_error_page
(
self
)
:
        
self
.
marionette
.
set_context
(
'
content
'
)
        
target_url
=
self
.
browser
.
get_final_url
(
self
.
browser
.
default_homepage
)
        
self
.
assertRaises
(
MarionetteException
self
.
marionette
.
navigate
self
.
url
)
        
time
.
sleep
(
1
)
        
button
=
self
.
marionette
.
find_element
(
By
.
ID
"
returnButton
"
)
        
button
.
click
(
)
        
Wait
(
self
.
marionette
timeout
=
self
.
browser
.
timeout_page_load
)
.
until
(
            
lambda
mn
:
target_url
=
=
self
.
marionette
.
get_url
(
)
)
