from
marionette_driver
import
Wait
from
firefox_ui_harness
.
decorators
import
skip_under_xvfb
from
firefox_puppeteer
.
testcases
import
FirefoxTestCase
class
TestMixedContentPage
(
FirefoxTestCase
)
:
    
def
setUp
(
self
)
:
        
FirefoxTestCase
.
setUp
(
self
)
        
self
.
locationbar
=
self
.
browser
.
navbar
.
locationbar
        
self
.
identity_popup
=
self
.
locationbar
.
identity_popup
        
self
.
url
=
'
https
:
/
/
mozqa
.
com
/
data
/
firefox
/
security
/
mixedcontent
.
html
'
    
def
tearDown
(
self
)
:
        
try
:
            
self
.
identity_popup
.
close
(
force
=
True
)
        
finally
:
            
FirefoxTestCase
.
tearDown
(
self
)
    
skip_under_xvfb
    
def
test_mixed_content
(
self
)
:
        
with
self
.
marionette
.
using_context
(
'
content
'
)
:
            
self
.
marionette
.
navigate
(
self
.
url
)
        
self
.
assertIn
(
'
identity
-
mixed
-
passive
-
loaded
'
                      
self
.
locationbar
.
connection_icon
.
value_of_css_property
(
'
list
-
style
-
image
'
)
)
        
self
.
locationbar
.
open_identity_popup
(
)
        
secure_label
=
self
.
identity_popup
.
view
.
main
.
secure_connection_label
        
self
.
assertEqual
(
secure_label
.
value_of_css_property
(
'
display
'
)
'
none
'
)
        
insecure_label
=
self
.
identity_popup
.
view
.
main
.
insecure_connection_label
        
self
.
assertNotEqual
(
insecure_label
.
value_of_css_property
(
'
display
'
)
'
none
'
)
        
secure_label
=
self
.
identity_popup
.
view
.
security
.
secure_connection_label
        
self
.
assertEqual
(
secure_label
.
value_of_css_property
(
'
display
'
)
'
none
'
)
        
insecure_label
=
self
.
identity_popup
.
view
.
security
.
insecure_connection_label
        
self
.
assertNotEqual
(
insecure_label
.
value_of_css_property
(
'
display
'
)
'
none
'
)
        
owner
=
self
.
identity_popup
.
view
.
security
.
owner
        
self
.
assertEqual
(
owner
.
value_of_css_property
(
'
display
'
)
'
none
'
)
