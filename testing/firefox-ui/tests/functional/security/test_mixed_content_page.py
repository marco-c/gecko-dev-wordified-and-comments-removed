from
__future__
import
absolute_import
from
firefox_puppeteer
import
PuppeteerMixin
from
marionette_harness
import
MarionetteTestCase
class
TestMixedContentPage
(
PuppeteerMixin
MarionetteTestCase
)
:
    
def
setUp
(
self
)
:
        
super
(
TestMixedContentPage
self
)
.
setUp
(
)
        
self
.
marionette
.
set_pref
(
'
security
.
mixed_content
.
upgrade_display_content
'
False
)
        
self
.
locationbar
=
self
.
browser
.
navbar
.
locationbar
        
self
.
identity_popup
=
self
.
locationbar
.
identity_popup
        
self
.
url
=
'
https
:
/
/
mixed
.
badssl
.
com
'
    
def
tearDown
(
self
)
:
        
try
:
            
self
.
marionette
.
clear_pref
(
'
security
.
mixed_content
.
upgrade_display_content
'
)
            
self
.
identity_popup
.
close
(
force
=
True
)
        
finally
:
            
super
(
TestMixedContentPage
self
)
.
tearDown
(
)
    
def
test_mixed_content
(
self
)
:
        
with
self
.
marionette
.
using_context
(
'
content
'
)
:
            
self
.
marionette
.
navigate
(
self
.
url
)
        
self
.
assertEqual
(
self
.
locationbar
.
identity_box
.
get_property
(
'
className
'
)
                         
'
unknownIdentity
mixedDisplayContent
'
)
        
self
.
locationbar
.
open_identity_popup
(
)
        
secure_label
=
self
.
identity_popup
.
view
.
main
.
secure_connection_label
        
self
.
assertEqual
(
secure_label
.
value_of_css_property
(
'
display
'
)
'
none
'
)
        
insecure_label
=
self
.
identity_popup
.
view
.
main
.
insecure_connection_label
        
self
.
assertNotEqual
(
insecure_label
.
value_of_css_property
(
'
display
'
)
'
none
'
)
        
secure_label
=
self
.
identity_popup
.
view
.
security
.
secure_connection_label
        
self
.
assertEqual
(
secure_label
.
value_of_css_property
(
'
display
'
)
'
none
'
)
        
insecure_label
=
self
.
identity_popup
.
view
.
security
.
insecure_connection_label
        
self
.
assertNotEqual
(
insecure_label
.
value_of_css_property
(
'
display
'
)
'
none
'
)
        
owner
=
self
.
identity_popup
.
view
.
security
.
owner
        
self
.
assertEqual
(
owner
.
value_of_css_property
(
'
display
'
)
'
none
'
)
