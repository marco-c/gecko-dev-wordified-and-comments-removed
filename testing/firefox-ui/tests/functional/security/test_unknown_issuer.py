from
__future__
import
absolute_import
import
time
from
marionette_driver
import
By
from
marionette_driver
.
errors
import
MarionetteException
from
marionette_harness
import
MarionetteTestCase
class
TestUnknownIssuer
(
MarionetteTestCase
)
:
    
def
setUp
(
self
)
:
        
super
(
TestUnknownIssuer
self
)
.
setUp
(
)
        
self
.
url
=
'
https
:
/
/
untrusted
-
root
.
badssl
.
com
/
'
    
def
test_unknown_issuer
(
self
)
:
        
with
self
.
marionette
.
using_context
(
'
content
'
)
:
            
self
.
assertRaises
(
MarionetteException
self
.
marionette
.
navigate
self
.
url
)
            
time
.
sleep
(
1
)
            
error
=
self
.
marionette
.
find_element
(
By
.
ID
'
errorCode
'
)
            
self
.
assertEquals
(
error
.
get_property
(
'
textContent
'
)
                              
'
SEC_ERROR_UNKNOWN_ISSUER
'
)
            
self
.
assertIsNotNone
(
self
.
marionette
.
find_element
(
By
.
ID
'
returnButton
'
)
)
            
self
.
assertIsNotNone
(
self
.
marionette
.
find_element
(
By
.
ID
'
advancedButton
'
)
)
