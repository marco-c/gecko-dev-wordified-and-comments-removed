var
accountCreate
=
{
oldPassword
:
null
/
/
TODO
:
is
this
secure
?
oldUsername
:
null
updateFunction
:
null
loadSetup
:
function
(
)
{
document
.
getElementById
(
'
qa
-
setup
-
createaccount
-
iframe
'
)
.
src
=
litmus
.
baseURL
+
'
extension
.
cgi
?
createAccount
=
1
'
;
accountCreate
.
updateFunction
=
window
.
arguments
[
0
]
;
accountCreate
.
oldPassword
=
qaPref
.
litmus
.
getPassword
(
)
;
accountCreate
.
oldUsername
=
qaPref
.
litmus
.
getUsername
(
)
;
}
validateAccount
:
function
(
)
{
/
/
we
'
re
creating
a
new
account
so
get
the
uname
and
passwd
/
/
from
the
account
created
page
:
var
page
=
document
.
getElementById
(
'
qa
-
setup
-
createaccount
-
iframe
'
)
.
contentDocument
;
if
(
!
page
)
{
alert
(
"
create
account
page
is
missing
"
)
;
return
false
;
}
if
(
page
.
wrappedJSObject
=
=
null
)
page
.
wrappedJSObject
=
page
;
if
(
page
.
forms
[
0
]
&
&
page
.
forms
[
0
]
.
wrappedJSObject
=
=
null
)
page
.
forms
[
0
]
.
wrappedJSObject
=
page
.
forms
[
0
]
;
if
(
page
.
location
=
=
litmus
.
baseURL
+
'
extension
.
cgi
?
createAccount
=
1
'
&
&
qaSetup
.
didSubmitForm
=
=
0
)
{
page
.
forms
[
0
]
.
wrappedJSObject
.
submit
(
)
;
qaSetup
.
didSubmitForm
=
1
;
setTimeout
(
"
qaSetup
.
validateAccount
(
)
"
5000
)
;
return
false
;
}
if
(
qaSetup
.
didSubmitForm
=
=
1
&
&
!
page
.
forms
|
|
!
page
.
forms
[
0
]
.
wrappedJSObject
|
|
!
page
.
forms
[
0
]
.
wrappedJSObject
.
email
&
&
!
page
.
forms
[
0
]
.
wrappedJSObject
.
email
.
value
)
{
qaSetup
.
didSubmitForm
=
2
;
setTimeout
(
"
qaSetup
.
validateAccount
(
)
"
4000
)
;
return
false
;
}
var
e
=
'
'
;
var
p
=
'
'
;
if
(
page
.
forms
&
&
page
.
forms
[
0
]
.
wrappedJSObject
&
&
page
.
forms
[
0
]
.
wrappedJSObject
.
email
&
&
page
.
forms
[
0
]
.
wrappedJSObject
.
email
.
value
)
{
e
=
page
.
forms
[
0
]
.
wrappedJSObject
.
email
.
value
}
if
(
page
.
forms
&
&
page
.
forms
[
0
]
.
wrappedJSObject
&
&
page
.
forms
[
0
]
.
wrappedJSObject
.
password
&
&
page
.
forms
[
0
]
.
wrappedJSObject
.
password
.
value
)
{
p
=
page
.
forms
[
0
]
.
wrappedJSObject
.
password
.
value
}
/
/
e
is
account
p
is
password
var
uname
=
e
;
var
passwd
=
p
;
if
(
e
=
=
'
'
|
|
p
=
=
'
'
)
{
alert
(
"
No
username
or
password
has
been
registered
.
"
)
;
return
false
;
/
/
we
need
better
error
handling
.
}
qaPref
.
litmus
.
setPassword
(
uname
passwd
)
;
accountCreate
.
updateFunction
(
)
;
/
/
TODO
:
ideally
we
would
validate
against
litmus
but
.
.
.
return
true
;
}
handleCancel
:
function
(
)
{
qaPref
.
litmus
.
setPassword
(
oldUsername
oldPassword
)
;
}
}
