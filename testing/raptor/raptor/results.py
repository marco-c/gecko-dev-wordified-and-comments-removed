from
__future__
import
absolute_import
from
output
import
Output
from
mozlog
import
get_proxy_logger
LOG
=
get_proxy_logger
(
component
=
'
results
-
handler
'
)
class
RaptorResultsHandler
(
)
:
    
"
"
"
Handle
Raptor
test
results
"
"
"
    
def
__init__
(
self
)
:
        
self
.
results
=
[
]
    
def
add
(
self
new_result_json
)
:
        
LOG
.
info
(
"
received
results
in
RaptorResultsHandler
.
add
"
)
        
LOG
.
info
(
new_result_json
)
        
new_result
=
RaptorTestResult
(
new_result_json
)
        
self
.
results
.
append
(
new_result
)
    
def
summarize_and_output
(
self
test_config
)
:
        
LOG
.
info
(
"
summarizing
raptor
test
results
"
)
        
output
=
Output
(
self
.
results
)
        
output
.
summarize
(
)
        
return
output
.
output
(
)
class
RaptorTestResult
(
)
:
    
"
"
"
Single
Raptor
test
result
class
"
"
"
    
def
__init__
(
self
test_result_json
)
:
        
self
.
extra_options
=
[
]
        
for
key
value
in
test_result_json
.
iteritems
(
)
:
            
setattr
(
self
key
value
)
