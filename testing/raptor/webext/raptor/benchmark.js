async
function
receiveMessage
(
event
)
{
raptorLog
(
"
raptor
benchmark
received
message
"
)
;
raptorLog
(
event
.
data
)
;
if
(
event
.
data
[
0
]
=
=
"
raptor
-
benchmark
"
)
{
await
sendResult
(
event
.
data
[
1
]
event
.
data
.
slice
(
2
)
)
;
}
}
async
function
sendResult
(
type
value
)
{
raptorLog
(
sending
result
back
to
runner
:
{
type
}
{
value
}
)
;
let
response
;
if
(
typeof
browser
!
=
=
"
undefined
"
)
{
response
=
await
browser
.
runtime
.
sendMessage
(
{
type
value
}
)
;
}
else
{
response
=
await
new
Promise
(
resolve
=
>
{
chrome
.
runtime
.
sendMessage
(
{
type
value
}
resolve
)
;
}
)
;
}
if
(
response
)
{
raptorLog
(
Response
:
{
response
.
text
}
)
;
}
}
function
raptorLog
(
text
level
=
"
info
"
)
{
let
prefix
=
"
"
;
if
(
level
=
=
"
error
"
)
{
prefix
=
"
ERROR
:
"
;
}
console
[
level
]
(
{
prefix
}
[
raptor
-
benchmarkjs
]
{
text
}
)
;
}
raptorLog
(
"
raptor
benchmark
content
loaded
"
)
;
window
.
addEventListener
(
"
message
"
receiveMessage
)
;
