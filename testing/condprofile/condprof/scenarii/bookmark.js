const
{
PlacesUtils
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
gre
/
modules
/
PlacesUtils
.
sys
.
mjs
"
)
;
let
resolve
=
arguments
[
3
]
;
try
{
PlacesUtils
.
promiseBookmarksTree
(
PlacesUtils
.
bookmarks
.
unfiledGuid
{
includeItemIds
:
true
}
)
.
then
(
root
=
>
{
let
count
=
root
.
itemsCount
;
let
maxBookmarks
=
arguments
[
2
]
;
if
(
count
>
=
maxBookmarks
)
{
let
toRemove
=
count
-
maxBookmarks
+
1
;
console
.
log
(
"
We
'
ve
reached
the
maximum
number
of
bookmarks
"
)
;
console
.
log
(
"
Removing
"
+
toRemove
)
;
let
children
=
root
.
children
;
for
(
let
i
=
0
p
=
Promise
.
resolve
(
)
;
i
<
toRemove
;
i
+
+
)
{
p
=
p
.
then
(
_
=
>
new
Promise
(
resolve
=
>
PlacesUtils
.
bookmarks
.
remove
(
children
[
i
]
.
guid
)
.
then
(
res
=
>
{
console
.
log
(
"
removed
one
bookmark
"
)
;
resolve
(
res
)
;
}
)
)
)
;
}
}
PlacesUtils
.
bookmarks
.
insert
(
{
parentGuid
:
PlacesUtils
.
bookmarks
.
unfiledGuid
url
:
arguments
[
0
]
title
:
arguments
[
1
]
}
)
.
then
(
res
=
>
{
resolve
(
res
)
;
}
)
;
}
)
;
}
catch
(
error
)
{
let
res
=
{
logs
:
{
}
result
:
1
result_message
:
error
.
toString
(
)
}
;
resolve
(
res
)
;
}
