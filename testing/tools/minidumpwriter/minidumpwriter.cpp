#
include
<
stdio
.
h
>
#
include
<
stdlib
.
h
>
#
include
<
windows
.
h
>
#
include
<
dbghelp
.
h
>
int
wmain
(
int
argc
wchar_t
*
*
argv
)
{
if
(
argc
!
=
3
)
{
fprintf
(
stderr
"
Usage
:
minidumpwriter
<
PID
>
<
DUMP_FILE
>
\
n
"
)
;
return
1
;
}
DWORD
pid
=
(
DWORD
)
_wtoi
(
argv
[
1
]
)
;
if
(
pid
<
=
0
)
{
fprintf
(
stderr
"
Usage
:
minidumpwriter
<
PID
>
<
DUMP_FILE
>
\
n
"
)
;
return
1
;
}
wchar_t
*
dumpfile
=
argv
[
2
]
;
int
rv
=
1
;
HANDLE
hProcess
=
OpenProcess
(
PROCESS_QUERY_INFORMATION
|
PROCESS_VM_READ
0
pid
)
;
if
(
!
hProcess
)
{
fprintf
(
stderr
"
Couldn
'
t
get
handle
for
%
d
\
n
"
pid
)
;
return
rv
;
}
HANDLE
file
=
CreateFileW
(
dumpfile
GENERIC_WRITE
0
nullptr
CREATE_ALWAYS
FILE_ATTRIBUTE_NORMAL
nullptr
)
;
if
(
file
=
=
INVALID_HANDLE_VALUE
)
{
fprintf
(
stderr
"
Couldn
'
t
open
dump
file
at
%
S
\
n
"
dumpfile
)
;
CloseHandle
(
hProcess
)
;
return
rv
;
}
rv
=
0
;
if
(
!
MiniDumpWriteDump
(
hProcess
pid
file
MiniDumpNormal
nullptr
nullptr
nullptr
)
)
{
fprintf
(
stderr
"
Error
0x
%
X
in
MiniDumpWriteDump
\
n
"
GetLastError
(
)
)
;
rv
=
1
;
}
CloseHandle
(
file
)
;
CloseHandle
(
hProcess
)
;
return
rv
;
}
