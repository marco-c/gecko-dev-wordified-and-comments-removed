#
include
<
stdio
.
h
>
#
include
<
string
>
#
include
"
common
/
linux
/
file_id
.
h
"
#
include
"
common
/
memory_allocator
.
h
"
using
std
:
:
string
;
using
google_breakpad
:
:
auto_wasteful_vector
;
using
google_breakpad
:
:
FileID
;
using
google_breakpad
:
:
PageAllocator
;
int
main
(
int
argc
char
*
*
argv
)
{
if
(
argc
!
=
2
)
{
fprintf
(
stderr
"
usage
:
fileid
<
elf
file
>
\
n
"
)
;
return
1
;
}
PageAllocator
allocator
;
auto_wasteful_vector
<
uint8_t
sizeof
(
MDGUID
)
>
identifier
(
&
allocator
)
;
FileID
file_id
(
argv
[
1
]
)
;
if
(
!
file_id
.
ElfFileIdentifier
(
identifier
)
)
{
fprintf
(
stderr
"
%
s
:
unable
to
generate
file
identifier
\
n
"
argv
[
1
]
)
;
return
1
;
}
string
result_guid
=
FileID
:
:
ConvertIdentifierToUUIDString
(
identifier
)
;
printf
(
"
%
s0
\
n
"
result_guid
.
c_str
(
)
)
;
return
0
;
}
