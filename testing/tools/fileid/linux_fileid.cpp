#
include
<
stdio
.
h
>
#
include
"
common
/
linux
/
file_id
.
h
"
void
FormatIdentifier
(
unsigned
char
identifier
[
google_breakpad
:
:
kMDGUIDSize
]
char
result_guid
[
40
]
)
{
char
identifier_str
[
40
]
;
google_breakpad
:
:
FileID
:
:
ConvertIdentifierToString
(
identifier
identifier_str
sizeof
(
identifier_str
)
)
;
int
bufpos
=
0
;
for
(
int
i
=
0
;
identifier_str
[
i
]
!
=
'
\
0
'
;
+
+
i
)
if
(
identifier_str
[
i
]
!
=
'
-
'
)
result_guid
[
bufpos
+
+
]
=
identifier_str
[
i
]
;
result_guid
[
bufpos
+
+
]
=
'
0
'
;
result_guid
[
bufpos
]
=
'
\
0
'
;
}
int
main
(
int
argc
char
*
*
argv
)
{
if
(
argc
!
=
2
)
{
fprintf
(
stderr
"
usage
:
fileid
<
elf
file
>
\
n
"
)
;
return
1
;
}
unsigned
char
identifier
[
google_breakpad
:
:
kMDGUIDSize
]
;
google_breakpad
:
:
FileID
file_id
(
argv
[
1
]
)
;
if
(
!
file_id
.
ElfFileIdentifier
(
identifier
)
)
{
fprintf
(
stderr
"
%
s
:
unable
to
generate
file
identifier
\
n
"
argv
[
1
]
)
;
return
1
;
}
char
result_guid
[
40
]
;
FormatIdentifier
(
identifier
result_guid
)
;
printf
(
"
%
s
\
n
"
result_guid
)
;
return
0
;
}
