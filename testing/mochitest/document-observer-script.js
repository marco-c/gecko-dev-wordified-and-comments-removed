let
{
interfaces
:
Ci
utils
:
Cu
}
=
Components
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
let
observer
=
{
observe
(
aWindow
)
{
let
utils
=
aWindow
.
QueryInterface
(
Ci
.
nsIInterfaceRequestor
)
.
getInterface
(
Ci
.
nsIDOMWindowUtils
)
;
let
outerID
=
utils
.
outerWindowID
;
let
innerID
=
utils
.
currentInnerWindowID
;
sendAsyncMessage
(
"
browser
-
test
:
documentCreated
"
{
location
:
aWindow
.
location
.
href
outerID
innerID
}
)
;
}
}
;
addMessageListener
(
"
browser
-
test
:
removeObservers
"
(
msg
)
=
>
{
Services
.
obs
.
removeObserver
(
observer
"
chrome
-
document
-
global
-
created
"
)
;
Services
.
obs
.
removeObserver
(
observer
"
content
-
document
-
global
-
created
"
)
;
}
)
;
Services
.
obs
.
addObserver
(
observer
"
chrome
-
document
-
global
-
created
"
false
)
;
Services
.
obs
.
addObserver
(
observer
"
content
-
document
-
global
-
created
"
false
)
;
