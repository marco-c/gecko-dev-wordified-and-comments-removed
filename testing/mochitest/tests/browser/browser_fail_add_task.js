"
use
strict
"
;
setExpectedFailuresForSelfTest
(
4
)
;
function
rejectOnNextTick
(
error
)
{
return
new
Promise
(
(
resolve
reject
)
=
>
executeSoon
(
(
)
=
>
reject
(
error
)
)
)
;
}
add_task
(
function
failWithoutError
(
)
{
yield
rejectOnNextTick
(
undefined
)
;
}
)
;
add_task
(
function
failWithString
(
)
{
yield
rejectOnNextTick
(
"
This
is
a
string
"
)
;
}
)
;
add_task
(
function
failWithInt
(
)
{
yield
rejectOnNextTick
(
42
)
;
}
)
;
add_task
(
function
failWithError
(
)
{
yield
rejectOnNextTick
(
new
Error
(
"
This
is
an
error
"
)
)
;
}
)
;
