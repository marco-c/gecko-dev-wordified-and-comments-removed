'
use
strict
'
;
const
kDone
=
Symbol
(
'
kDone
'
)
;
const
kRun
=
Symbol
(
'
kRun
'
)
;
class
Limiter
{
constructor
(
concurrency
)
{
this
[
kDone
]
=
(
)
=
>
{
this
.
pending
-
-
;
this
[
kRun
]
(
)
;
}
;
this
.
concurrency
=
concurrency
|
|
Infinity
;
this
.
jobs
=
[
]
;
this
.
pending
=
0
;
}
add
(
job
)
{
this
.
jobs
.
push
(
job
)
;
this
[
kRun
]
(
)
;
}
[
kRun
]
(
)
{
if
(
this
.
pending
=
=
=
this
.
concurrency
)
return
;
if
(
this
.
jobs
.
length
)
{
const
job
=
this
.
jobs
.
shift
(
)
;
this
.
pending
+
+
;
job
(
this
[
kDone
]
)
;
}
}
}
module
.
exports
=
Limiter
;
