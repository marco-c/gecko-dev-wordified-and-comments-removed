"
use
strict
"
;
const
{
classes
:
Cc
interfaces
:
Ci
utils
:
Cu
results
:
Cr
}
=
Components
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
AddonManager
.
jsm
"
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
FileUtils
.
jsm
"
)
;
Cu
.
import
(
"
chrome
:
/
/
marionette
/
content
/
error
.
js
"
)
;
this
.
EXPORTED_SYMBOLS
=
[
"
addon
"
]
;
this
.
addon
=
{
}
;
addon
.
install
=
function
(
path
temporary
=
false
)
{
return
new
Promise
(
(
resolve
reject
)
=
>
{
let
listener
=
{
onInstallEnded
:
function
(
install
addon
)
{
resolve
(
addon
.
id
)
;
}
onInstallFailed
:
function
(
install
)
{
reject
(
new
AddonError
(
install
.
error
)
)
;
}
onInstalled
:
function
(
addon
)
{
AddonManager
.
removeAddonListener
(
listener
)
;
resolve
(
addon
.
id
)
;
}
}
;
let
file
=
new
FileUtils
.
File
(
path
)
;
if
(
temp
)
{
AddonManager
.
addAddonListener
(
listener
)
;
AddonManager
.
installTemporaryAddon
(
file
)
;
}
else
{
AddonManager
.
getInstallForFile
(
file
function
(
aInstall
)
{
if
(
aInstall
.
error
!
=
0
)
{
reject
(
new
AddonError
(
aInstall
.
error
)
)
;
}
aInstall
.
addListener
(
listener
)
;
aInstall
.
install
(
)
;
}
)
;
}
}
)
;
}
;
addon
.
uninstall
=
function
(
id
)
{
return
new
Promise
(
resolve
=
>
{
AddonManager
.
getAddonByID
(
arguments
[
0
]
function
(
addon
)
{
addon
.
uninstall
(
)
;
}
)
;
}
)
;
}
;
