from
marionette_driver
import
By
from
marionette_harness
import
MarionetteTestCase
WindowManagerMixin
class
TestSwitchWindow
(
WindowManagerMixin
MarionetteTestCase
)
:
    
def
setUp
(
self
)
:
        
super
(
TestSwitchWindow
self
)
.
setUp
(
)
        
self
.
marionette
.
set_context
(
"
chrome
"
)
    
def
tearDown
(
self
)
:
        
self
.
close_all_windows
(
)
        
super
(
TestSwitchWindow
self
)
.
tearDown
(
)
    
def
test_windows
(
self
)
:
        
def
open_browser_with_js
(
)
:
            
self
.
marionette
.
execute_script
(
"
window
.
open
(
)
;
"
)
        
new_window
=
self
.
open_window
(
trigger
=
open_browser_with_js
)
        
self
.
assertEqual
(
self
.
marionette
.
current_chrome_window_handle
self
.
start_window
)
        
self
.
marionette
.
switch_to_window
(
new_window
)
        
self
.
assertEqual
(
self
.
marionette
.
current_chrome_window_handle
new_window
)
        
self
.
assertNotEqual
(
self
.
marionette
.
current_chrome_window_handle
self
.
start_window
)
        
self
.
marionette
.
switch_to_window
(
self
.
start_window
)
        
self
.
assertEqual
(
self
.
marionette
.
current_chrome_window_handle
self
.
start_window
)
        
self
.
marionette
.
close_chrome_window
(
)
        
self
.
assertNotIn
(
self
.
start_window
self
.
marionette
.
chrome_window_handles
)
        
self
.
assertEqual
(
self
.
marionette
.
current_chrome_window_handle
self
.
start_window
)
        
self
.
assertEqual
(
len
(
self
.
marionette
.
chrome_window_handles
)
len
(
self
.
start_windows
)
)
    
def
test_should_load_and_close_a_window
(
self
)
:
        
def
open_window_with_link
(
)
:
            
test_html
=
self
.
marionette
.
absolute_url
(
"
test_windows
.
html
"
)
            
with
self
.
marionette
.
using_context
(
"
content
"
)
:
                
self
.
marionette
.
navigate
(
test_html
)
                
self
.
marionette
.
find_element
(
By
.
LINK_TEXT
"
Open
new
window
"
)
.
click
(
)
        
new_window
=
self
.
open_window
(
trigger
=
open_window_with_link
)
        
self
.
marionette
.
switch_to_window
(
new_window
)
        
self
.
assertEqual
(
self
.
marionette
.
current_chrome_window_handle
new_window
)
        
self
.
assertEqual
(
len
(
self
.
marionette
.
chrome_window_handles
)
2
)
        
with
self
.
marionette
.
using_context
(
'
content
'
)
:
            
self
.
assertEqual
(
self
.
marionette
.
title
"
We
Arrive
Here
"
)
        
self
.
marionette
.
close_chrome_window
(
)
        
self
.
marionette
.
switch_to_window
(
self
.
start_window
)
        
self
.
assertEqual
(
len
(
self
.
marionette
.
chrome_window_handles
)
1
)
