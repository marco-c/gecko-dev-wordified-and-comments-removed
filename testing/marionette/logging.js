"
use
strict
"
;
this
.
EXPORTED_SYMBOLS
=
[
"
logging
"
]
;
this
.
logging
=
{
}
;
logging
.
ContentLogger
=
class
{
constructor
(
)
{
this
.
logs_
=
[
]
;
}
log
(
message
level
=
"
INFO
"
)
{
let
now
=
(
new
Date
(
)
)
.
toString
(
)
;
this
.
logs_
.
push
(
[
level
message
now
]
)
;
}
addAll
(
messages
)
{
for
(
let
message
of
messages
)
{
this
.
logs_
.
push
(
message
)
;
}
}
get
(
)
{
let
logs
=
this
.
logs_
;
this
.
logs_
=
[
]
;
return
logs
;
}
}
;
logging
.
Adapter
=
class
{
constructor
(
logger
=
null
)
{
this
.
logger
=
logger
;
}
get
exports
(
)
{
return
new
Map
(
[
[
"
log
"
this
.
log
.
bind
(
this
)
]
]
)
;
}
log
(
message
level
=
"
INFO
"
)
{
dump
(
MARIONETTE
LOG
:
{
level
}
:
{
message
}
\
n
)
;
if
(
this
.
logger
)
{
this
.
logger
.
log
(
message
level
)
;
}
}
}
;
