"
use
strict
"
;
var
helpers
=
require
(
"
.
.
/
helpers
"
)
;
var
cpows
=
new
Set
(
[
/
^
gBrowser
\
.
contentWindow
/
/
^
gBrowser
\
.
contentDocument
/
/
^
gBrowser
\
.
selectedBrowser
.
contentWindow
/
/
^
browser
\
.
contentDocument
/
/
^
window
\
.
content
/
]
)
;
module
.
exports
=
function
(
context
)
{
function
showError
(
context
node
identifier
)
{
context
.
report
(
{
node
:
node
message
:
identifier
+
"
is
a
possible
Cross
Process
Object
Wrapper
(
CPOW
)
.
"
}
)
;
}
return
{
MemberExpression
:
function
(
node
)
{
if
(
!
helpers
.
getIsBrowserMochitest
(
this
)
)
{
return
;
}
var
expression
=
context
.
getSource
(
node
)
;
for
(
var
cpow
of
cpows
)
{
if
(
cpow
.
test
(
expression
)
)
{
showError
(
context
node
expression
)
;
return
;
}
}
if
(
helpers
.
getIsGlobalScope
(
context
)
)
{
if
(
/
^
content
\
.
/
.
test
(
expression
)
)
{
showError
(
context
node
expression
)
;
return
;
}
}
}
Identifier
:
function
(
node
)
{
if
(
!
helpers
.
getIsBrowserMochitest
(
this
)
)
{
return
;
}
var
expression
=
context
.
getSource
(
node
)
;
if
(
expression
=
=
"
content
"
|
|
/
^
content
\
.
/
.
test
(
expression
)
)
{
if
(
node
.
parent
.
type
=
=
=
"
MemberExpression
"
&
&
node
.
parent
.
object
&
&
node
.
parent
.
object
.
type
=
=
=
"
Identifier
"
&
&
node
.
parent
.
object
.
name
!
=
"
content
"
)
{
return
;
}
showError
(
context
node
expression
)
;
return
;
}
}
}
;
}
;
