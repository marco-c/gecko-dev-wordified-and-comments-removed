#
ifndef
mozilla_net_WebSocketConnectionChild_h
#
define
mozilla_net_WebSocketConnectionChild_h
#
include
"
mozilla
/
net
/
PWebSocketConnectionChild
.
h
"
#
include
"
mozilla
/
net
/
WebSocketConnectionListener
.
h
"
#
include
"
nsIHttpChannelInternal
.
h
"
namespace
mozilla
{
namespace
net
{
class
WebSocketConnection
;
class
WebSocketConnectionChild
final
:
public
PWebSocketConnectionChild
public
nsIHttpUpgradeListener
public
WebSocketConnectionListener
{
public
:
NS_DECL_THREADSAFE_ISUPPORTS
NS_DECL_NSIHTTPUPGRADELISTENER
WebSocketConnectionChild
(
)
;
void
Init
(
uint32_t
aListenerId
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvWriteOutputData
(
nsTArray
<
uint8_t
>
&
&
aData
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvStartReading
(
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvDrainSocketData
(
)
;
mozilla
:
:
ipc
:
:
IPCResult
Recv__delete__
(
)
override
;
void
ActorDestroy
(
ActorDestroyReason
aWhy
)
override
;
nsresult
OnWebSocketConnectionAvailable
(
WebSocketConnectionBase
*
aConnection
)
override
{
return
NS_ERROR_NOT_IMPLEMENTED
;
}
void
OnError
(
nsresult
aStatus
)
override
;
void
OnTCPClosed
(
)
override
;
nsresult
OnDataReceived
(
uint8_t
*
aData
uint32_t
aCount
)
override
;
private
:
virtual
~
WebSocketConnectionChild
(
)
;
RefPtr
<
WebSocketConnection
>
mConnection
;
nsCOMPtr
<
nsIEventTarget
>
mSocketThread
;
}
;
}
}
#
endif
