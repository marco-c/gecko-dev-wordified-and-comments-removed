#
ifndef
nsDataHandler_h___
#
define
nsDataHandler_h___
#
include
"
nsIProtocolHandler
.
h
"
#
include
"
nsWeakReference
.
h
"
class
nsDataHandler
:
public
nsIProtocolHandler
public
nsSupportsWeakReference
{
virtual
~
nsDataHandler
(
)
=
default
;
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIPROTOCOLHANDLER
nsDataHandler
(
)
=
default
;
static
nsresult
CreateNewURI
(
const
nsACString
&
aSpec
const
char
*
aCharset
nsIURI
*
aBaseURI
nsIURI
*
*
result
)
;
[
[
nodiscard
]
]
static
nsresult
Create
(
const
nsIID
&
aIID
void
*
*
aResult
)
;
[
[
nodiscard
]
]
static
nsresult
ParseURI
(
const
nsACString
&
spec
nsCString
&
contentType
nsCString
*
contentCharset
bool
&
isBase64
nsCString
*
dataBuffer
)
;
[
[
nodiscard
]
]
static
nsresult
ParsePathWithoutRef
(
const
nsACString
&
aPath
nsCString
&
aContentType
nsCString
*
aContentCharset
bool
&
aIsBase64
nsDependentCSubstring
*
aDataBuffer
)
;
}
;
#
endif
