#
ifndef
nsHttpChunkedDecoder_h__
#
define
nsHttpChunkedDecoder_h__
#
include
"
nsError
.
h
"
#
include
"
nsString
.
h
"
#
include
"
nsHttpHeaderArray
.
h
"
namespace
mozilla
{
namespace
net
{
class
nsHttpChunkedDecoder
{
public
:
nsHttpChunkedDecoder
(
)
=
default
;
~
nsHttpChunkedDecoder
(
)
=
default
;
bool
ReachedEOF
(
)
{
return
mReachedEOF
;
}
[
[
nodiscard
]
]
nsresult
HandleChunkedContent
(
char
*
buf
uint32_t
count
uint32_t
*
contentRead
uint32_t
*
contentRemaining
)
;
nsHttpHeaderArray
*
Trailers
(
)
{
return
mTrailers
.
get
(
)
;
}
UniquePtr
<
nsHttpHeaderArray
>
TakeTrailers
(
)
{
return
std
:
:
move
(
mTrailers
)
;
}
uint32_t
GetChunkRemaining
(
)
{
return
mChunkRemaining
;
}
private
:
[
[
nodiscard
]
]
nsresult
ParseChunkRemaining
(
char
*
buf
uint32_t
count
uint32_t
*
bytesConsumed
)
;
private
:
UniquePtr
<
nsHttpHeaderArray
>
mTrailers
;
uint32_t
mChunkRemaining
{
0
}
;
nsCString
mLineBuf
;
bool
mReachedEOF
{
false
}
;
bool
mWaitEOF
{
false
}
;
}
;
}
}
#
endif
