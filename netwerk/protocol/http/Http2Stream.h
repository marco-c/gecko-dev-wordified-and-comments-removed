#
ifndef
mozilla_net_Http2Stream_h
#
define
mozilla_net_Http2Stream_h
#
include
"
Http2StreamBase
.
h
"
namespace
mozilla
:
:
net
{
class
Http2Stream
:
public
Http2StreamBase
{
public
:
Http2Stream
(
nsAHttpTransaction
*
httpTransaction
Http2Session
*
session
int32_t
priority
uint64_t
bcId
)
;
nsresult
Close
(
nsresult
reason
)
override
;
Http2Stream
*
GetHttp2Stream
(
)
override
{
return
this
;
}
uint32_t
GetWireStreamId
(
)
override
;
nsresult
OnWriteSegment
(
char
*
buf
uint32_t
count
uint32_t
*
countWritten
)
override
;
nsresult
CheckPushCache
(
)
;
Http2PushedStream
*
PushSource
(
)
{
return
mPushSource
;
}
bool
IsReadingFromPushStream
(
)
;
void
ClearPushSource
(
)
;
nsAHttpTransaction
*
Transaction
(
)
override
{
return
mTransaction
;
}
nsIRequestContext
*
RequestContext
(
)
override
{
return
mTransaction
?
mTransaction
-
>
RequestContext
(
)
:
nullptr
;
}
protected
:
~
Http2Stream
(
)
;
nsresult
CallToReadData
(
uint32_t
count
uint32_t
*
countRead
)
override
;
nsresult
CallToWriteData
(
uint32_t
count
uint32_t
*
countWritten
)
override
;
nsresult
GenerateHeaders
(
nsCString
&
aCompressedData
uint8_t
&
firstFrameFlags
)
override
;
private
:
void
AdjustPushedPriority
(
)
;
Http2PushedStream
*
mPushSource
{
nullptr
}
;
RefPtr
<
nsAHttpTransaction
>
mTransaction
;
}
;
}
#
endif
