#
ifndef
mozilla_net_TrackingDummyChannelChild_h
#
define
mozilla_net_TrackingDummyChannelChild_h
#
include
"
mozilla
/
net
/
PTrackingDummyChannelChild
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
<
functional
>
class
nsIHttpChannel
;
class
nsIURI
;
namespace
mozilla
{
namespace
net
{
class
TrackingDummyChannelChild
final
:
public
PTrackingDummyChannelChild
{
friend
class
PTrackingDummyChannelChild
;
public
:
static
bool
Create
(
nsIHttpChannel
*
aChannel
nsIURI
*
aURI
const
std
:
:
function
<
void
(
bool
)
>
&
aCallback
)
;
TrackingDummyChannelChild
(
)
;
~
TrackingDummyChannelChild
(
)
;
private
:
void
Initialize
(
nsIHttpChannel
*
aChannel
nsIURI
*
aURI
bool
aIsThirdParty
const
std
:
:
function
<
void
(
bool
)
>
&
aCallback
)
;
mozilla
:
:
ipc
:
:
IPCResult
Recv__delete__
(
const
bool
&
aTrackingResource
)
override
;
nsCOMPtr
<
nsIHttpChannel
>
mChannel
;
nsCOMPtr
<
nsIURI
>
mURI
;
std
:
:
function
<
void
(
bool
)
>
mCallback
;
bool
mIsThirdParty
;
}
;
}
}
#
endif
