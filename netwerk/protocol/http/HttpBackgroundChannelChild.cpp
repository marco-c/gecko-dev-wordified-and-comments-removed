#
include
"
HttpBackgroundChannelChild
.
h
"
using
mozilla
:
:
ipc
:
:
IPCResult
;
namespace
mozilla
{
namespace
net
{
HttpBackgroundChannelChild
:
:
HttpBackgroundChannelChild
(
)
{
}
HttpBackgroundChannelChild
:
:
~
HttpBackgroundChannelChild
(
)
{
}
IPCResult
HttpBackgroundChannelChild
:
:
RecvOnStartRequestSent
(
)
{
return
IPC_OK
(
)
;
}
IPCResult
HttpBackgroundChannelChild
:
:
RecvOnTransportAndData
(
const
nsresult
&
aChannelStatus
const
nsresult
&
aTransportStatus
const
uint64_t
&
aOffset
const
uint32_t
&
aCount
const
nsCString
&
aData
)
{
return
IPC_OK
(
)
;
}
IPCResult
HttpBackgroundChannelChild
:
:
RecvOnStopRequest
(
const
nsresult
&
aChannelStatus
const
ResourceTimingStruct
&
aTiming
)
{
return
IPC_OK
(
)
;
}
IPCResult
HttpBackgroundChannelChild
:
:
RecvOnProgress
(
const
int64_t
&
aProgress
const
int64_t
&
aProgressMax
)
{
return
IPC_OK
(
)
;
}
IPCResult
HttpBackgroundChannelChild
:
:
RecvOnStatus
(
const
nsresult
&
aStatus
)
{
return
IPC_OK
(
)
;
}
IPCResult
HttpBackgroundChannelChild
:
:
RecvFlushedForDiversion
(
)
{
return
IPC_OK
(
)
;
}
IPCResult
HttpBackgroundChannelChild
:
:
RecvDivertMessages
(
)
{
return
IPC_OK
(
)
;
}
void
HttpBackgroundChannelChild
:
:
ActorDestroy
(
ActorDestroyReason
aWhy
)
{
}
}
}
