#
ifndef
mozilla_net_Http2StreamWebSocket_h
#
define
mozilla_net_Http2StreamWebSocket_h
#
include
"
Http2StreamBase
.
h
"
namespace
mozilla
{
namespace
net
{
class
Http2StreamWebSocket
:
public
Http2StreamBase
{
public
:
Http2StreamWebSocket
(
nsAHttpTransaction
*
httpTransaction
Http2Session
*
session
int32_t
priority
uint64_t
bcId
)
;
nsAHttpTransaction
*
Transaction
(
)
override
{
return
mTransaction
;
}
nsIRequestContext
*
RequestContext
(
)
override
{
return
mTransaction
?
mTransaction
-
>
RequestContext
(
)
:
nullptr
;
}
void
CloseStream
(
nsresult
reason
)
override
;
protected
:
nsresult
CallToReadData
(
uint32_t
count
uint32_t
*
countRead
)
override
;
nsresult
CallToWriteData
(
uint32_t
count
uint32_t
*
countWritten
)
override
;
void
HandleResponseHeaders
(
nsACString
&
aHeadersOut
int32_t
httpResponseCode
)
override
;
nsresult
GenerateHeaders
(
nsCString
&
aCompressedData
uint8_t
&
firstFrameFlags
)
override
;
private
:
bool
MapStreamToHttpConnection
(
const
nsACString
&
aFlat407Headers
)
;
RefPtr
<
nsAHttpTransaction
>
mTransaction
;
}
;
}
}
#
endif
