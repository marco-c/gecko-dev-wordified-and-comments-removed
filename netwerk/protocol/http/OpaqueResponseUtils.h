#
ifndef
mozilla_net_OpaqueResponseUtils_h
#
define
mozilla_net_OpaqueResponseUtils_h
#
include
"
nsIContentPolicy
.
h
"
namespace
mozilla
{
namespace
net
{
class
nsHttpResponseHead
;
enum
class
OpaqueResponseBlockedReason
:
uint32_t
{
ALLOWED_SAFE_LISTED
BLOCKED_BLOCKLISTED_NEVER_SNIFFED
BLOCKED_206_AND_BLOCKLISTED
BLOCKED_NOSNIFF_AND_EITHER_BLOCKLISTED_OR_TEXTPLAIN
BLOCKED_SHOULD_SNIFF
}
;
OpaqueResponseBlockedReason
GetOpaqueResponseBlockedReason
(
const
nsHttpResponseHead
&
aResponseHead
)
;
Result
<
std
:
:
tuple
<
int64_t
int64_t
int64_t
>
nsresult
>
ParseContentRangeHeaderString
(
const
nsAutoCString
&
aRangeStr
)
;
bool
IsFirstPartialResponse
(
nsHttpResponseHead
&
aResponseHead
)
;
}
}
#
endif
