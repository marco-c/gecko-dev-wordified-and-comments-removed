#
ifndef
mozilla_net_capsule_parser_h
#
define
mozilla_net_capsule_parser_h
#
include
"
Capsule
.
h
"
#
include
"
mozilla
/
Result
.
h
"
#
include
"
mozilla
/
Span
.
h
"
namespace
mozilla
:
:
net
{
class
CapsuleDecoder
;
class
CapsuleParser
final
{
public
:
class
Listener
{
public
:
NS_INLINE_DECL_PURE_VIRTUAL_REFCOUNTING
virtual
bool
OnCapsule
(
Capsule
&
&
aCapsule
)
=
0
;
virtual
void
OnCapsuleParseFailure
(
nsresult
aError
)
=
0
;
protected
:
virtual
~
Listener
(
)
=
default
;
}
;
explicit
CapsuleParser
(
Listener
*
aListener
)
;
~
CapsuleParser
(
)
=
default
;
bool
ProcessCapsuleData
(
const
uint8_t
*
aData
uint32_t
aCount
)
;
bool
IsBufferEmpty
(
)
const
{
return
mBuffer
.
IsEmpty
(
)
;
}
private
:
bool
mProcessing
=
false
;
RefPtr
<
Listener
>
mListener
;
nsTArray
<
uint8_t
>
mBuffer
;
Result
<
size_t
nsresult
>
ParseCapsuleData
(
Span
<
const
uint8_t
>
aData
)
;
Result
<
Capsule
nsresult
>
ParseCapsulePayload
(
CapsuleDecoder
&
aDecoder
CapsuleType
aType
size_t
aPayloadLength
)
;
}
;
}
#
endif
