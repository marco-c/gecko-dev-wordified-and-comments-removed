#
ifndef
nsAboutCache_h__
#
define
nsAboutCache_h__
#
include
"
nsIAboutModule
.
h
"
#
include
"
nsICacheStorageVisitor
.
h
"
#
include
"
nsICacheStorage
.
h
"
#
include
"
nsString
.
h
"
#
include
"
nsIOutputStream
.
h
"
#
include
"
nsILoadContextInfo
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsTArray
.
h
"
class
nsAboutCache
final
:
public
nsIAboutModule
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIABOUTMODULE
nsAboutCache
(
)
{
}
static
nsresult
Create
(
nsISupports
*
aOuter
REFNSIID
aIID
void
*
*
aResult
)
;
static
nsresult
GetStorage
(
nsACString
const
&
storageName
nsILoadContextInfo
*
loadInfo
nsICacheStorage
*
*
storage
)
;
protected
:
virtual
~
nsAboutCache
(
)
{
}
class
Channel
final
:
public
nsIChannel
public
nsICacheStorageVisitor
{
NS_DECL_ISUPPORTS
NS_DECL_NSICACHESTORAGEVISITOR
NS_FORWARD_SAFE_NSICHANNEL
(
mChannel
)
NS_FORWARD_SAFE_NSIREQUEST
(
mChannel
)
private
:
virtual
~
Channel
(
)
{
}
public
:
nsresult
Init
(
nsIURI
*
aURI
nsILoadInfo
*
aLoadInfo
)
;
nsresult
ParseURI
(
nsIURI
*
uri
nsACString
&
storage
)
;
nsresult
VisitNextStorage
(
)
;
void
FireVisitStorage
(
)
;
nsresult
VisitStorage
(
nsACString
const
&
storageName
)
;
nsresult
FlushBuffer
(
)
;
bool
mOverview
;
bool
mEntriesHeaderAdded
;
bool
mCancel
;
nsCOMPtr
<
nsILoadContextInfo
>
mLoadInfo
;
nsCString
mContextString
;
nsTArray
<
nsCString
>
mStorageList
;
nsCString
mStorageName
;
nsCOMPtr
<
nsICacheStorage
>
mStorage
;
nsCString
mBuffer
;
nsCOMPtr
<
nsIOutputStream
>
mStream
;
nsCOMPtr
<
nsIChannel
>
mChannel
;
}
;
}
;
#
define
NS_ABOUT_CACHE_MODULE_CID
\
{
/
*
9158c470
-
86e4
-
11d4
-
9be2
-
00e09872a416
*
/
\
0x9158c470
\
0x86e4
\
0x11d4
\
{
0x9b
0xe2
0x00
0xe0
0x98
0x72
0xa4
0x16
}
\
}
#
endif
