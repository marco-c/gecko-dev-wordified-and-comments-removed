#
include
"
FileChannelChild
.
h
"
#
include
"
mozilla
/
Unused
.
h
"
#
include
"
mozilla
/
net
/
NeckoChild
.
h
"
namespace
mozilla
{
namespace
net
{
NS_IMPL_ISUPPORTS_INHERITED
(
FileChannelChild
nsFileChannel
nsIChildChannel
)
FileChannelChild
:
:
FileChannelChild
(
nsIURI
*
uri
)
:
nsFileChannel
(
uri
)
mIPCOpen
(
false
)
{
}
NS_IMETHODIMP
FileChannelChild
:
:
ConnectParent
(
uint32_t
id
)
{
if
(
!
gNeckoChild
-
>
SendPFileChannelConstructor
(
this
id
)
)
{
return
NS_ERROR_FAILURE
;
}
AddIPDLReference
(
)
;
return
NS_OK
;
}
NS_IMETHODIMP
FileChannelChild
:
:
CompleteRedirectSetup
(
nsIStreamListener
*
listener
nsISupports
*
ctx
)
{
nsresult
rv
;
if
(
mLoadInfo
&
&
mLoadInfo
-
>
GetEnforceSecurity
(
)
)
{
MOZ_ASSERT
(
!
ctx
"
Context
should
be
null
"
)
;
rv
=
AsyncOpen2
(
listener
)
;
}
else
{
rv
=
AsyncOpen
(
listener
ctx
)
;
}
if
(
NS_WARN_IF
(
NS_FAILED
(
rv
)
)
)
{
return
rv
;
}
if
(
mIPCOpen
)
{
Unused
<
<
Send__delete__
(
this
)
;
}
return
NS_OK
;
}
void
FileChannelChild
:
:
AddIPDLReference
(
)
{
AddRef
(
)
;
mIPCOpen
=
true
;
}
void
FileChannelChild
:
:
ActorDestroy
(
ActorDestroyReason
why
)
{
MOZ_ASSERT
(
mIPCOpen
)
;
mIPCOpen
=
false
;
Release
(
)
;
}
}
}
