#
include
"
FileChannelParent
.
h
"
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
dom
/
ContentParent
.
h
"
#
include
"
mozilla
/
net
/
NeckoParent
.
h
"
#
include
"
nsNetUtil
.
h
"
#
include
"
nsIChannel
.
h
"
#
ifdef
FUZZING_SNAPSHOT
#
define
MOZ_ALWAYS_SUCCEEDS_FUZZING
(
.
.
.
)
(
void
)
__VA_ARGS__
#
else
#
define
MOZ_ALWAYS_SUCCEEDS_FUZZING
(
.
.
.
)
MOZ_ALWAYS_SUCCEEDS
(
__VA_ARGS__
)
#
endif
namespace
mozilla
{
namespace
net
{
NS_IMPL_ISUPPORTS
(
FileChannelParent
nsIParentChannel
nsIStreamListener
)
bool
FileChannelParent
:
:
Init
(
const
uint64_t
&
aChannelId
)
{
nsCOMPtr
<
nsIChannel
>
channel
;
MOZ_ALWAYS_SUCCEEDS_FUZZING
(
NS_LinkRedirectChannels
(
aChannelId
this
getter_AddRefs
(
channel
)
)
)
;
return
true
;
}
NS_IMETHODIMP
FileChannelParent
:
:
SetParentListener
(
ParentChannelListener
*
aListener
)
{
return
NS_OK
;
}
NS_IMETHODIMP
FileChannelParent
:
:
NotifyClassificationFlags
(
uint32_t
aClassificationFlags
bool
aIsThirdParty
)
{
return
NS_OK
;
}
NS_IMETHODIMP
FileChannelParent
:
:
SetClassifierMatchedInfo
(
const
nsACString
&
aList
const
nsACString
&
aProvider
const
nsACString
&
aFullHash
)
{
return
NS_OK
;
}
NS_IMETHODIMP
FileChannelParent
:
:
SetClassifierMatchedTrackingInfo
(
const
nsACString
&
aLists
const
nsACString
&
aFullHashes
)
{
return
NS_OK
;
}
NS_IMETHODIMP
FileChannelParent
:
:
Delete
(
)
{
return
NS_OK
;
}
NS_IMETHODIMP
FileChannelParent
:
:
GetRemoteType
(
nsACString
&
aRemoteType
)
{
if
(
!
CanSend
(
)
)
{
return
NS_ERROR_UNEXPECTED
;
}
dom
:
:
PContentParent
*
pcp
=
Manager
(
)
-
>
Manager
(
)
;
aRemoteType
=
static_cast
<
dom
:
:
ContentParent
*
>
(
pcp
)
-
>
GetRemoteType
(
)
;
return
NS_OK
;
}
void
FileChannelParent
:
:
ActorDestroy
(
ActorDestroyReason
why
)
{
}
NS_IMETHODIMP
FileChannelParent
:
:
OnStartRequest
(
nsIRequest
*
aRequest
)
{
return
NS_BINDING_ABORTED
;
}
NS_IMETHODIMP
FileChannelParent
:
:
OnStopRequest
(
nsIRequest
*
aRequest
nsresult
aStatusCode
)
{
MOZ_ASSERT
(
NS_FAILED
(
aStatusCode
)
)
;
return
NS_OK
;
}
NS_IMETHODIMP
FileChannelParent
:
:
OnDataAvailable
(
nsIRequest
*
aRequest
nsIInputStream
*
aInputStream
uint64_t
aOffset
uint32_t
aCount
)
{
MOZ_CRASH
(
"
Should
never
be
called
"
)
;
}
}
}
