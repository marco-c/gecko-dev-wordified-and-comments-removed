#
ifndef
MozSrcProtocolHandler_h___
#
define
MozSrcProtocolHandler_h___
#
include
"
nsIProtocolHandler
.
h
"
#
include
"
nsISubstitutingProtocolHandler
.
h
"
#
include
"
SubstitutingProtocolHandler
.
h
"
namespace
mozilla
{
namespace
net
{
class
MozSrcProtocolHandler
final
:
public
nsISubstitutingProtocolHandler
public
SubstitutingProtocolHandler
public
nsSupportsWeakReference
{
public
:
NS_DECL_ISUPPORTS_INHERITED
NS_FORWARD_NSIPROTOCOLHANDLER
(
SubstitutingProtocolHandler
:
:
)
NS_FORWARD_NSISUBSTITUTINGPROTOCOLHANDLER
(
SubstitutingProtocolHandler
:
:
)
static
already_AddRefed
<
MozSrcProtocolHandler
>
GetSingleton
(
)
;
MozSrcProtocolHandler
(
)
;
protected
:
~
MozSrcProtocolHandler
(
)
=
default
;
[
[
nodiscard
]
]
virtual
bool
ResolveSpecialCases
(
const
nsACString
&
aHost
const
nsACString
&
aPath
const
nsACString
&
aPathname
nsACString
&
aResult
)
override
;
[
[
nodiscard
]
]
nsresult
GetSubstitutionInternal
(
const
nsACString
&
aRoot
nsIURI
*
*
aResult
)
override
;
private
:
static
mozilla
:
:
StaticRefPtr
<
MozSrcProtocolHandler
>
sSingleton
;
nsresult
Init
(
)
;
nsCString
mGREURI
;
}
;
}
}
#
endif
