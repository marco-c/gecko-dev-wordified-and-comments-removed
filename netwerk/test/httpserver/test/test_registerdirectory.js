ChromeUtils
.
defineLazyGetter
(
this
"
BASE
"
function
(
)
{
return
"
http
:
/
/
localhost
:
"
+
srv
.
identity
.
primaryPort
;
}
)
;
function
nocache
(
ch
)
{
ch
.
loadFlags
|
=
Ci
.
nsIRequest
.
LOAD_BYPASS_CACHE
;
}
function
notFound
(
ch
)
{
Assert
.
equal
(
ch
.
responseStatus
404
)
;
Assert
.
ok
(
!
ch
.
requestSucceeded
)
;
}
function
checkOverride
(
ch
)
{
Assert
.
equal
(
ch
.
responseStatus
200
)
;
Assert
.
equal
(
ch
.
responseStatusText
"
OK
"
)
;
Assert
.
ok
(
ch
.
requestSucceeded
)
;
Assert
.
equal
(
ch
.
getResponseHeader
(
"
Override
-
Succeeded
"
)
"
yes
"
)
;
}
function
check200
(
ch
)
{
Assert
.
equal
(
ch
.
responseStatus
200
)
;
Assert
.
equal
(
ch
.
responseStatusText
"
OK
"
)
;
}
function
checkFile
(
ch
status
data
)
{
Assert
.
equal
(
ch
.
responseStatus
200
)
;
Assert
.
ok
(
ch
.
requestSucceeded
)
;
var
actualFile
=
serverBasePath
.
clone
(
)
;
actualFile
.
append
(
"
test_registerdirectory
.
js
"
)
;
Assert
.
equal
(
ch
.
getResponseHeader
(
"
Content
-
Length
"
)
actualFile
.
fileSize
.
toString
(
)
)
;
Assert
.
equal
(
data
.
map
(
v
=
>
String
.
fromCharCode
(
v
)
)
.
join
(
"
"
)
fileContents
(
actualFile
)
)
;
}
ChromeUtils
.
defineLazyGetter
(
this
"
tests
"
function
(
)
{
return
[
new
Test
(
BASE
+
"
/
test_registerdirectory
.
js
"
nocache
notFound
null
)
new
Test
(
BASE
+
"
/
test_registerdirectory
.
js
"
function
(
ch
)
{
nocache
(
ch
)
;
serverBasePath
=
testsDirectory
.
clone
(
)
;
srv
.
registerDirectory
(
"
/
"
serverBasePath
)
;
}
null
checkFile
)
new
Test
(
BASE
+
"
/
test_registerdirectory
.
js
"
function
(
ch
)
{
nocache
(
ch
)
;
serverBasePath
=
null
;
srv
.
registerDirectory
(
"
/
"
serverBasePath
)
;
}
notFound
null
)
new
Test
(
BASE
+
"
/
test_registerdirectory
.
js
"
function
(
ch
)
{
nocache
(
ch
)
;
srv
.
registerPathHandler
(
"
/
test_registerdirectory
.
js
"
override_test_registerdirectory
)
;
}
checkOverride
null
)
new
Test
(
BASE
+
"
/
test_registerdirectory
.
js
"
function
init_registerDirectory6
(
ch
)
{
nocache
(
ch
)
;
srv
.
registerPathHandler
(
"
/
test_registerdirectory
.
js
"
null
)
;
}
notFound
null
)
new
Test
(
BASE
+
"
/
test_registerdirectory
.
js
"
function
(
ch
)
{
nocache
(
ch
)
;
serverBasePath
=
testsDirectory
.
clone
(
)
;
srv
.
registerDirectory
(
"
/
"
serverBasePath
)
;
}
null
checkFile
)
new
Test
(
BASE
+
"
/
test_registerdirectory
.
js
"
function
(
ch
)
{
nocache
(
ch
)
;
srv
.
registerPathHandler
(
"
/
test_registerdirectory
.
js
"
override_test_registerdirectory
)
;
}
checkOverride
null
)
new
Test
(
BASE
+
"
/
test_registerdirectory
.
js
"
function
(
ch
)
{
nocache
(
ch
)
;
serverBasePath
=
null
;
srv
.
registerDirectory
(
"
/
"
serverBasePath
)
;
}
checkOverride
null
)
new
Test
(
BASE
+
"
/
test_registerdirectory
.
js
"
function
(
ch
)
{
nocache
(
ch
)
;
srv
.
registerPathHandler
(
"
/
test_registerdirectory
.
js
"
null
)
;
}
notFound
null
)
new
Test
(
BASE
+
"
/
foo
/
test_registerdirectory
.
js
"
function
(
ch
)
{
nocache
(
ch
)
;
serverBasePath
=
testsDirectory
.
clone
(
)
;
srv
.
registerDirectory
(
"
/
foo
/
"
serverBasePath
)
;
}
check200
null
)
new
Test
(
BASE
+
"
/
foo
/
test_registerdirectory
.
js
/
test_registerdirectory
.
js
"
nocache
notFound
null
)
new
Test
(
BASE
+
"
/
foo
/
test_registerdirectory
.
js
/
test_registerdirectory
.
js
"
function
(
ch
)
{
nocache
(
ch
)
;
srv
.
registerDirectory
(
"
/
foo
/
test_registerdirectory
.
js
/
"
serverBasePath
)
;
}
null
checkFile
)
new
Test
(
BASE
+
"
/
foo
/
test_registerdirectory
.
js
"
nocache
null
checkFile
)
new
Test
(
BASE
+
"
/
foo
/
test_registerdirectory
.
js
"
function
(
ch
)
{
nocache
(
ch
)
;
srv
.
registerDirectory
(
"
/
foo
/
"
null
)
;
}
notFound
null
)
new
Test
(
BASE
+
"
/
foo
/
test_registerdirectory
.
js
/
test_registerdirectory
.
js
"
nocache
null
checkFile
)
new
Test
(
BASE
+
"
/
foo
/
test_registerdirectory
.
js
/
test_registerdirectory
.
js
"
function
(
ch
)
{
nocache
(
ch
)
;
srv
.
registerDirectory
(
"
/
foo
/
test_registerdirectory
.
js
/
"
null
)
;
}
notFound
null
)
]
;
}
)
;
var
srv
;
var
serverBasePath
;
var
testsDirectory
;
function
run_test
(
)
{
testsDirectory
=
do_get_cwd
(
)
;
srv
=
createServer
(
)
;
srv
.
start
(
-
1
)
;
runHttpTests
(
tests
testComplete
(
srv
)
)
;
}
function
override_test_registerdirectory
(
metadata
response
)
{
response
.
setStatusLine
(
"
1
.
1
"
200
"
OK
"
)
;
response
.
setHeader
(
"
Override
-
Succeeded
"
"
yes
"
false
)
;
var
body
=
"
success
!
"
;
response
.
bodyOutputStream
.
write
(
body
body
.
length
)
;
}
