async
function
test
(
context
commands
)
{
let
rootUrl
=
"
https
:
/
/
www
.
google
.
com
/
"
;
let
waitTime
=
1000
;
const
driver
=
context
.
selenium
.
driver
;
const
webdriver
=
context
.
selenium
.
webdriver
;
if
(
(
typeof
context
.
options
.
browsertime
!
=
=
"
undefined
"
)
&
(
typeof
context
.
options
.
browsertime
.
waitTime
!
=
=
"
undefined
"
)
)
{
waitTime
=
context
.
options
.
browsertime
.
waitTime
;
}
await
commands
.
navigate
(
rootUrl
)
;
let
cycles
=
1
;
for
(
let
cycle
=
0
;
cycle
<
cycles
;
cycle
+
+
)
{
await
commands
.
navigate
(
rootUrl
)
;
await
commands
.
wait
.
byTime
(
1000
)
;
context
.
log
.
info
(
"
Setting
up
search
"
)
;
const
searchfield
=
driver
.
findElement
(
webdriver
.
By
.
name
(
"
q
"
)
)
;
searchfield
.
sendKeys
(
"
Python
\
n
"
)
;
await
commands
.
wait
.
byTime
(
5000
)
;
context
.
log
.
info
(
"
Start
search
"
)
;
await
commands
.
measure
.
start
(
"
pageload
"
)
;
await
commands
.
click
.
byJs
(
document
.
querySelector
(
"
input
[
name
=
'
btnK
'
]
"
)
)
;
await
commands
.
wait
.
byTime
(
5000
)
;
await
commands
.
measure
.
stop
(
)
;
context
.
log
.
info
(
"
Done
"
)
;
commands
.
measure
.
result
[
0
]
.
browserScripts
.
pageinfo
.
url
=
"
Google
Search
(
Python
)
"
;
context
.
log
.
info
(
Waiting
for
{
waitTime
}
milliseconds
)
;
await
commands
.
wait
.
byTime
(
waitTime
)
;
context
.
log
.
info
(
"
Going
to
second
page
of
search
results
"
)
;
await
commands
.
measure
.
start
(
"
pageload
"
)
;
await
commands
.
click
.
byIdAndWait
(
"
pnnext
"
)
;
await
commands
.
wait
.
byTime
(
3000
)
;
await
commands
.
measure
.
stop
(
)
;
commands
.
measure
.
result
[
1
]
.
browserScripts
.
pageinfo
.
url
=
"
Google
Search
(
Python
)
-
Next
Page
"
;
}
}
module
.
exports
=
{
test
owner
:
"
Network
Team
"
name
:
"
g
-
search
"
description
:
"
User
-
journey
live
site
test
for
google
search
"
}
;
