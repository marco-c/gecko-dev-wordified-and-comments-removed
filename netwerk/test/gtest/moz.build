UNIFIED_SOURCES
+
=
[
"
TestBase64Stream
.
cpp
"
"
TestBind
.
cpp
"
"
TestBufferedInputStream
.
cpp
"
"
TestCacheControlParser
.
cpp
"
"
TestCommon
.
cpp
"
"
TestCookie
.
cpp
"
"
TestDNSPacket
.
cpp
"
"
TestHeaders
.
cpp
"
"
TestHttpAtom
.
cpp
"
"
TestHttpAuthUtils
.
cpp
"
"
TestHttpChannel
.
cpp
"
"
TestHttpResponseHead
.
cpp
"
"
TestInputStreamTransport
.
cpp
"
"
TestIsValidIp
.
cpp
"
"
TestLinkHeader
.
cpp
"
"
TestMIMEInputStream
.
cpp
"
"
TestMozURL
.
cpp
"
"
TestProtocolProxyService
.
cpp
"
"
TestReadStreamToString
.
cpp
"
"
TestServerTimingHeader
.
cpp
"
"
TestSocketTransportService
.
cpp
"
"
TestSSLTokensCache
.
cpp
"
"
TestStandardURL
.
cpp
"
"
TestUDPSocket
.
cpp
"
]
if
CONFIG
[
"
OS_TARGET
"
]
=
=
"
WINNT
"
:
UNIFIED_SOURCES
+
=
[
"
TestNamedPipeService
.
cpp
"
]
if
not
(
CONFIG
[
"
OS_TARGET
"
]
=
=
"
WINNT
"
and
CONFIG
[
"
TARGET_CPU
"
]
=
=
"
aarch64
"
)
:
UNIFIED_SOURCES
+
=
[
"
TestPACMan
.
cpp
"
"
TestURIMutator
.
cpp
"
]
if
CONFIG
[
"
OS_TARGET
"
]
=
=
"
WINNT
"
:
UNIFIED_SOURCES
+
=
[
"
TestNetworkLinkIdHashingWindows
.
cpp
"
]
if
CONFIG
[
"
TARGET_OS
"
]
=
=
"
OSX
"
:
UNIFIED_SOURCES
+
=
[
"
TestNetworkLinkIdHashingDarwin
.
cpp
"
]
TEST_HARNESS_FILES
.
gtest
+
=
[
"
urltestdata
.
json
"
]
USE_LIBS
+
=
[
"
jsoncpp
"
]
LOCAL_INCLUDES
+
=
[
"
/
netwerk
/
base
"
"
/
netwerk
/
cookie
"
"
/
netwerk
/
protocol
/
http
"
"
/
toolkit
/
components
/
jsoncpp
/
include
"
"
/
xpcom
/
tests
/
gtest
"
]
if
CONFIG
[
"
OS_TARGET
"
]
=
=
"
WINNT
"
:
LOCAL_INCLUDES
+
=
[
"
/
netwerk
/
system
/
win32
"
]
if
CONFIG
[
"
TARGET_OS
"
]
=
=
"
OSX
"
:
LOCAL_INCLUDES
+
=
[
"
/
netwerk
/
system
/
mac
"
]
include
(
"
/
ipc
/
chromium
/
chromium
-
config
.
mozbuild
"
)
FINAL_LIBRARY
=
"
xul
-
gtest
"
LOCAL_INCLUDES
+
=
[
"
!
/
xpcom
"
"
/
xpcom
/
components
"
]
