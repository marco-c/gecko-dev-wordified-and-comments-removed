"
use
strict
"
;
const
{
request_count_checking
test_hint_preload_internal
test_hint_preload
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
testing
-
common
/
early_hint_preload_test_helper
.
jsm
"
)
;
const
START_VALUE
=
"
https
:
/
/
example
.
com
/
browser
/
netwerk
/
test
/
browser
/
early_hint_asset_html
.
sjs
?
as
=
style
&
hinted
=
1
"
;
add_setup
(
async
function
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
urlbar
.
suggest
.
quickactions
"
false
]
]
}
)
;
}
)
;
Services
.
prefs
.
setBoolPref
(
"
network
.
early
-
hints
.
enabled
"
true
)
;
add_task
(
async
function
user_initiated_load
(
)
{
let
headers
=
new
Headers
(
)
;
headers
.
append
(
"
X
-
Early
-
Hint
-
Count
-
Start
"
"
"
)
;
await
fetch
(
"
https
:
/
/
example
.
com
/
browser
/
netwerk
/
test
/
browser
/
early_hint_pixel_count
.
sjs
"
{
headers
}
)
;
info
(
"
Simple
user
initiated
load
"
)
;
let
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
)
;
Services
.
prefs
.
setBoolPref
(
"
security
.
disallow_non_local_systemprincipal_in_tests
"
true
)
;
gURLBar
.
value
=
START_VALUE
;
gURLBar
.
focus
(
)
;
EventUtils
.
synthesizeKey
(
"
KEY_Enter
"
)
;
await
BrowserTestUtils
.
browserLoaded
(
gBrowser
.
selectedBrowser
)
;
Services
.
prefs
.
clearUserPref
(
"
security
.
disallow_non_local_systemprincipal_in_tests
"
)
;
is
(
gURLBar
.
value
START_VALUE
"
Urlbar
should
preserve
the
value
on
return
keypress
"
)
;
is
(
gBrowser
.
selectedTab
tab
"
New
URL
was
loaded
in
the
current
tab
"
)
;
let
gotRequestCount
=
await
fetch
(
"
https
:
/
/
example
.
com
/
browser
/
netwerk
/
test
/
browser
/
early_hint_pixel_count
.
sjs
"
)
.
then
(
response
=
>
response
.
json
(
)
)
;
let
expectedRequestCount
=
{
hinted
:
1
normal
:
0
}
;
await
request_count_checking
(
"
test_preload_user_initiated
"
gotRequestCount
expectedRequestCount
)
;
BrowserTestUtils
.
removeTab
(
gBrowser
.
selectedTab
)
;
}
)
;
