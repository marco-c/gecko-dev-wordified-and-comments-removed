"
use
strict
"
;
const
EXPORTED_SYMBOLS
=
[
"
lax_request_count_checking
"
"
test_hint_preload
"
"
test_hint_preload_internal
"
]
;
const
{
Assert
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
testing
-
common
/
Assert
.
jsm
"
)
;
const
{
BrowserTestUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
testing
-
common
/
BrowserTestUtils
.
jsm
"
)
;
const
{
gBrowser
}
=
Services
.
wm
.
getMostRecentWindow
(
"
navigator
:
browser
"
)
;
async
function
lax_request_count_checking
(
testName
got
expected
)
{
let
g
=
JSON
.
stringify
(
got
)
;
let
e
=
JSON
.
stringify
(
expected
)
;
await
Assert
.
ok
(
got
.
hinted
<
=
expected
.
hinted
{
testName
}
:
unexpected
amount
of
hinted
request
made
expected
at
most
{
expected
.
hinted
}
(
{
e
}
)
got
{
got
.
hinted
}
(
{
g
}
)
)
;
let
expected_normal
=
expected
.
normal
+
expected
.
hinted
;
await
Assert
.
ok
(
got
.
normal
<
=
expected_normal
{
testName
}
:
unexpected
amount
of
normal
request
made
expected
at
most
{
expected_normal
}
(
{
e
}
)
got
{
got
.
normal
}
(
{
g
}
)
)
;
}
async
function
test_hint_preload
(
testName
requestFrom
imgUrl
expectedRequestCount
uuid
=
undefined
)
{
if
(
uuid
=
=
undefined
)
{
uuid
=
Services
.
uuid
.
generateUUID
(
)
;
}
await
test_hint_preload_internal
(
testName
requestFrom
[
[
imgUrl
uuid
.
toString
(
)
]
]
expectedRequestCount
)
;
}
async
function
test_hint_preload_internal
(
testName
requestFrom
imgUrls
expectedRequestCount
)
{
let
headers
=
new
Headers
(
)
;
headers
.
append
(
"
X
-
Early
-
Hint
-
Count
-
Start
"
"
"
)
;
await
fetch
(
"
http
:
/
/
example
.
com
/
browser
/
netwerk
/
test
/
browser
/
early_hint_pixel_count
.
sjs
"
{
headers
}
)
;
let
requestUrl
=
requestFrom
+
"
/
browser
/
netwerk
/
test
/
browser
/
early_hint_main_html
.
sjs
?
"
+
new
URLSearchParams
(
imgUrls
)
.
toString
(
)
;
await
BrowserTestUtils
.
withNewTab
(
{
gBrowser
url
:
requestUrl
waitForLoad
:
true
}
async
function
(
)
{
}
)
;
let
gotRequestCount
=
await
fetch
(
"
http
:
/
/
example
.
com
/
browser
/
netwerk
/
test
/
browser
/
early_hint_pixel_count
.
sjs
"
)
.
then
(
response
=
>
response
.
json
(
)
)
;
await
lax_request_count_checking
(
testName
gotRequestCount
expectedRequestCount
)
;
}
