ChromeUtils
.
defineESModuleGetters
(
this
{
RemoteSettings
:
"
resource
:
/
/
services
-
settings
/
remote
-
settings
.
sys
.
mjs
"
}
)
;
const
{
checkInputAndSerializationMatch
checkInputAndSerializationMatchChild
checkSerializationMissingSecondColon
checkSerializationMissingSecondColonChild
removeSecondColon
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
testing
-
common
/
simple_unknown_uri_helpers
.
sys
.
mjs
"
)
;
add_setup
(
async
(
)
=
>
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
network
.
url
.
useDefaultURI
"
true
]
[
"
network
.
url
.
simple_uri_unknown_schemes_enabled
"
true
]
[
"
network
.
url
.
simple_uri_unknown_schemes
"
"
simpleprotocol
otherproto
"
]
]
}
)
;
}
)
;
add_task
(
async
function
test_bypass_remote_settings_static_parent
(
)
{
checkInputAndSerializationMatch
(
"
https
:
/
/
example
.
com
/
"
)
;
checkSerializationMissingSecondColon
(
"
https
:
/
/
https
:
/
/
example
.
com
/
"
)
;
checkSerializationMissingSecondColon
(
"
nonsimpleprotocol
:
/
/
https
:
/
/
example
.
com
"
)
;
let
same
=
"
simpleprotocol
:
/
/
https
:
/
/
example
.
com
"
;
checkInputAndSerializationMatch
(
same
)
;
checkInputAndSerializationMatch
(
"
ed2k
:
/
/
https
:
/
/
example
.
com
"
)
;
checkInputAndSerializationMatch
(
same
)
;
}
)
;
add_task
(
async
function
test_bypass_remote_settings_static_child
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
security
.
allow_eval_with_system_principal
"
true
]
]
}
)
;
const
URL_EXAMPLE
=
"
https
:
/
/
example
.
com
"
;
const
tab
=
BrowserTestUtils
.
addTab
(
gBrowser
URL_EXAMPLE
)
;
const
browser
=
gBrowser
.
getBrowserForTab
(
tab
)
;
await
BrowserTestUtils
.
browserLoaded
(
browser
)
;
await
SpecialPowers
.
spawn
(
browser
[
removeSecondColon
.
toString
(
)
checkSerializationMissingSecondColonChild
.
toString
(
)
checkInputAndSerializationMatchChild
.
toString
(
)
]
(
rscSource
csmscSource
ciasmcSource
)
=
>
{
let
removeSecondColon
=
eval
(
(
{
rscSource
}
)
)
;
let
checkSerializationMissingSecondColonChild
=
eval
(
(
{
csmscSource
}
)
)
;
let
checkInputAndSerializationMatchChild
=
eval
(
(
{
ciasmcSource
}
)
)
;
checkInputAndSerializationMatchChild
(
"
https
:
/
/
example
.
com
/
"
)
;
checkSerializationMissingSecondColonChild
(
"
https
:
/
/
https
:
/
/
example
.
com
"
)
;
checkSerializationMissingSecondColonChild
(
"
nonsimpleprotocol
:
/
/
https
:
/
/
example
.
com
"
)
;
let
same
=
"
simpleprotocol
:
/
/
https
:
/
/
example
.
com
"
;
checkInputAndSerializationMatchChild
(
same
)
;
checkInputAndSerializationMatchChild
(
"
ed2k
:
/
/
https
:
/
/
example
.
com
"
)
;
checkInputAndSerializationMatchChild
(
same
)
;
}
)
;
BrowserTestUtils
.
removeTab
(
tab
)
;
Services
.
cookies
.
removeAll
(
)
;
}
)
;
