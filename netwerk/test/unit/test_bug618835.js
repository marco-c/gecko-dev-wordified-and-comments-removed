const
{
HttpServer
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
testing
-
common
/
httpd
.
js
"
)
;
const
{
NetUtil
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
NetUtil
.
jsm
"
)
;
var
httpserv
;
function
setupChannel
(
path
)
{
return
NetUtil
.
newChannel
(
{
uri
:
path
loadUsingSystemPrincipal
:
true
}
)
.
QueryInterface
(
Ci
.
nsIHttpChannel
)
;
}
function
InitialListener
(
)
{
}
InitialListener
.
prototype
=
{
onStartRequest
:
function
(
request
context
)
{
}
onStopRequest
:
function
(
request
context
status
)
{
Assert
.
equal
(
1
numberOfCLHandlerCalls
)
;
executeSoon
(
function
(
)
{
var
channel
=
setupChannel
(
"
http
:
/
/
localhost
:
"
+
httpserv
.
identity
.
primaryPort
+
"
/
post
"
)
;
channel
.
requestMethod
=
"
POST
"
;
channel
.
asyncOpen2
(
new
RedirectingListener
(
)
)
;
}
)
;
}
}
;
function
RedirectingListener
(
)
{
}
RedirectingListener
.
prototype
=
{
onStartRequest
:
function
(
request
context
)
{
}
onStopRequest
:
function
(
request
context
status
)
{
Assert
.
equal
(
1
numberOfHandlerCalls
)
;
executeSoon
(
function
(
)
{
var
channel
=
setupChannel
(
"
http
:
/
/
localhost
:
"
+
httpserv
.
identity
.
primaryPort
+
"
/
post
"
)
;
channel
.
requestMethod
=
"
POST
"
;
channel
.
asyncOpen2
(
new
VerifyingListener
(
)
)
;
}
)
;
}
}
;
function
VerifyingListener
(
)
{
}
VerifyingListener
.
prototype
=
{
onStartRequest
:
function
(
request
context
)
{
}
onStopRequest
:
function
(
request
context
status
)
{
Assert
.
equal
(
2
numberOfHandlerCalls
)
;
var
channel
=
setupChannel
(
"
http
:
/
/
localhost
:
"
+
httpserv
.
identity
.
primaryPort
+
"
/
cl
"
)
;
channel
.
asyncOpen2
(
new
FinalListener
(
)
)
;
}
}
;
function
FinalListener
(
)
{
}
FinalListener
.
prototype
=
{
onStartRequest
:
function
(
request
context
)
{
}
onStopRequest
:
function
(
request
context
status
)
{
Assert
.
equal
(
2
numberOfCLHandlerCalls
)
;
httpserv
.
stop
(
do_test_finished
)
;
}
}
;
function
run_test
(
)
{
httpserv
=
new
HttpServer
(
)
;
httpserv
.
registerPathHandler
(
"
/
cl
"
content_location
)
;
httpserv
.
registerPathHandler
(
"
/
post
"
post_target
)
;
httpserv
.
registerPathHandler
(
"
/
redirect
"
redirect_target
)
;
httpserv
.
start
(
-
1
)
;
evict_cache_entries
(
)
;
var
channel
=
setupChannel
(
"
http
:
/
/
localhost
:
"
+
httpserv
.
identity
.
primaryPort
+
"
/
cl
"
)
;
channel
.
asyncOpen2
(
new
InitialListener
(
)
)
;
do_test_pending
(
)
;
}
var
numberOfCLHandlerCalls
=
0
;
function
content_location
(
metadata
response
)
{
numberOfCLHandlerCalls
+
+
;
response
.
setStatusLine
(
metadata
.
httpVersion
200
"
Ok
"
)
;
response
.
setHeader
(
"
Cache
-
Control
"
"
max
-
age
=
360000
"
false
)
;
}
function
post_target
(
metadata
response
)
{
response
.
setStatusLine
(
metadata
.
httpVersion
301
"
Moved
Permanently
"
)
;
response
.
setHeader
(
"
Location
"
"
/
redirect
"
false
)
;
response
.
setHeader
(
"
Content
-
Location
"
"
/
cl
"
false
)
;
response
.
setHeader
(
"
Cache
-
Control
"
"
max
-
age
=
360000
"
false
)
;
}
var
numberOfHandlerCalls
=
0
;
function
redirect_target
(
metadata
response
)
{
numberOfHandlerCalls
+
+
;
response
.
setStatusLine
(
metadata
.
httpVersion
200
"
Ok
"
)
;
response
.
setHeader
(
"
Cache
-
Control
"
"
max
-
age
=
360000
"
false
)
;
}
