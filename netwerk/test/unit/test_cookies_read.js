"
use
strict
"
;
var
test_generator
=
do_run_test
(
)
;
var
CMAX
=
1000
;
function
run_test
(
)
{
do_test_pending
(
)
;
test_generator
.
next
(
)
;
}
function
finish_test
(
)
{
executeSoon
(
function
(
)
{
test_generator
.
return
(
)
;
do_test_finished
(
)
;
}
)
;
}
function
*
do_run_test
(
)
{
let
profile
=
do_get_profile
(
)
;
Services
.
prefs
.
setIntPref
(
"
network
.
cookie
.
cookieBehavior
"
0
)
;
Services
.
cookiemgr
.
sessionCookies
;
Assert
.
ok
(
do_get_cookie_file
(
profile
)
.
exists
(
)
)
;
let
db
=
new
CookieDatabaseConnection
(
do_get_cookie_file
(
profile
)
11
)
;
for
(
let
i
=
0
;
i
<
CMAX
;
+
+
i
)
{
let
uri
=
NetUtil
.
newURI
(
"
http
:
/
/
"
+
i
+
"
.
com
/
"
)
;
Services
.
cookies
.
setCookieString
(
uri
"
oh
=
hai
;
max
-
age
=
1000
"
null
)
;
}
Assert
.
equal
(
do_count_cookies
(
)
CMAX
)
;
while
(
do_count_cookies_in_db
(
db
.
db
)
<
CMAX
)
{
executeSoon
(
function
(
)
{
do_run_generator
(
test_generator
)
;
}
)
;
yield
;
}
let
file
=
db
.
db
.
databaseFile
;
Assert
.
ok
(
file
.
exists
(
)
)
;
Assert
.
ok
(
file
.
fileSize
<
1e6
)
;
db
.
close
(
)
;
do_close_profile
(
test_generator
)
;
yield
;
do_load_profile
(
)
;
Assert
.
equal
(
Services
.
cookiemgr
.
countCookiesFromHost
(
"
999
.
com
"
)
1
)
;
Assert
.
equal
(
Services
.
cookiemgr
.
countCookiesFromHost
(
"
abc
.
com
"
)
0
)
;
Assert
.
equal
(
Services
.
cookiemgr
.
countCookiesFromHost
(
"
100
.
com
"
)
1
)
;
Assert
.
equal
(
Services
.
cookiemgr
.
countCookiesFromHost
(
"
400
.
com
"
)
1
)
;
Assert
.
equal
(
Services
.
cookiemgr
.
countCookiesFromHost
(
"
xyz
.
com
"
)
0
)
;
Assert
.
equal
(
do_count_cookies
(
)
CMAX
)
;
for
(
let
i
=
0
;
i
<
CMAX
;
+
+
i
)
{
let
host
=
i
.
toString
(
)
+
"
.
com
"
;
Assert
.
equal
(
Services
.
cookiemgr
.
countCookiesFromHost
(
host
)
1
)
;
}
do_close_profile
(
test_generator
)
;
yield
;
do_load_profile
(
)
;
for
(
let
i
=
100
;
i
-
-
>
0
;
)
{
let
host
=
i
.
toString
(
)
+
"
.
com
"
;
Services
.
cookiemgr
.
remove
(
host
"
oh
"
"
/
"
{
}
)
;
}
for
(
let
i
=
CMAX
-
100
;
i
<
CMAX
;
+
+
i
)
{
let
host
=
i
.
toString
(
)
+
"
.
com
"
;
Services
.
cookiemgr
.
remove
(
host
"
oh
"
"
/
"
{
}
)
;
}
Assert
.
equal
(
do_count_cookies
(
)
CMAX
-
200
)
;
do_close_profile
(
test_generator
)
;
yield
;
do_load_profile
(
)
;
Assert
.
equal
(
do_count_cookies
(
)
CMAX
-
200
)
;
do_close_profile
(
test_generator
)
;
yield
;
do_load_profile
(
test_generator
)
;
yield
;
Assert
.
equal
(
do_count_cookies
(
)
CMAX
-
200
)
;
for
(
let
i
=
100
;
i
<
CMAX
-
100
;
+
+
i
)
{
let
host
=
i
.
toString
(
)
+
"
.
com
"
;
Assert
.
equal
(
Services
.
cookiemgr
.
countCookiesFromHost
(
host
)
1
)
;
}
finish_test
(
)
;
}
