"
use
strict
"
;
const
kTransitionalProcessing
=
false
;
const
labels
=
[
"
stra
\
u00dfe
"
"
\
u03b5
\
u03bb
\
u03bb
\
u03ac
\
u03c2
"
"
\
u0646
\
u0627
\
u0645
\
u0647
\
u200c
\
u0627
\
u06cc
"
"
\
u0dc1
\
u0dca
\
u200d
\
u0dbb
\
u0dd3
"
"
m
\
u200cn
"
"
p
\
u200dq
"
]
;
const
transitionalExpected
=
[
"
strasse
"
"
xn
-
-
hxarsa5b
"
"
xn
-
-
mgba3gch31f
"
"
xn
-
-
10cl1a0b
"
"
"
"
"
]
;
const
nonTransitionalExpected
=
[
"
xn
-
-
strae
-
oqa
"
"
xn
-
-
hxarsa0b
"
"
xn
-
-
mgba3gch31f060k
"
"
xn
-
-
10cl1a0b660p
"
"
"
"
"
]
;
function
run_test
(
)
{
var
idnService
=
Cc
[
"
mozilla
.
org
/
network
/
idn
-
service
;
1
"
]
.
getService
(
Ci
.
nsIIDNService
)
;
for
(
var
i
=
0
;
i
<
labels
.
length
;
+
+
i
)
{
var
result
;
try
{
result
=
idnService
.
convertUTF8toACE
(
labels
[
i
]
)
;
}
catch
(
e
)
{
result
=
"
"
;
}
if
(
kTransitionalProcessing
)
{
equal
(
result
transitionalExpected
[
i
]
)
;
}
else
{
equal
(
result
nonTransitionalExpected
[
i
]
)
;
}
}
}
