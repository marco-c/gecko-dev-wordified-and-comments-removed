"
use
strict
"
;
function
getDBVersion
(
dbfile
)
{
let
dbConnection
=
Services
.
storage
.
openDatabase
(
dbfile
)
;
let
version
=
dbConnection
.
schemaVersion
;
dbConnection
.
close
(
)
;
return
version
;
}
function
indexExists
(
dbfile
indexname
)
{
let
dbConnection
=
Services
.
storage
.
openDatabase
(
dbfile
)
;
let
result
=
dbConnection
.
indexExists
(
indexname
)
;
dbConnection
.
close
(
)
;
return
result
;
}
add_task
(
async
function
(
)
{
try
{
let
testfile
=
do_get_file
(
"
data
/
cookies_v10
.
sqlite
"
)
;
let
profileDir
=
do_get_profile
(
)
;
let
destFile
=
profileDir
.
clone
(
)
;
destFile
.
append
(
"
cookies
.
sqlite
"
)
;
if
(
destFile
.
exists
(
)
)
{
destFile
.
remove
(
false
)
;
}
testfile
.
copyTo
(
profileDir
"
cookies
.
sqlite
"
)
;
Assert
.
equal
(
10
getDBVersion
(
destFile
)
)
;
Assert
.
ok
(
destFile
.
exists
(
)
)
;
Assert
.
ok
(
indexExists
(
destFile
"
moz_basedomain
"
)
)
;
Services
.
cookies
.
cookies
;
Services
.
startup
.
advanceShutdownPhase
(
Services
.
startup
.
SHUTDOWN_PHASE_APPSHUTDOWN
)
;
Assert
.
equal
(
13
getDBVersion
(
destFile
)
)
;
Assert
.
ok
(
!
indexExists
(
destFile
"
moz_basedomain
"
)
)
;
}
catch
(
e
)
{
throw
new
Error
(
FAILED
:
{
e
}
)
;
}
}
)
;
