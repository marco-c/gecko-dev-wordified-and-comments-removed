#
ifndef
mozilla_net_CookiePrivateStorage_h
#
define
mozilla_net_CookiePrivateStorage_h
#
include
"
CookieStorage
.
h
"
class
nsICookieTransactionCallback
;
namespace
mozilla
{
namespace
net
{
class
CookiePrivateStorage
final
:
public
CookieStorage
{
public
:
static
already_AddRefed
<
CookiePrivateStorage
>
Create
(
)
;
void
StaleCookies
(
const
nsTArray
<
RefPtr
<
Cookie
>
>
&
aCookieList
int64_t
aCurrentTimeInUsec
)
override
;
void
Close
(
)
override
{
}
;
void
EnsureInitialized
(
)
override
{
}
;
nsresult
RunInTransaction
(
nsICookieTransactionCallback
*
aCallback
)
override
{
MOZ_CRASH
(
"
RunInTransaction
is
not
supported
for
private
storage
"
)
;
}
;
protected
:
const
char
*
NotificationTopic
(
)
const
override
{
return
"
private
-
cookie
-
changed
"
;
}
void
NotifyChangedInternal
(
nsICookieNotification
*
aNotification
bool
aOldCookieIsSession
)
override
{
}
void
RemoveAllInternal
(
)
override
{
}
void
RemoveCookieFromDB
(
const
Cookie
&
aCookie
)
override
{
}
already_AddRefed
<
nsIArray
>
PurgeCookies
(
int64_t
aCurrentTimeInUsec
uint16_t
aMaxNumberOfCookies
int64_t
aCookiePurgeAge
)
override
;
void
StoreCookie
(
const
nsACString
&
aBaseDomain
const
OriginAttributes
&
aOriginAttributes
Cookie
*
aCookie
)
override
{
}
private
:
void
CollectCookieJarSizeData
(
)
override
{
}
;
}
;
}
}
#
endif
