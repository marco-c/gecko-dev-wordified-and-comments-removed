#
ifndef
mozilla_net_CookiePrivateStorage_h
#
define
mozilla_net_CookiePrivateStorage_h
#
include
"
CookieStorage
.
h
"
namespace
mozilla
{
namespace
net
{
class
CookiePrivateStorage
final
:
public
CookieStorage
{
public
:
static
already_AddRefed
<
CookiePrivateStorage
>
Create
(
)
;
void
StaleCookies
(
const
nsTArray
<
Cookie
*
>
&
aCookieList
int64_t
aCurrentTimeInUsec
)
override
;
void
Close
(
)
override
{
}
;
protected
:
const
char
*
NotificationTopic
(
)
const
override
{
return
"
private
-
cookie
-
changed
"
;
}
void
NotifyChangedInternal
(
nsISupports
*
aSubject
const
char16_t
*
aData
bool
aOldCookieIsSession
)
override
{
}
void
WriteCookieToDB
(
const
nsACString
&
aBaseDomain
const
OriginAttributes
&
aOriginAttributes
mozilla
:
:
net
:
:
Cookie
*
aCookie
mozIStorageBindingParamsArray
*
aParamsArray
)
override
{
}
;
void
RemoveAllInternal
(
)
override
{
}
void
RemoveCookieFromListInternal
(
const
CookieListIter
&
aIter
mozIStorageBindingParamsArray
*
aParamsArray
=
nullptr
)
override
{
}
void
MaybeCreateDeleteBindingParamsArray
(
mozIStorageBindingParamsArray
*
*
aParamsArray
)
override
{
}
void
DeleteFromDB
(
mozIStorageBindingParamsArray
*
aParamsArray
)
override
{
}
}
;
}
}
#
endif
