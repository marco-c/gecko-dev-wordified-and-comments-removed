#
ifndef
mozilla_net_CookieSettings_h
#
define
mozilla_net_CookieSettings_h
#
include
"
nsICookieSettings
.
h
"
#
include
"
nsDataHashtable
.
h
"
class
nsIPermission
;
namespace
mozilla
{
namespace
net
{
class
CookieSettingsArgs
;
class
CookieSettings
final
:
public
nsICookieSettings
{
public
:
typedef
nsTArray
<
RefPtr
<
nsIPermission
>
>
CookiePermissionList
;
NS_DECL_THREADSAFE_ISUPPORTS
NS_DECL_NSICOOKIESETTINGS
static
already_AddRefed
<
nsICookieSettings
>
CreateBlockingAll
(
)
;
static
already_AddRefed
<
nsICookieSettings
>
Create
(
)
;
static
already_AddRefed
<
nsICookieSettings
>
Create
(
uint32_t
aCookieBehavior
)
;
static
CookieSettings
*
Cast
(
nsICookieSettings
*
aCS
)
{
return
static_cast
<
CookieSettings
*
>
(
aCS
)
;
}
void
Serialize
(
CookieSettingsArgs
&
aData
)
;
static
void
Deserialize
(
const
CookieSettingsArgs
&
aData
nsICookieSettings
*
*
aCookieSettings
)
;
void
Merge
(
const
CookieSettingsArgs
&
aData
)
;
bool
HasBeenChanged
(
)
const
{
return
mToBeMerged
;
}
private
:
enum
State
{
eFixed
eProgressive
}
;
CookieSettings
(
uint32_t
aCookieBehavior
State
aState
)
;
~
CookieSettings
(
)
;
uint32_t
mCookieBehavior
;
CookiePermissionList
mCookiePermissions
;
State
mState
;
bool
mToBeMerged
;
}
;
}
}
#
endif
