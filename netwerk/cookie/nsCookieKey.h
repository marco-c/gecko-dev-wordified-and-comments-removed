#
ifndef
mozilla_net_nsCookieKey_h
#
define
mozilla_net_nsCookieKey_h
#
include
"
nsHashKeys
.
h
"
#
include
"
nsTHashtable
.
h
"
namespace
mozilla
{
namespace
net
{
class
nsCookieKey
:
public
PLDHashEntryHdr
{
public
:
typedef
const
nsCookieKey
&
KeyType
;
typedef
const
nsCookieKey
*
KeyTypePointer
;
nsCookieKey
(
)
{
}
nsCookieKey
(
const
nsCString
&
baseDomain
const
OriginAttributes
&
attrs
)
:
mBaseDomain
(
baseDomain
)
mOriginAttributes
(
attrs
)
{
}
explicit
nsCookieKey
(
KeyTypePointer
other
)
:
mBaseDomain
(
other
-
>
mBaseDomain
)
mOriginAttributes
(
other
-
>
mOriginAttributes
)
{
}
nsCookieKey
(
KeyType
other
)
:
mBaseDomain
(
other
.
mBaseDomain
)
mOriginAttributes
(
other
.
mOriginAttributes
)
{
}
~
nsCookieKey
(
)
{
}
bool
KeyEquals
(
KeyTypePointer
other
)
const
{
return
mBaseDomain
=
=
other
-
>
mBaseDomain
&
&
mOriginAttributes
=
=
other
-
>
mOriginAttributes
;
}
static
KeyTypePointer
KeyToPointer
(
KeyType
aKey
)
{
return
&
aKey
;
}
static
PLDHashNumber
HashKey
(
KeyTypePointer
aKey
)
{
nsAutoCString
temp
(
aKey
-
>
mBaseDomain
)
;
temp
.
Append
(
'
#
'
)
;
nsAutoCString
suffix
;
aKey
-
>
mOriginAttributes
.
CreateSuffix
(
suffix
)
;
temp
.
Append
(
suffix
)
;
return
mozilla
:
:
HashString
(
temp
)
;
}
size_t
SizeOfExcludingThis
(
mozilla
:
:
MallocSizeOf
aMallocSizeOf
)
const
{
return
mBaseDomain
.
SizeOfExcludingThisIfUnshared
(
aMallocSizeOf
)
;
}
enum
{
ALLOW_MEMMOVE
=
true
}
;
nsCString
mBaseDomain
;
OriginAttributes
mOriginAttributes
;
}
;
}
}
#
endif
