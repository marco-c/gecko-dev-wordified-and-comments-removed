#
include
"
nsISupports
.
idl
"
interface
nsIChannel
;
interface
nsICookie
;
interface
nsIURI
;
webidl
Document
;
%
{
C
+
+
namespace
mozilla
{
class
OriginAttributes
;
namespace
net
{
class
Cookie
;
class
CookieParser
;
}
}
%
}
[
ref
]
native
const_OriginAttributes
(
const
mozilla
:
:
OriginAttributes
)
;
native
CookieRefPtr
(
RefPtr
<
mozilla
:
:
net
:
:
Cookie
>
)
;
[
ref
]
native
CookiePtr
(
mozilla
:
:
net
:
:
Cookie
)
;
[
ref
]
native
CookieParserPtr
(
mozilla
:
:
net
:
:
CookieParser
)
;
[
scriptable
function
uuid
(
0fc41ffb
-
f1b7
-
42d9
-
9a42
-
8dc420c158c1
)
]
interface
nsICookieTransactionCallback
:
nsISupports
{
void
callback
(
)
;
}
;
[
builtinclass
scriptable
uuid
(
1e94e283
-
2811
-
4f43
-
b947
-
d22b1549d824
)
]
interface
nsICookieService
:
nsISupports
{
const
uint32_t
BEHAVIOR_ACCEPT
=
0
;
const
uint32_t
BEHAVIOR_REJECT_FOREIGN
=
1
;
const
uint32_t
BEHAVIOR_REJECT
=
2
;
const
uint32_t
BEHAVIOR_LIMIT_FOREIGN
=
3
;
const
uint32_t
BEHAVIOR_REJECT_TRACKER
=
4
;
const
uint32_t
BEHAVIOR_REJECT_TRACKER_AND_PARTITION_FOREIGN
=
5
;
const
uint32_t
BEHAVIOR_LAST
=
5
;
[
noscript
notxpcom
nostdcall
]
void
getCookiesFromHost
(
in
ACString
aBaseDomain
in
const_OriginAttributes
aOriginAttributes
out
Array
<
CookieRefPtr
>
aCookies
)
;
[
noscript
notxpcom
nostdcall
]
void
staleCookies
(
in
Array
<
CookieRefPtr
>
aCookies
in
int64_t
aCurrentTimeInUsec
)
;
[
noscript
notxpcom
nostdcall
]
boolean
hasExistingCookies
(
in
ACString
aBaseDomain
in
const_OriginAttributes
aOriginAttributes
)
;
[
noscript
notxpcom
nostdcall
]
void
addCookieFromDocument
(
in
CookieParserPtr
aCookieParser
in
ACString
aBaseDomain
in
const_OriginAttributes
aOriginAttributes
in
CookiePtr
aCookie
in
int64_t
aCurrentTimeInUsec
in
nsIURI
aDocumentURI
in
boolean
aThirdParty
in
Document
document
)
;
ACString
getCookieStringFromHttp
(
in
nsIURI
aURI
in
nsIChannel
aChannel
)
;
void
setCookieStringFromHttp
(
in
nsIURI
aURI
in
ACString
aCookie
in
nsIChannel
aChannel
)
;
void
runInTransaction
(
in
nsICookieTransactionCallback
aCallback
)
;
}
;
