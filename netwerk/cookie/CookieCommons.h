#
ifndef
mozilla_net_CookieCommons_h
#
define
mozilla_net_CookieCommons_h
#
include
<
cstdint
>
#
include
"
prtime
.
h
"
#
include
"
nsString
.
h
"
class
nsIEffectiveTLDService
;
class
nsIURI
;
namespace
mozilla
{
namespace
net
{
class
Cookie
;
static
const
char
kPrefMaxNumberOfCookies
[
]
=
"
network
.
cookie
.
maxNumber
"
;
static
const
char
kPrefMaxCookiesPerHost
[
]
=
"
network
.
cookie
.
maxPerHost
"
;
static
const
char
kPrefCookieQuotaPerHost
[
]
=
"
network
.
cookie
.
quotaPerHost
"
;
static
const
char
kPrefCookiePurgeAge
[
]
=
"
network
.
cookie
.
purgeAge
"
;
static
const
uint32_t
kMaxCookiesPerHost
=
180
;
static
const
uint32_t
kCookieQuotaPerHost
=
150
;
static
const
uint32_t
kMaxNumberOfCookies
=
3000
;
static
const
uint32_t
kMaxBytesPerCookie
=
4096
;
static
const
uint32_t
kMaxBytesPerPath
=
1024
;
static
const
int64_t
kCookiePurgeAge
=
int64_t
(
30
*
24
*
60
*
60
)
*
PR_USEC_PER_SEC
;
class
CookieCommons
final
{
public
:
static
bool
DomainMatches
(
Cookie
*
aCookie
const
nsACString
&
aHost
)
;
static
bool
PathMatches
(
Cookie
*
aCookie
const
nsACString
&
aPath
)
;
static
nsresult
GetBaseDomain
(
nsIEffectiveTLDService
*
aTLDService
nsIURI
*
aHostURI
nsCString
&
aBaseDomain
bool
&
aRequireHostMatch
)
;
static
nsresult
GetBaseDomainFromHost
(
nsIEffectiveTLDService
*
aTLDService
const
nsACString
&
aHost
nsCString
&
aBaseDomain
)
;
}
;
}
}
#
endif
