#
include
"
CookiePrivateStorage
.
h
"
#
include
"
Cookie
.
h
"
namespace
mozilla
{
namespace
net
{
already_AddRefed
<
CookiePrivateStorage
>
CookiePrivateStorage
:
:
Create
(
)
{
RefPtr
<
CookiePrivateStorage
>
storage
=
new
CookiePrivateStorage
(
)
;
storage
-
>
Init
(
)
;
return
storage
.
forget
(
)
;
}
void
CookiePrivateStorage
:
:
StaleCookies
(
const
nsTArray
<
Cookie
*
>
&
aCookieList
int64_t
aCurrentTimeInUsec
)
{
int32_t
count
=
aCookieList
.
Length
(
)
;
for
(
int32_t
i
=
0
;
i
<
count
;
+
+
i
)
{
Cookie
*
cookie
=
aCookieList
.
ElementAt
(
i
)
;
if
(
cookie
-
>
IsStale
(
)
)
{
cookie
-
>
SetLastAccessed
(
aCurrentTimeInUsec
)
;
}
}
}
already_AddRefed
<
nsIArray
>
CookiePrivateStorage
:
:
PurgeCookies
(
int64_t
aCurrentTimeInUsec
uint16_t
aMaxNumberOfCookies
int64_t
aCookiePurgeAge
)
{
RefPtr
<
CookiePrivateStorage
>
self
=
this
;
return
PurgeCookiesWithCallbacks
(
aCurrentTimeInUsec
aMaxNumberOfCookies
aCookiePurgeAge
[
self
]
(
const
CookieListIter
&
iter
)
{
self
-
>
RemoveCookieFromList
(
iter
)
;
}
nullptr
)
;
}
}
}
