#
include
"
nsISupports
.
idl
"
%
{
C
+
+
namespace
mozilla
{
class
OriginAttributes
;
namespace
net
{
class
Cookie
;
}
}
%
}
[
ref
]
native
const_OriginAttributes
(
const
mozilla
:
:
OriginAttributes
)
;
[
ref
]
native
const_Cookie
(
const
mozilla
:
:
net
:
:
Cookie
)
;
typedef
long
nsCookieStatus
;
typedef
long
nsCookiePolicy
;
[
builtinclass
scriptable
uuid
(
adf0db5e
-
211e
-
45a3
-
be14
-
4486ac430a58
)
]
interface
nsICookie
:
nsISupports
{
const
uint32_t
SAMESITE_NONE
=
0
;
const
uint32_t
SAMESITE_LAX
=
1
;
const
uint32_t
SAMESITE_STRICT
=
2
;
const
uint32_t
SAMESITE_UNSET
=
256
;
readonly
attribute
ACString
name
;
readonly
attribute
AUTF8String
value
;
readonly
attribute
boolean
isDomain
;
readonly
attribute
AUTF8String
host
;
readonly
attribute
AUTF8String
rawHost
;
readonly
attribute
AUTF8String
path
;
readonly
attribute
boolean
isSecure
;
readonly
attribute
uint64_t
expires
;
readonly
attribute
int64_t
expiry
;
[
implicit_jscontext
]
readonly
attribute
jsval
originAttributes
;
[
noscript
notxpcom
nostdcall
binaryname
(
OriginAttributesNative
)
]
const_OriginAttributes
OriginAttributesNative
(
)
;
[
noscript
notxpcom
nostdcall
binaryname
(
AsCookie
)
]
const_Cookie
AsCookie
(
)
;
readonly
attribute
boolean
isSession
;
readonly
attribute
boolean
isHttpOnly
;
readonly
attribute
int64_t
creationTime
;
readonly
attribute
int64_t
lastAccessed
;
readonly
attribute
int32_t
sameSite
;
cenum
schemeType
:
8
{
SCHEME_UNSET
=
0x00
SCHEME_HTTP
=
0x01
SCHEME_HTTPS
=
0x02
SCHEME_FILE
=
0x04
}
;
readonly
attribute
nsICookie_schemeType
schemeMap
;
readonly
attribute
boolean
isPartitioned
;
}
;
