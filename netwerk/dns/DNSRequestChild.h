#
ifndef
mozilla_net_DNSRequestChild_h
#
define
mozilla_net_DNSRequestChild_h
#
include
"
mozilla
/
net
/
DNSRequestBase
.
h
"
#
include
"
mozilla
/
net
/
PDNSRequestChild
.
h
"
namespace
mozilla
{
namespace
net
{
class
DNSRequestChild
final
:
public
DNSRequestActor
public
PDNSRequestChild
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
DNSRequestChild
override
)
friend
class
PDNSRequestChild
;
explicit
DNSRequestChild
(
DNSRequestBase
*
aRequest
)
;
bool
CanSend
(
)
const
override
{
return
PDNSRequestChild
:
:
CanSend
(
)
;
}
DNSRequestChild
*
AsDNSRequestChild
(
)
override
{
return
this
;
}
DNSRequestParent
*
AsDNSRequestParent
(
)
override
{
return
nullptr
;
}
private
:
virtual
~
DNSRequestChild
(
)
=
default
;
mozilla
:
:
ipc
:
:
IPCResult
RecvCancelDNSRequest
(
const
nsCString
&
hostName
const
nsCString
&
trrServer
const
uint16_t
&
type
const
OriginAttributes
&
originAttributes
const
uint32_t
&
flags
const
nsresult
&
reason
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvLookupCompleted
(
const
DNSRequestResponse
&
reply
)
;
virtual
void
ActorDestroy
(
ActorDestroyReason
why
)
override
;
}
;
}
}
#
endif
