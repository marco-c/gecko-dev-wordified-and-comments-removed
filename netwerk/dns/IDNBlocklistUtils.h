#
ifndef
IDNBlocklistUtils_h__
#
define
IDNBlocklistUtils_h__
#
include
<
utility
>
#
include
"
nsTArray
.
h
"
namespace
mozilla
{
namespace
net
{
typedef
std
:
:
pair
<
char16_t
char16_t
>
BlocklistRange
;
class
BlocklistPairToCharComparator
{
public
:
bool
Equals
(
const
BlocklistRange
&
pair
char16_t
needle
)
const
{
return
pair
.
first
<
=
needle
&
&
needle
<
=
pair
.
second
;
}
bool
LessThan
(
const
BlocklistRange
&
pair
char16_t
needle
)
const
{
return
pair
.
second
<
needle
;
}
}
;
class
BlocklistEntryComparator
{
public
:
bool
Equals
(
const
BlocklistRange
&
a
const
BlocklistRange
&
b
)
const
{
return
a
.
first
=
=
b
.
first
&
&
a
.
second
=
=
b
.
second
;
}
bool
LessThan
(
const
BlocklistRange
&
a
const
BlocklistRange
&
b
)
const
{
return
a
.
first
<
b
.
first
;
}
}
;
inline
bool
CharInBlocklist
(
char16_t
aChar
const
nsTArray
<
BlocklistRange
>
&
aBlocklist
)
{
return
aBlocklist
.
ContainsSorted
(
aChar
BlocklistPairToCharComparator
(
)
)
;
}
void
InitializeBlocklist
(
nsTArray
<
BlocklistRange
>
&
aBlocklist
)
;
void
RemoveCharFromBlocklist
(
char16_t
aChar
nsTArray
<
BlocklistRange
>
&
aBlocklist
)
;
}
}
#
endif
