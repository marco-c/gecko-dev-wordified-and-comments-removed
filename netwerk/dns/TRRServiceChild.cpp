#
include
"
mozilla
/
net
/
TRRServiceChild
.
h
"
#
include
"
mozilla
/
ClearOnShutdown
.
h
"
#
include
"
mozilla
/
Services
.
h
"
#
include
"
mozilla
/
StaticPtr
.
h
"
#
include
"
nsIDNService
.
h
"
#
include
"
nsIObserverService
.
h
"
#
include
"
nsServiceManagerUtils
.
h
"
#
include
"
TRRService
.
h
"
namespace
mozilla
{
namespace
net
{
static
StaticRefPtr
<
nsIDNSService
>
sDNSService
;
NS_IMPL_ISUPPORTS
(
TRRServiceChild
nsIObserver
nsISupportsWeakReference
)
void
TRRServiceChild
:
:
Init
(
const
bool
&
aCaptiveIsPassed
const
bool
&
aParentalControlEnabled
nsTArray
<
nsCString
>
&
&
aDNSSuffixList
)
{
nsCOMPtr
<
nsIDNSService
>
dns
=
do_GetService
(
"
mozilla
.
org
/
network
/
dns
-
service
;
1
"
)
;
sDNSService
=
dns
;
ClearOnShutdown
(
&
sDNSService
)
;
MOZ_ASSERT
(
sDNSService
)
;
TRRService
*
trrService
=
TRRService
:
:
Get
(
)
;
MOZ_ASSERT
(
trrService
)
;
trrService
-
>
mCaptiveIsPassed
=
aCaptiveIsPassed
;
trrService
-
>
mParentalControlEnabled
=
aParentalControlEnabled
;
trrService
-
>
RebuildSuffixList
(
std
:
:
move
(
aDNSSuffixList
)
)
;
nsCOMPtr
<
nsIObserverService
>
obs
=
mozilla
:
:
services
:
:
GetObserverService
(
)
;
obs
-
>
AddObserver
(
this
"
network
:
connectivity
-
service
:
dns
-
checks
-
complete
"
true
)
;
obs
-
>
AddObserver
(
this
"
network
:
connectivity
-
service
:
ip
-
checks
-
complete
"
true
)
;
}
NS_IMETHODIMP
TRRServiceChild
:
:
Observe
(
nsISupports
*
aSubject
const
char
*
aTopic
const
char16_t
*
aData
)
{
if
(
!
strcmp
(
aTopic
"
network
:
connectivity
-
service
:
ip
-
checks
-
complete
"
)
|
|
!
strcmp
(
aTopic
"
network
:
connectivity
-
service
:
dns
-
checks
-
complete
"
)
)
{
Unused
<
<
SendNotifyNetworkConnectivityServiceObservers
(
nsPrintfCString
(
"
%
s
-
from
-
socket
-
process
"
aTopic
)
)
;
}
return
NS_OK
;
}
mozilla
:
:
ipc
:
:
IPCResult
TRRServiceChild
:
:
RecvUpdatePlatformDNSInformation
(
nsTArray
<
nsCString
>
&
&
aDNSSuffixList
)
{
TRRService
:
:
Get
(
)
-
>
RebuildSuffixList
(
std
:
:
move
(
aDNSSuffixList
)
)
;
return
IPC_OK
(
)
;
}
mozilla
:
:
ipc
:
:
IPCResult
TRRServiceChild
:
:
RecvUpdateParentalControlEnabled
(
const
bool
&
aEnabled
)
{
TRRService
:
:
Get
(
)
-
>
mParentalControlEnabled
=
aEnabled
;
return
IPC_OK
(
)
;
}
mozilla
:
:
ipc
:
:
IPCResult
TRRServiceChild
:
:
RecvClearDNSCache
(
const
bool
&
aTrrToo
)
{
Unused
<
<
sDNSService
-
>
ClearCache
(
aTrrToo
)
;
return
IPC_OK
(
)
;
}
mozilla
:
:
ipc
:
:
IPCResult
TRRServiceChild
:
:
RecvSetDetectedTrrURI
(
const
nsCString
&
aURI
)
{
TRRService
:
:
Get
(
)
-
>
SetDetectedTrrURI
(
aURI
)
;
return
IPC_OK
(
)
;
}
}
}
