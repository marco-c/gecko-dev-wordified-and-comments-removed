#
ifndef
mozilla_net_TRRServiceChild_h
#
define
mozilla_net_TRRServiceChild_h
#
include
"
mozilla
/
net
/
PTRRServiceChild
.
h
"
#
include
"
nsIObserver
.
h
"
#
include
"
nsWeakReference
.
h
"
namespace
mozilla
{
namespace
ipc
{
class
FileDescriptor
;
}
namespace
net
{
class
TRRServiceChild
:
public
PTRRServiceChild
public
nsIObserver
public
nsSupportsWeakReference
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIOBSERVER
TRRServiceChild
(
)
;
static
TRRServiceChild
*
GetSingleton
(
)
;
void
Init
(
const
bool
&
aCaptiveIsPassed
const
bool
&
aParentalControlEnabled
nsTArray
<
nsCString
>
&
&
aDNSSuffixList
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvNotifyObserver
(
const
nsCString
&
aTopic
const
nsString
&
aData
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvUpdatePlatformDNSInformation
(
nsTArray
<
nsCString
>
&
&
aDNSSuffixList
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvUpdateParentalControlEnabled
(
const
bool
&
aEnabled
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvClearDNSCache
(
const
bool
&
aTrrToo
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvSetDetectedTrrURI
(
const
nsCString
&
aURI
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvSetDefaultTRRConnectionInfo
(
Maybe
<
HttpConnectionInfoCloneArgs
>
&
&
aArgs
)
;
private
:
virtual
~
TRRServiceChild
(
)
;
}
;
}
}
#
endif
