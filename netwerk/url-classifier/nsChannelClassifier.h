#
ifndef
nsChannelClassifier_h__
#
define
nsChannelClassifier_h__
#
include
"
nsIObserver
.
h
"
#
include
"
nsIURIClassifier
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
<
functional
>
class
nsIChannel
;
namespace
mozilla
{
namespace
net
{
class
nsChannelClassifier
final
:
public
nsIURIClassifierCallback
public
nsIObserver
{
public
:
explicit
nsChannelClassifier
(
nsIChannel
*
aChannel
)
;
NS_DECL_ISUPPORTS
NS_DECL_NSIURICLASSIFIERCALLBACK
NS_DECL_NSIOBSERVER
void
Start
(
)
;
private
:
bool
mIsAllowListed
;
bool
mSuspendedChannel
;
nsCOMPtr
<
nsIChannel
>
mChannel
;
~
nsChannelClassifier
(
)
;
void
MarkEntryClassified
(
nsresult
status
)
;
bool
HasBeenClassified
(
nsIChannel
*
aChannel
)
;
nsresult
StartInternal
(
)
;
bool
IsHostnameEntitylisted
(
nsIURI
*
aUri
const
nsACString
&
aEntitylisted
)
;
void
AddShutdownObserver
(
)
;
void
RemoveShutdownObserver
(
)
;
static
nsresult
SendThreatHitReport
(
nsIChannel
*
aChannel
const
nsACString
&
aProvider
const
nsACString
&
aList
const
nsACString
&
aFullHash
)
;
public
:
static
nsresult
SetBlockedContent
(
nsIChannel
*
channel
nsresult
aErrorCode
const
nsACString
&
aList
const
nsACString
&
aProvider
const
nsACString
&
aFullHash
)
;
}
;
}
}
#
endif
