#
ifndef
mozilla_net_UrlClassifierFeatureFactory_h
#
define
mozilla_net_UrlClassifierFeatureFactory_h
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsTArray
.
h
"
class
nsIChannel
;
class
nsIUrlClassifierFeature
;
namespace
mozilla
{
namespace
net
{
class
UrlClassifierFeatureFactory
final
{
public
:
static
void
Shutdown
(
)
;
static
void
GetFeaturesFromChannel
(
nsIChannel
*
aChannel
nsTArray
<
nsCOMPtr
<
nsIUrlClassifierFeature
>
>
&
aFeatures
)
;
static
void
GetPhishingProtectionFeatures
(
nsTArray
<
RefPtr
<
nsIUrlClassifierFeature
>
>
&
aFeatures
)
;
static
nsIUrlClassifierFeature
*
GetFeatureLoginReputation
(
)
;
static
already_AddRefed
<
nsIUrlClassifierFeature
>
GetFeatureByName
(
const
nsACString
&
aName
)
;
static
void
GetFeatureNames
(
nsTArray
<
nsCString
>
&
aArray
)
;
static
already_AddRefed
<
nsIUrlClassifierFeature
>
CreateFeatureWithTables
(
const
nsACString
&
aName
const
nsTArray
<
nsCString
>
&
aBlocklistTables
const
nsTArray
<
nsCString
>
&
aEntitylistTables
)
;
static
bool
IsClassifierBlockingErrorCode
(
nsresult
aError
)
;
static
bool
IsClassifierBlockingEventCode
(
uint32_t
aEventCode
)
;
static
uint32_t
GetClassifierBlockingEventCode
(
nsresult
aErrorCode
)
;
static
const
char
*
ClassifierBlockingErrorCodeToConsoleMessage
(
nsresult
aError
nsACString
&
aCategory
)
;
}
;
}
}
#
endif
