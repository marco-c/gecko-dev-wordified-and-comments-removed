#
ifndef
mozilla_UrlClassifierExceptionList_h
#
define
mozilla_UrlClassifierExceptionList_h
#
include
"
nsHashKeys
.
h
"
#
include
"
nsTHashMap
.
h
"
#
include
"
nsIUrlClassifierExceptionList
.
h
"
#
include
"
nsISupports
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
nsString
.
h
"
namespace
mozilla
:
:
net
{
class
UrlClassifierExceptionList
final
:
public
nsIUrlClassifierExceptionList
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIURLCLASSIFIEREXCEPTIONLIST
UrlClassifierExceptionList
(
)
=
default
;
private
:
~
UrlClassifierExceptionList
(
)
=
default
;
using
ExceptionEntryArray
=
nsTArray
<
RefPtr
<
nsIUrlClassifierExceptionListEntry
>
>
;
using
SiteToEntries
=
nsTHashMap
<
nsCStringHashKey
ExceptionEntryArray
>
;
static
bool
ExceptionListMatchesLoad
(
ExceptionEntryArray
*
aExceptions
nsIURI
*
aURI
nsIURI
*
aTopLevelURI
bool
aIsPrivateBrowsing
)
;
NS_IMETHODIMP
GetSchemelessSiteFromUrlPattern
(
const
nsACString
&
aUrlPattern
nsACString
&
aSite
)
;
nsCString
mFeature
;
nsTHashMap
<
nsCStringHashKey
SiteToEntries
>
mExceptions
;
nsTHashMap
<
nsCStringHashKey
ExceptionEntryArray
>
mGlobalExceptions
;
}
;
}
#
endif
