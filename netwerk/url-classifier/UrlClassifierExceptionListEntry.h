#
ifndef
mozilla_UrlClassifierExceptionListEntry_h
#
define
mozilla_UrlClassifierExceptionListEntry_h
#
include
"
mozilla
/
extensions
/
MatchPattern
.
h
"
#
include
"
nsIUrlClassifierExceptionListEntry
.
h
"
#
include
"
nsString
.
h
"
#
include
"
nsISupports
.
h
"
namespace
mozilla
:
:
net
{
class
UrlClassifierExceptionListEntry
final
:
public
nsIUrlClassifierExceptionListEntry
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIURLCLASSIFIEREXCEPTIONLISTENTRY
UrlClassifierExceptionListEntry
(
)
=
default
;
UrlClassifierExceptionListEntry
(
const
nsACString
&
aUrlPattern
const
nsACString
&
aTopLevelUrlPattern
bool
aIsPrivateBrowsingOnly
const
nsTArray
<
nsCString
>
&
aClassifierFeatures
)
:
mUrlPattern
(
aUrlPattern
)
mTopLevelUrlPattern
(
aTopLevelUrlPattern
)
mIsPrivateBrowsingOnly
(
aIsPrivateBrowsingOnly
)
{
mClassifierFeatures
=
aClassifierFeatures
.
Clone
(
)
;
}
private
:
~
UrlClassifierExceptionListEntry
(
)
=
default
;
nsIUrlClassifierExceptionListEntry
:
:
Category
mCategory
;
nsCString
mUrlPattern
;
nsCString
mTopLevelUrlPattern
;
bool
mIsPrivateBrowsingOnly
{
}
;
nsTArray
<
nsCString
>
mFilterContentBlockingCategories
;
nsTArray
<
nsCString
>
mClassifierFeatures
;
RefPtr
<
extensions
:
:
MatchPatternCore
>
mMatcher
;
RefPtr
<
extensions
:
:
MatchPatternCore
>
mTopLevelMatcher
;
}
;
}
#
endif
