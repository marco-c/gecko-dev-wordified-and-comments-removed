#
ifndef
mozilla_net_UrlClassifierCommon_h
#
define
mozilla_net_UrlClassifierCommon_h
#
include
"
nsString
.
h
"
#
include
"
mozilla
/
AntiTrackingCommon
.
h
"
class
nsIChannel
;
class
nsIURI
;
#
define
UC_LOG
(
args
)
MOZ_LOG
(
UrlClassifierCommon
:
:
sLog
LogLevel
:
:
Info
args
)
#
define
UC_LOG_ENABLED
(
)
MOZ_LOG_TEST
(
UrlClassifierCommon
:
:
sLog
LogLevel
:
:
Info
)
namespace
mozilla
{
namespace
net
{
class
UrlClassifierCommon
final
{
public
:
static
const
nsCString
:
:
size_type
sMaxSpecLength
;
static
LazyLogModule
sLog
;
static
bool
AddonMayLoad
(
nsIChannel
*
aChannel
nsIURI
*
aURI
)
;
static
void
NotifyChannelClassifierProtectionDisabled
(
nsIChannel
*
aChannel
uint32_t
aAcceptedReason
)
;
static
bool
ShouldEnableClassifier
(
nsIChannel
*
aChannel
)
;
static
nsresult
SetBlockedContent
(
nsIChannel
*
channel
nsresult
aErrorCode
const
nsACString
&
aList
const
nsACString
&
aProvider
const
nsACString
&
aFullHash
)
;
static
nsresult
CreatePairwiseWhiteListURI
(
nsIChannel
*
aChannel
nsIURI
*
*
aURI
)
;
private
:
static
void
NotifyChannelBlocked
(
nsIChannel
*
aChannel
nsIURI
*
aURIBeingLoaded
unsigned
aBlockedReason
)
;
}
;
}
}
#
endif
