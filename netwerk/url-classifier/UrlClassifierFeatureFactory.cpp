#
include
"
mozilla
/
net
/
UrlClassifierFeatureFactory
.
h
"
#
include
"
UrlClassifierFeatureFlash
.
h
"
#
include
"
UrlClassifierFeatureLoginReputation
.
h
"
#
include
"
UrlClassifierFeatureTrackingProtection
.
h
"
#
include
"
UrlClassifierFeatureTrackingAnnotation
.
h
"
#
include
"
nsAppRunner
.
h
"
namespace
mozilla
{
namespace
net
{
void
UrlClassifierFeatureFactory
:
:
Initialize
(
)
{
if
(
!
XRE_IsParentProcess
(
)
)
{
return
;
}
UrlClassifierFeatureFlash
:
:
Initialize
(
)
;
UrlClassifierFeatureTrackingAnnotation
:
:
Initialize
(
)
;
UrlClassifierFeatureTrackingProtection
:
:
Initialize
(
)
;
}
void
UrlClassifierFeatureFactory
:
:
Shutdown
(
)
{
if
(
!
XRE_IsParentProcess
(
)
)
{
return
;
}
UrlClassifierFeatureFlash
:
:
Shutdown
(
)
;
UrlClassifierFeatureLoginReputation
:
:
MaybeShutdown
(
)
;
UrlClassifierFeatureTrackingAnnotation
:
:
Shutdown
(
)
;
UrlClassifierFeatureTrackingProtection
:
:
Shutdown
(
)
;
}
void
UrlClassifierFeatureFactory
:
:
GetFeaturesFromChannel
(
nsIChannel
*
aChannel
nsTArray
<
nsCOMPtr
<
nsIUrlClassifierFeature
>
>
&
aFeatures
)
{
MOZ_ASSERT
(
XRE_IsParentProcess
(
)
)
;
MOZ_ASSERT
(
aChannel
)
;
nsCOMPtr
<
nsIUrlClassifierFeature
>
feature
;
feature
=
UrlClassifierFeatureTrackingProtection
:
:
MaybeCreate
(
aChannel
)
;
if
(
feature
)
{
aFeatures
.
AppendElement
(
feature
)
;
}
feature
=
UrlClassifierFeatureTrackingAnnotation
:
:
MaybeCreate
(
aChannel
)
;
if
(
feature
)
{
aFeatures
.
AppendElement
(
feature
)
;
}
nsTArray
<
nsCOMPtr
<
nsIUrlClassifierFeature
>
>
flashFeatures
;
UrlClassifierFeatureFlash
:
:
MaybeCreate
(
aChannel
flashFeatures
)
;
aFeatures
.
AppendElements
(
flashFeatures
)
;
}
nsIUrlClassifierFeature
*
UrlClassifierFeatureFactory
:
:
GetFeatureLoginReputation
(
)
{
return
UrlClassifierFeatureLoginReputation
:
:
MaybeGetOrCreate
(
)
;
}
}
}
