#
include
"
ProxyConfigLookupParent
.
h
"
#
include
"
ProxyConfigLookup
.
h
"
#
include
"
mozilla
/
Unused
.
h
"
#
include
"
nsProxyInfo
.
h
"
namespace
mozilla
{
namespace
net
{
ProxyConfigLookupParent
:
:
ProxyConfigLookupParent
(
nsIURI
*
aURI
uint32_t
aProxyResolveFlags
)
:
mURI
(
aURI
)
mProxyResolveFlags
(
aProxyResolveFlags
)
{
}
ProxyConfigLookupParent
:
:
~
ProxyConfigLookupParent
(
)
=
default
;
void
ProxyConfigLookupParent
:
:
DoProxyLookup
(
)
{
RefPtr
<
ProxyConfigLookupParent
>
self
=
this
;
nsresult
rv
=
ProxyConfigLookup
:
:
Create
(
[
self
]
(
nsIProxyInfo
*
aProxyInfo
nsresult
aStatus
)
{
if
(
self
-
>
CanSend
(
)
)
{
nsTArray
<
ProxyInfoCloneArgs
>
proxyInfoArray
;
if
(
aProxyInfo
&
&
NS_SUCCEEDED
(
aStatus
)
)
{
nsProxyInfo
:
:
SerializeProxyInfo
(
static_cast
<
nsProxyInfo
*
>
(
aProxyInfo
)
proxyInfoArray
)
;
}
Unused
<
<
Send__delete__
(
self
proxyInfoArray
aStatus
)
;
}
}
mURI
mProxyResolveFlags
)
;
if
(
NS_WARN_IF
(
NS_FAILED
(
rv
)
)
)
{
nsTArray
<
ProxyInfoCloneArgs
>
emptyArray
;
Unused
<
<
Send__delete__
(
self
emptyArray
rv
)
;
}
}
}
}
