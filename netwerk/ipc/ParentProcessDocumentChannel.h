#
ifndef
mozilla_net_ParentProcessDocumentChannel_h
#
define
mozilla_net_ParentProcessDocumentChannel_h
#
include
"
mozilla
/
ipc
/
ProtocolUtils
.
h
"
#
include
"
mozilla
/
net
/
DocumentChannel
.
h
"
#
include
"
mozilla
/
net
/
DocumentLoadListener
.
h
"
#
include
"
nsIObserver
.
h
"
#
include
"
nsIAsyncVerifyRedirectCallback
.
h
"
namespace
mozilla
{
namespace
net
{
class
EarlyHintConnectArgs
;
class
ParentProcessDocumentChannel
:
public
DocumentChannel
public
nsIAsyncVerifyRedirectCallback
public
nsIObserver
{
public
:
ParentProcessDocumentChannel
(
nsDocShellLoadState
*
aLoadState
class
LoadInfo
*
aLoadInfo
nsLoadFlags
aLoadFlags
uint32_t
aCacheKey
bool
aUriModified
bool
aIsXFOError
)
;
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_NSIASYNCVERIFYREDIRECTCALLBACK
NS_DECL_NSIOBSERVER
NS_IMETHOD
AsyncOpen
(
nsIStreamListener
*
aListener
)
override
;
NS_IMETHOD
Cancel
(
nsresult
aStatusCode
)
override
;
NS_IMETHOD
CancelWithReason
(
nsresult
aStatusCode
const
nsACString
&
aReason
)
override
;
RefPtr
<
PDocumentChannelParent
:
:
RedirectToRealChannelPromise
>
RedirectToRealChannel
(
nsTArray
<
ipc
:
:
Endpoint
<
extensions
:
:
PStreamFilterParent
>
>
&
&
aStreamFilterEndpoints
uint32_t
aRedirectFlags
uint32_t
aLoadFlags
const
nsTArray
<
EarlyHintConnectArgs
>
&
aEarlyHints
)
;
private
:
virtual
~
ParentProcessDocumentChannel
(
)
;
void
RemoveObserver
(
)
;
RefPtr
<
DocumentLoadListener
>
mDocumentLoadListener
;
nsTArray
<
ipc
:
:
Endpoint
<
extensions
:
:
PStreamFilterParent
>
>
mStreamFilterEndpoints
;
MozPromiseHolder
<
PDocumentChannelParent
:
:
RedirectToRealChannelPromise
>
mPromise
;
bool
mRequestObserversCalled
=
false
;
}
;
}
}
#
endif
