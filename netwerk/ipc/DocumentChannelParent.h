#
ifndef
mozilla_net_DocumentChannelParent_h
#
define
mozilla_net_DocumentChannelParent_h
#
include
"
mozilla
/
net
/
DocumentLoadListener
.
h
"
#
include
"
mozilla
/
net
/
PDocumentChannelParent
.
h
"
namespace
mozilla
{
namespace
dom
{
class
CanonicalBrowsingContext
;
}
namespace
net
{
class
EarlyHintConnectArgs
;
class
DocumentChannelParent
final
:
public
PDocumentChannelParent
public
DocumentLoadListener
:
:
ObjectUpgradeHandler
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
DocumentChannelParent
override
)
;
explicit
DocumentChannelParent
(
)
;
bool
Init
(
dom
:
:
CanonicalBrowsingContext
*
aContext
const
DocumentChannelCreationArgs
&
aArgs
)
;
ipc
:
:
IPCResult
RecvCancel
(
const
nsresult
&
aStatus
const
nsCString
&
aReason
)
{
if
(
mDocumentLoadListener
)
{
mDocumentLoadListener
-
>
Cancel
(
aStatus
aReason
)
;
}
return
IPC_OK
(
)
;
}
void
ActorDestroy
(
ActorDestroyReason
aWhy
)
override
{
if
(
mDocumentLoadListener
)
{
mDocumentLoadListener
-
>
Cancel
(
NS_BINDING_ABORTED
"
DocumentChannelParent
:
:
ActorDestroy
"
_ns
)
;
}
}
private
:
RefPtr
<
ObjectUpgradePromise
>
UpgradeObjectLoad
(
)
override
;
RefPtr
<
PDocumentChannelParent
:
:
RedirectToRealChannelPromise
>
RedirectToRealChannel
(
nsTArray
<
ipc
:
:
Endpoint
<
extensions
:
:
PStreamFilterParent
>
>
&
&
aStreamFilterEndpoints
uint32_t
aRedirectFlags
uint32_t
aLoadFlags
uint32_t
aEarlyHintLinkType
)
;
virtual
~
DocumentChannelParent
(
)
;
RefPtr
<
DocumentLoadListener
>
mDocumentLoadListener
;
}
;
}
}
#
endif
