#
include
"
SocketProcessParent
.
h
"
#
include
"
SocketProcessHost
.
h
"
#
include
"
mozilla
/
Move
.
h
"
namespace
mozilla
{
namespace
net
{
SocketProcessParent
:
:
SocketProcessParent
(
SocketProcessHost
*
aHost
)
:
mHost
(
aHost
)
{
MOZ_ASSERT
(
mHost
)
;
MOZ_COUNT_CTOR
(
SocketProcessParent
)
;
}
SocketProcessParent
:
:
~
SocketProcessParent
(
)
{
MOZ_COUNT_DTOR
(
SocketProcessParent
)
;
}
void
SocketProcessParent
:
:
ActorDestroy
(
ActorDestroyReason
aWhy
)
{
if
(
mHost
)
{
mHost
-
>
OnChannelClosed
(
)
;
}
}
class
DeferredDeleteSocketProcessParent
:
public
Runnable
{
public
:
explicit
DeferredDeleteSocketProcessParent
(
UniquePtr
<
SocketProcessParent
>
&
&
aParent
)
:
Runnable
(
"
net
:
:
DeferredDeleteSocketProcessParent
"
)
mParent
(
std
:
:
move
(
aParent
)
)
{
}
NS_IMETHODIMP
Run
(
)
override
{
return
NS_OK
;
}
private
:
UniquePtr
<
SocketProcessParent
>
mParent
;
}
;
void
SocketProcessParent
:
:
Destroy
(
UniquePtr
<
SocketProcessParent
>
&
&
aParent
)
{
NS_DispatchToMainThread
(
new
DeferredDeleteSocketProcessParent
(
std
:
:
move
(
aParent
)
)
)
;
}
}
}
