#
ifndef
mozilla_net_ProxyConfigLookup_h
#
define
mozilla_net_ProxyConfigLookup_h
#
include
<
functional
>
#
include
"
nsIProtocolProxyCallback
.
h
"
class
nsIURI
;
namespace
mozilla
{
namespace
net
{
class
ProxyConfigLookup
final
:
public
nsIProtocolProxyCallback
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIPROTOCOLPROXYCALLBACK
static
nsresult
Create
(
std
:
:
function
<
void
(
nsIProxyInfo
*
nsresult
)
>
&
&
aCallback
nsIURI
*
aURI
uint32_t
aProxyResolveFlags
)
;
private
:
explicit
ProxyConfigLookup
(
std
:
:
function
<
void
(
nsIProxyInfo
*
nsresult
)
>
&
&
aCallback
nsIURI
*
aURI
uint32_t
aProxyResolveFlags
)
;
virtual
~
ProxyConfigLookup
(
)
;
nsresult
DoProxyResolve
(
)
;
std
:
:
function
<
void
(
nsIProxyInfo
*
nsresult
)
>
mCallback
;
nsCOMPtr
<
nsIURI
>
mURI
;
uint32_t
mProxyResolveFlags
;
}
;
}
}
#
endif
