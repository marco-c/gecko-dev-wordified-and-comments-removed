#
include
"
ProxyConfigLookupChild
.
h
"
#
include
"
mozilla
/
net
/
SocketProcessChild
.
h
"
#
include
"
nsProxyInfo
.
h
"
namespace
mozilla
{
namespace
net
{
bool
ProxyConfigLookupChild
:
:
Create
(
nsIURI
*
aURI
uint32_t
aProxyResolveFlags
std
:
:
function
<
void
(
nsIProxyInfo
*
nsresult
)
>
&
&
aCallback
)
{
SocketProcessChild
*
socketChild
=
SocketProcessChild
:
:
GetSingleton
(
)
;
if
(
!
socketChild
)
{
return
false
;
}
RefPtr
<
ProxyConfigLookupChild
>
child
=
new
ProxyConfigLookupChild
(
std
:
:
move
(
aCallback
)
)
;
return
socketChild
-
>
SendPProxyConfigLookupConstructor
(
child
aURI
aProxyResolveFlags
)
;
}
ProxyConfigLookupChild
:
:
ProxyConfigLookupChild
(
std
:
:
function
<
void
(
nsIProxyInfo
*
nsresult
)
>
&
&
aCallback
)
:
mCallback
(
std
:
:
move
(
aCallback
)
)
{
}
mozilla
:
:
ipc
:
:
IPCResult
ProxyConfigLookupChild
:
:
Recv__delete__
(
nsTArray
<
ProxyInfoCloneArgs
>
&
&
aProxyInfo
const
nsresult
&
aResult
)
{
nsCOMPtr
<
nsIProxyInfo
>
proxyInfo
=
nsProxyInfo
:
:
DeserializeProxyInfo
(
aProxyInfo
)
;
mCallback
(
proxyInfo
aResult
)
;
return
IPC_OK
(
)
;
}
}
}
