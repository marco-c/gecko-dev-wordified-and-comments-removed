#
ifndef
mozilla_net_BrowsingContextDocumentChannel_h
#
define
mozilla_net_BrowsingContextDocumentChannel_h
#
include
"
mozilla
/
net
/
ADocumentChannelBridge
.
h
"
class
nsIBrowser
;
namespace
mozilla
{
namespace
dom
{
class
CanonicalBrowsingContext
;
}
namespace
net
{
class
DocumentLoadListener
;
class
BrowsingContextDocumentChannel
:
public
ADocumentChannelBridge
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
BrowsingContextDocumentChannel
override
)
explicit
BrowsingContextDocumentChannel
(
dom
:
:
CanonicalBrowsingContext
*
aBrowsingContext
)
;
bool
Open
(
nsDocShellLoadState
*
aLoadState
uint64_t
aOuterWindowId
bool
aSetNavigating
)
;
void
DisconnectChildListeners
(
nsresult
aStatus
nsresult
aLoadGroupStatus
bool
aSwitchingToNewProcess
)
override
;
void
Delete
(
)
override
;
bool
SupportsRedirectToRealChannel
(
)
override
{
return
false
;
}
RefPtr
<
PDocumentChannelParent
:
:
RedirectToRealChannelPromise
>
RedirectToRealChannel
(
nsTArray
<
ipc
:
:
Endpoint
<
extensions
:
:
PStreamFilterParent
>
>
&
&
aStreamFilterEndpoints
uint32_t
aRedirectFlags
uint32_t
aLoadFlags
)
override
;
base
:
:
ProcessId
OtherPid
(
)
const
override
;
private
:
virtual
~
BrowsingContextDocumentChannel
(
)
=
default
;
void
FireStateChange
(
uint32_t
aStateFlags
nsresult
aStatus
)
;
void
SetNavigating
(
bool
aNavigating
)
;
already_AddRefed
<
nsIBrowser
>
GetBrowser
(
)
;
RefPtr
<
DocumentLoadListener
>
mParent
;
}
;
}
}
#
endif
