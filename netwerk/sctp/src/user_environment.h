#
ifndef
_USER_ENVIRONMENT_H_
#
define
_USER_ENVIRONMENT_H_
#
include
<
sys
/
types
.
h
>
#
ifdef
__FreeBSD__
#
ifndef
_SYS_MUTEX_H_
#
include
<
sys
/
mutex
.
h
>
#
endif
#
endif
#
if
defined
(
_WIN32
)
#
include
"
netinet
/
sctp_os_userspace
.
h
"
#
endif
extern
int
maxsockets
;
extern
int
hz
;
extern
int
ipport_firstauto
ipport_lastauto
;
extern
int
nmbclusters
;
#
if
!
defined
(
_MSC_VER
)
&
&
!
defined
(
__MINGW32__
)
#
define
min
(
a
b
)
(
(
(
a
)
>
(
b
)
)
?
(
b
)
:
(
a
)
)
#
define
max
(
a
b
)
(
(
(
a
)
>
(
b
)
)
?
(
a
)
:
(
b
)
)
#
endif
void
init_random
(
void
)
;
void
read_random
(
void
*
size_t
)
;
void
finish_random
(
void
)
;
extern
u_short
ip_id
;
#
if
defined
(
__linux__
)
#
define
IPV6_VERSION
0x60
#
endif
#
if
defined
(
INVARIANTS
)
#
include
<
stdlib
.
h
>
#
if
defined
(
_WIN32
)
static
inline
void
__declspec
(
noreturn
)
#
else
static
inline
void
__attribute__
(
(
__noreturn__
)
)
#
endif
terminate_non_graceful
(
void
)
{
abort
(
)
;
}
#
define
panic
(
.
.
.
)
\
do
{
\
SCTP_PRINTF
(
"
%
s
(
)
:
"
__func__
)
;
\
SCTP_PRINTF
(
__VA_ARGS__
)
;
\
SCTP_PRINTF
(
"
\
n
"
)
;
\
terminate_non_graceful
(
)
;
\
}
while
(
0
)
#
define
KASSERT
(
cond
args
)
\
do
{
\
if
(
!
(
cond
)
)
{
\
panic
args
;
\
}
\
}
while
(
0
)
#
else
#
define
KASSERT
(
cond
args
)
#
endif
extern
int
ip_defttl
;
#
endif
