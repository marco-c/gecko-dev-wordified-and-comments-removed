#
include
"
nsISupports
.
idl
"
[
builtinclass
scriptable
uuid
(
70cf6091
-
a1de
-
4aa8
-
8224
-
058f8964be31
)
]
interface
nsIClassifiedChannel
:
nsISupports
{
void
setMatchedInfo
(
in
ACString
aList
in
ACString
aProvider
in
ACString
aFullHash
)
;
readonly
attribute
ACString
matchedList
;
readonly
attribute
ACString
matchedProvider
;
readonly
attribute
ACString
matchedFullHash
;
void
setMatchedTrackingInfo
(
in
Array
<
ACString
>
aLists
in
Array
<
ACString
>
aFullHashes
)
;
readonly
attribute
Array
<
ACString
>
matchedTrackingLists
;
readonly
attribute
Array
<
ACString
>
matchedTrackingFullHashes
;
[
infallible
]
readonly
attribute
unsigned
long
firstPartyClassificationFlags
;
[
infallible
]
readonly
attribute
unsigned
long
thirdPartyClassificationFlags
;
[
infallible
]
readonly
attribute
unsigned
long
classificationFlags
;
cenum
ClassificationFlags
:
32
{
CLASSIFIED_FINGERPRINTING
=
0x0001
CLASSIFIED_FINGERPRINTING_CONTENT
=
0x0080
CLASSIFIED_CRYPTOMINING
=
0x0002
CLASSIFIED_CRYPTOMINING_CONTENT
=
0x0100
CLASSIFIED_TRACKING
=
0x0004
CLASSIFIED_TRACKING_AD
=
0x0008
CLASSIFIED_TRACKING_ANALYTICS
=
0x0010
CLASSIFIED_TRACKING_SOCIAL
=
0x0020
CLASSIFIED_TRACKING_CONTENT
=
0x0040
CLASSIFIED_SOCIALTRACKING
=
0x0200
CLASSIFIED_SOCIALTRACKING_FACEBOOK
=
0x0400
CLASSIFIED_SOCIALTRACKING_LINKEDIN
=
0x0800
CLASSIFIED_SOCIALTRACKING_TWITTER
=
0x1000
CLASSIFIED_EMAILTRACKING
=
0x2000
CLASSIFIED_EMAILTRACKING_CONTENT
=
0x4000
CLASSIFIED_CONSENTMANAGER
=
0x8000
CLASSIFIED_ANY_BASIC_TRACKING
=
CLASSIFIED_TRACKING
|
CLASSIFIED_TRACKING_AD
|
CLASSIFIED_TRACKING_ANALYTICS
|
CLASSIFIED_TRACKING_SOCIAL
|
CLASSIFIED_FINGERPRINTING
CLASSIFIED_ANY_STRICT_TRACKING
=
CLASSIFIED_ANY_BASIC_TRACKING
|
CLASSIFIED_TRACKING_CONTENT
|
CLASSIFIED_FINGERPRINTING_CONTENT
CLASSIFIED_ANY_SOCIAL_TRACKING
=
CLASSIFIED_SOCIALTRACKING
|
CLASSIFIED_SOCIALTRACKING_FACEBOOK
|
CLASSIFIED_SOCIALTRACKING_LINKEDIN
|
CLASSIFIED_SOCIALTRACKING_TWITTER
}
;
boolean
isThirdPartyTrackingResource
(
)
;
%
{
C
+
+
inline
bool
IsThirdPartyTrackingResource
(
)
{
bool
value
=
false
;
if
(
NS_SUCCEEDED
(
IsThirdPartyTrackingResource
(
&
value
)
)
&
&
value
)
{
return
true
;
}
return
false
;
}
%
}
boolean
isThirdPartySocialTrackingResource
(
)
;
%
{
C
+
+
inline
bool
IsThirdPartySocialTrackingResource
(
)
{
bool
value
=
false
;
if
(
NS_SUCCEEDED
(
IsThirdPartySocialTrackingResource
(
&
value
)
)
&
&
value
)
{
return
true
;
}
return
false
;
}
%
}
}
;
