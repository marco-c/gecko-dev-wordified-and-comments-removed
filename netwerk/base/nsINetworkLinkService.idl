#
include
"
nsISupports
.
idl
"
interface
nsINetAddr
;
%
{
C
+
+
#
include
"
nsTArrayForwardDeclare
.
h
"
namespace
mozilla
{
namespace
net
{
union
NetAddr
;
}
}
%
}
native
NetAddr
(
mozilla
:
:
net
:
:
NetAddr
)
;
[
scriptable
uuid
(
103e5293
-
77b3
-
4b70
-
af59
-
6e9e4a1f994a
)
]
interface
nsINetworkLinkService
:
nsISupports
{
const
unsigned
long
LINK_TYPE_UNKNOWN
=
0
;
const
unsigned
long
LINK_TYPE_ETHERNET
=
1
;
const
unsigned
long
LINK_TYPE_USB
=
2
;
const
unsigned
long
LINK_TYPE_WIFI
=
3
;
const
unsigned
long
LINK_TYPE_WIMAX
=
4
;
const
unsigned
long
LINK_TYPE_MOBILE
=
9
;
readonly
attribute
boolean
isLinkUp
;
readonly
attribute
boolean
linkStatusKnown
;
readonly
attribute
unsigned
long
linkType
;
readonly
attribute
ACString
networkID
;
readonly
attribute
Array
<
ACString
>
dnsSuffixList
;
[
noscript
]
readonly
attribute
Array
<
NetAddr
>
nativeResolvers
;
readonly
attribute
Array
<
nsINetAddr
>
resolvers
;
const
unsigned
long
NONE_DETECTED
=
0
;
const
unsigned
long
VPN_DETECTED
=
1
<
<
0
;
const
unsigned
long
PROXY_DETECTED
=
1
<
<
1
;
const
unsigned
long
NRPT_DETECTED
=
1
<
<
2
;
readonly
attribute
unsigned
long
platformDNSIndications
;
}
;
%
{
C
+
+
#
define
NS_NETWORK_LINK_TOPIC
"
network
:
link
-
status
-
changed
"
#
define
NS_NETWORK_LINK_DATA_UP
"
up
"
#
define
NS_NETWORK_LINK_DATA_DOWN
"
down
"
#
define
NS_NETWORK_LINK_DATA_CHANGED
"
changed
"
#
define
NS_NETWORK_LINK_DATA_UNKNOWN
"
unknown
"
#
define
NS_NETWORK_ID_CHANGED_TOPIC
"
network
:
networkid
-
changed
"
#
define
NS_DNS_SUFFIX_LIST_UPDATED_TOPIC
"
network
:
dns
-
suffix
-
list
-
updated
"
#
define
NS_NETWORK_LINK_TYPE_TOPIC
"
network
:
link
-
type
-
changed
"
#
define
NS_NETWORK_LINK_TYPE_UNKNOWN
"
unknown
"
#
define
NS_NETWORK_LINK_TYPE_ETHERNET
"
ethernet
"
#
define
NS_NETWORK_LINK_TYPE_USB
"
usb
"
#
define
NS_NETWORK_LINK_TYPE_WIFI
"
wifi
"
#
define
NS_NETWORK_LINK_TYPE_WIMAX
"
wimax
"
#
define
NS_NETWORK_LINK_TYPE_MOBILE
"
mobile
"
%
}
