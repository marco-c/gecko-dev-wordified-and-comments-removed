#
ifndef
mozilla_net_ProtocolHandlerInfo_h
#
define
mozilla_net_ProtocolHandlerInfo_h
#
include
"
mozilla
/
Variant
.
h
"
#
include
"
nsProxyRelease
.
h
"
#
include
"
nsIProtocolHandler
.
h
"
namespace
mozilla
{
namespace
xpcom
{
struct
StaticProtocolHandler
;
}
namespace
net
{
struct
RuntimeProtocolHandler
{
nsMainThreadPtrHandle
<
nsIProtocolHandler
>
mHandler
;
uint32_t
mProtocolFlags
;
int32_t
mDefaultPort
;
}
;
class
ProtocolHandlerInfo
{
public
:
explicit
ProtocolHandlerInfo
(
const
xpcom
:
:
StaticProtocolHandler
&
aStatic
)
:
mInner
(
AsVariant
(
&
aStatic
)
)
{
}
explicit
ProtocolHandlerInfo
(
RuntimeProtocolHandler
aDynamic
)
:
mInner
(
AsVariant
(
std
:
:
move
(
aDynamic
)
)
)
{
}
uint32_t
StaticProtocolFlags
(
)
const
;
int32_t
DefaultPort
(
)
const
;
bool
HasDynamicFlags
(
)
const
;
nsresult
DynamicProtocolFlags
(
nsIURI
*
aURI
uint32_t
*
aFlags
)
const
MOZ_REQUIRES
(
sMainThreadCapability
)
;
already_AddRefed
<
nsIProtocolHandler
>
Handler
(
)
const
MOZ_REQUIRES
(
sMainThreadCapability
)
;
private
:
Variant
<
const
xpcom
:
:
StaticProtocolHandler
*
RuntimeProtocolHandler
>
mInner
;
}
;
}
}
#
endif
