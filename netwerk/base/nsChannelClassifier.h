#
ifndef
nsChannelClassifier_h__
#
define
nsChannelClassifier_h__
#
include
"
nsIURIClassifier
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
class
nsIChannel
;
class
nsIHttpChannelInternal
;
class
nsIDocument
;
namespace
mozilla
{
namespace
net
{
class
nsChannelClassifier
final
:
public
nsIURIClassifierCallback
{
public
:
explicit
nsChannelClassifier
(
nsIChannel
*
aChannel
)
;
NS_DECL_ISUPPORTS
NS_DECL_NSIURICLASSIFIERCALLBACK
void
Start
(
)
;
nsresult
ShouldEnableTrackingProtection
(
bool
*
result
)
;
private
:
bool
mIsAllowListed
;
bool
mSuspendedChannel
;
nsCOMPtr
<
nsIChannel
>
mChannel
;
Maybe
<
bool
>
mTrackingProtectionEnabled
;
~
nsChannelClassifier
(
)
{
}
void
MarkEntryClassified
(
nsresult
status
)
;
bool
HasBeenClassified
(
nsIChannel
*
aChannel
)
;
nsresult
StartInternal
(
)
;
nsresult
IsTrackerWhitelisted
(
)
;
bool
IsHostnameWhitelisted
(
nsIURI
*
aUri
const
nsACString
&
aWhitelisted
)
;
static
bool
SameLoadingURI
(
nsIDocument
*
aDoc
nsIChannel
*
aChannel
)
;
nsresult
ShouldEnableTrackingProtectionInternal
(
nsIChannel
*
aChannel
bool
*
result
)
;
public
:
static
nsresult
SetBlockedTrackingContent
(
nsIChannel
*
channel
)
;
static
nsresult
NotifyTrackingProtectionDisabled
(
nsIChannel
*
aChannel
)
;
}
;
}
}
#
endif
