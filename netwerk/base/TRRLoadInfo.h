#
ifndef
mozilla_TRRLoadInfo_h
#
define
mozilla_TRRLoadInfo_h
#
include
"
nsILoadInfo
.
h
"
#
include
"
nsIURI
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
mozilla
/
dom
/
ClientInfo
.
h
"
#
include
"
mozilla
/
dom
/
ServiceWorkerDescriptor
.
h
"
#
include
"
mozilla
/
OriginAttributes
.
h
"
namespace
mozilla
{
namespace
net
{
class
TRRLoadInfo
final
:
public
nsILoadInfo
{
public
:
NS_DECL_THREADSAFE_ISUPPORTS
NS_DECL_NSILOADINFO
TRRLoadInfo
(
nsIURI
*
aResultPrincipalURI
nsContentPolicyType
aContentPolicyType
)
;
already_AddRefed
<
nsILoadInfo
>
Clone
(
)
const
;
private
:
virtual
~
TRRLoadInfo
(
)
=
default
;
nsCOMPtr
<
nsIURI
>
mResultPrincipalURI
;
nsContentPolicyType
mInternalContentPolicyType
;
OriginAttributes
mOriginAttributes
;
nsTArray
<
nsCOMPtr
<
nsIRedirectHistoryEntry
>
>
mEmptyRedirectChain
;
nsTArray
<
nsCOMPtr
<
nsIPrincipal
>
>
mEmptyPrincipals
;
nsTArray
<
uint64_t
>
mEmptyBrowsingContextIDs
;
nsTArray
<
nsCString
>
mCorsUnsafeHeaders
;
nsID
mSandboxedNullPrincipalID
;
Maybe
<
mozilla
:
:
dom
:
:
ClientInfo
>
mClientInfo
;
Maybe
<
mozilla
:
:
dom
:
:
ClientInfo
>
mReservedClientInfo
;
Maybe
<
mozilla
:
:
dom
:
:
ClientInfo
>
mInitialClientInfo
;
Maybe
<
mozilla
:
:
dom
:
:
ServiceWorkerDescriptor
>
mController
;
Maybe
<
RFPTargetSet
>
mOverriddenFingerprintingSettings
;
}
;
}
}
#
endif
