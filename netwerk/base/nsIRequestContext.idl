#
include
"
nsISupports
.
idl
"
interface
nsILoadGroup
;
interface
nsIChannel
;
interface
nsIStreamListener
;
[
uuid
(
7EB361D4
-
37A5
-
42C9
-
AFAE
-
F6C88FE7C394
)
]
interface
nsIRequestTailUnblockCallback
:
nsISupports
{
void
onTailUnblock
(
in
nsresult
aResult
)
;
}
;
[
uuid
(
658e3e6e
-
8633
-
4b1a
-
8d66
-
fa9f72293e63
)
]
interface
nsIRequestContext
:
nsISupports
{
[
notxpcom
nostdcall
]
readonly
attribute
unsigned
long
long
ID
;
void
beginLoad
(
)
;
void
DOMContentLoaded
(
)
;
readonly
attribute
unsigned
long
blockingTransactionCount
;
void
addBlockingTransaction
(
)
;
unsigned
long
removeBlockingTransaction
(
)
;
void
addNonTailRequest
(
)
;
void
removeNonTailRequest
(
)
;
[
must_use
]
boolean
isContextTailBlocked
(
in
nsIRequestTailUnblockCallback
callback
)
;
void
cancelTailedRequest
(
in
nsIRequestTailUnblockCallback
request
)
;
void
cancelTailPendingRequests
(
in
nsresult
aResult
)
;
}
;
[
uuid
(
7fcbf4da
-
d828
-
4acc
-
b144
-
e5435198f727
)
]
interface
nsIRequestContextService
:
nsISupports
{
nsIRequestContext
getRequestContext
(
in
unsigned
long
long
id
)
;
nsIRequestContext
getRequestContextFromLoadGroup
(
in
nsILoadGroup
lg
)
;
nsIRequestContext
newRequestContext
(
)
;
void
removeRequestContext
(
in
unsigned
long
long
id
)
;
}
;
