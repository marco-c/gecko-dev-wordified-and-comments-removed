#
include
"
nsISupports
.
idl
"
interface
nsIPrincipal
;
interface
nsIURI
;
interface
nsIInterfaceRequestor
;
[
scriptable
uuid
(
d74a17ac
-
5b8a
-
4824
-
a309
-
b1f04a3c4aed
)
]
interface
nsISpeculativeConnect
:
nsISupports
{
void
speculativeConnect
(
in
nsIURI
aURI
in
nsIPrincipal
aPrincipal
in
nsIInterfaceRequestor
aCallbacks
)
;
void
speculativeAnonymousConnect
(
in
nsIURI
aURI
in
nsIPrincipal
aPrincipal
in
nsIInterfaceRequestor
aCallbacks
)
;
}
;
[
uuid
(
1040ebe3
-
6ed1
-
45a6
-
8587
-
995e082518d7
)
]
interface
nsISpeculativeConnectionOverrider
:
nsISupports
{
[
infallible
]
readonly
attribute
unsigned
long
parallelSpeculativeConnectLimit
;
[
infallible
]
readonly
attribute
boolean
ignoreIdle
;
[
infallible
]
readonly
attribute
boolean
isFromPredictor
;
[
infallible
]
readonly
attribute
boolean
allow1918
;
[
infallible
]
readonly
attribute
boolean
ignoreUserCertCheck
;
}
;
