#
include
"
nsISupports
.
idl
"
#
include
"
nsIContentPolicy
.
idl
"
interface
nsIPrincipal
;
interface
nsIRedirectHistoryEntry
;
%
{
C
+
+
#
include
"
nsTArray
.
h
"
%
}
[
ref
]
native
nsIRedirectHistoryEntryArray
(
const
nsTArray
<
nsCOMPtr
<
nsIRedirectHistoryEntry
>
>
)
;
[
scriptable
builtinclass
uuid
(
8b9cd81f
-
3cd1
-
4f6a
-
9086
-
92a9bbf055f4
)
]
interface
nsIInterceptionInfo
:
nsISupports
{
[
noscript
notxpcom
nostdcall
binaryname
(
TriggeringPrincipal
)
]
nsIPrincipal
binaryTriggeringPrincipal
(
)
;
[
noscript
notxpcom
nostdcall
binaryname
(
SetTriggeringPrincipal
)
]
void
binarySetTriggeringPrincipal
(
in
nsIPrincipal
aPrincipal
)
;
[
noscript
notxpcom
nostdcall
binaryname
(
ContentPolicyType
)
]
nsContentPolicyType
binaryContentPolicyType
(
)
;
[
noscript
notxpcom
nostdcall
binaryname
(
ExternalContentPolicyType
)
]
nsContentPolicyType
binaryExternalContentPolicyType
(
)
;
[
noscript
notxpcom
nostdcall
binaryname
(
SetContentPolicyType
)
]
void
binarySetContentPolicyType
(
in
nsContentPolicyType
aContentPolicyType
)
;
%
{
C
+
+
inline
ExtContentPolicyType
GetExtContentPolicyType
(
)
{
return
static_cast
<
ExtContentPolicyType
>
(
ExternalContentPolicyType
(
)
)
;
}
%
}
[
noscript
notxpcom
nostdcall
binaryname
(
RedirectChain
)
]
nsIRedirectHistoryEntryArray
binaryRedirectChain
(
)
;
[
noscript
notxpcom
nostdcall
binaryname
(
SetRedirectChain
)
]
void
binarySetRedirectChain
(
in
nsIRedirectHistoryEntryArray
aRedirectChain
)
;
[
noscript
notxpcom
nostdcall
binaryname
(
FromThirdParty
)
]
boolean
binaryFromThirdParty
(
)
;
[
noscript
notxpcom
nostdcall
binaryname
(
SetFromThirdParty
)
]
void
binarySetFromThirdParty
(
in
boolean
aFromThirdParty
)
;
}
;
