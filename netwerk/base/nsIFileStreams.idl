#
include
"
nsIInputStream
.
idl
"
#
include
"
nsIOutputStream
.
idl
"
interface
nsIEventTarget
;
interface
nsIFile
;
interface
nsIFileMetadataCallback
;
%
{
C
+
+
struct
PRFileDesc
;
%
}
[
ptr
]
native
PRFileDescPtr
(
PRFileDesc
)
;
[
scriptable
builtinclass
uuid
(
e3d56a20
-
c7ec
-
11d3
-
8cda
-
0060b0fc14a3
)
]
interface
nsIFileInputStream
:
nsIInputStream
{
void
init
(
in
nsIFile
file
in
long
ioFlags
in
long
perm
in
long
behaviorFlags
)
;
const
long
CLOSE_ON_EOF
=
1
<
<
2
;
const
long
REOPEN_ON_REWIND
=
1
<
<
3
;
const
long
DEFER_OPEN
=
1
<
<
4
;
const
long
SHARE_DELETE
=
1
<
<
5
;
}
;
[
scriptable
builtinclass
uuid
(
e734cac9
-
1295
-
4e6f
-
9684
-
3ac4e1f91063
)
]
interface
nsIFileOutputStream
:
nsIOutputStream
{
void
init
(
in
nsIFile
file
in
long
ioFlags
in
long
perm
in
long
behaviorFlags
)
;
[
noscript
]
void
preallocate
(
in
long
long
length
)
;
const
long
DEFER_OPEN
=
1
<
<
0
;
}
;
[
scriptable
builtinclass
uuid
(
82cf605a
-
8393
-
4550
-
83ab
-
43cd5578e006
)
]
interface
nsIFileStream
:
nsISupports
{
void
init
(
in
nsIFile
file
in
long
ioFlags
in
long
perm
in
long
behaviorFlags
)
;
const
long
DEFER_OPEN
=
1
<
<
0
;
}
;
[
scriptable
builtinclass
uuid
(
07f679e4
-
9601
-
4bd1
-
b510
-
cd3852edb881
)
]
interface
nsIFileMetadata
:
nsISupports
{
readonly
attribute
long
long
size
;
readonly
attribute
long
long
lastModified
;
[
noscript
]
PRFileDescPtr
getFileDescriptor
(
)
;
}
;
[
scriptable
builtinclass
uuid
(
de15b80b
-
29ba
-
4b7f
-
9220
-
a3d75b17ae8c
)
]
interface
nsIAsyncFileMetadata
:
nsIFileMetadata
{
void
asyncFileMetadataWait
(
in
nsIFileMetadataCallback
aCallback
in
nsIEventTarget
aEventTarget
)
;
}
;
[
function
scriptable
uuid
(
d01c7ead
-
7ba3
-
4726
-
b399
-
618ec8ec7057
)
]
interface
nsIFileMetadataCallback
:
nsISupports
{
void
onFileMetadataReady
(
in
nsIAsyncFileMetadata
aObject
)
;
}
;
