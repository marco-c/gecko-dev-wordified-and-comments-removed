use
nsstring
:
:
nsCString
;
use
std
:
:
ffi
:
:
c_void
;
use
thin_vec
:
:
ThinVec
;
#
[
derive
(
Debug
Clone
)
]
#
[
repr
(
C
)
]
pub
struct
MaybeString
{
pub
string
:
nsCString
pub
valid
:
bool
}
impl
MaybeString
{
pub
fn
new
(
s
:
&
nsCString
)
-
>
Self
{
Self
{
string
:
s
.
clone
(
)
valid
:
true
}
}
pub
fn
none
(
)
-
>
Self
{
Self
{
string
:
nsCString
:
:
new
(
)
valid
:
false
}
}
}
#
[
repr
(
C
)
]
pub
struct
UrlpPattern
(
pub
*
mut
c_void
)
;
#
[
derive
(
Debug
Clone
)
]
#
[
repr
(
C
)
]
pub
struct
UrlpInit
{
pub
protocol
:
MaybeString
pub
username
:
MaybeString
pub
password
:
MaybeString
pub
hostname
:
MaybeString
pub
port
:
MaybeString
pub
pathname
:
MaybeString
pub
search
:
MaybeString
pub
hash
:
MaybeString
pub
base_url
:
MaybeString
}
impl
UrlpInit
{
pub
fn
none
(
)
-
>
Self
{
Self
{
protocol
:
MaybeString
:
:
none
(
)
username
:
MaybeString
:
:
none
(
)
password
:
MaybeString
:
:
none
(
)
hostname
:
MaybeString
:
:
none
(
)
port
:
MaybeString
:
:
none
(
)
pathname
:
MaybeString
:
:
none
(
)
search
:
MaybeString
:
:
none
(
)
hash
:
MaybeString
:
:
none
(
)
base_url
:
MaybeString
:
:
none
(
)
}
}
}
#
[
derive
(
Debug
)
]
#
[
repr
(
C
)
]
pub
struct
UrlpMatchInput
{
pub
protocol
:
nsCString
pub
username
:
nsCString
pub
password
:
nsCString
pub
hostname
:
nsCString
pub
port
:
nsCString
pub
pathname
:
nsCString
pub
search
:
nsCString
pub
hash
:
nsCString
}
#
[
derive
(
Debug
)
]
#
[
repr
(
C
)
]
pub
enum
UrlpStringOrInitType
{
String
Init
}
#
[
derive
(
Debug
)
]
#
[
repr
(
C
)
]
pub
struct
UrlpInput
{
pub
string_or_init_type
:
UrlpStringOrInitType
pub
str
:
nsCString
pub
init
:
UrlpInit
pub
base
:
MaybeString
}
#
[
derive
(
Debug
)
]
#
[
repr
(
C
)
]
pub
struct
UrlpMatchInputAndInputs
{
pub
input
:
UrlpMatchInput
pub
inputs
:
UrlpInput
}
#
[
derive
(
Debug
)
]
#
[
repr
(
C
)
]
pub
struct
UrlpOptions
{
pub
ignore_case
:
bool
}
#
[
derive
(
Debug
Clone
PartialEq
)
]
#
[
repr
(
C
)
]
pub
enum
UrlpInnerMatcherType
{
Literal
SingleCapture
RegExp
}
#
[
derive
(
Debug
Clone
PartialEq
)
]
#
[
repr
(
C
)
]
pub
struct
UrlpInnerMatcher
{
pub
inner_type
:
UrlpInnerMatcherType
pub
literal
:
nsCString
pub
allow_empty
:
bool
pub
filter_exists
:
bool
pub
filter
:
char
pub
regexp
:
nsCString
}
#
[
derive
(
Debug
Clone
PartialEq
)
]
#
[
repr
(
C
)
]
pub
struct
UrlpMatcher
{
pub
prefix
:
nsCString
pub
suffix
:
nsCString
pub
inner
:
UrlpInnerMatcher
}
#
[
derive
(
Debug
Clone
PartialEq
)
]
#
[
repr
(
C
)
]
pub
struct
UrlpComponent
{
pub
pattern_string
:
nsCString
pub
regexp_string
:
nsCString
pub
matcher
:
UrlpMatcher
pub
group_name_list
:
ThinVec
<
nsCString
>
}
