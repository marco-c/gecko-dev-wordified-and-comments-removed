#
include
"
nsISupports
.
idl
"
%
{
C
+
+
#
include
"
mozilla
/
BasePrincipal
.
h
"
%
}
native
OriginAttributesNativePtr
(
const
mozilla
:
:
OriginAttributes
*
)
;
interface
nsILoadContext
;
interface
nsIDOMWindow
;
[
scriptable
builtinclass
uuid
(
555e2f8a
-
a1f6
-
41dd
-
88ca
-
ed4ed6b98a22
)
]
interface
nsILoadContextInfo
:
nsISupports
{
readonly
attribute
boolean
isPrivate
;
readonly
attribute
boolean
isAnonymous
;
[
implicit_jscontext
]
readonly
attribute
jsval
originAttributes
;
[
noscript
notxpcom
nostdcall
binaryname
(
OriginAttributesPtr
)
]
OriginAttributesNativePtr
binaryOriginAttributesPtr
(
)
;
%
{
C
+
+
bool
IsPrivate
(
)
{
bool
pb
;
GetIsPrivate
(
&
pb
)
;
return
pb
;
}
bool
IsAnonymous
(
)
{
bool
anon
;
GetIsAnonymous
(
&
anon
)
;
return
anon
;
}
bool
Equals
(
nsILoadContextInfo
*
aOther
)
{
return
IsAnonymous
(
)
=
=
aOther
-
>
IsAnonymous
(
)
&
&
*
OriginAttributesPtr
(
)
=
=
*
aOther
-
>
OriginAttributesPtr
(
)
;
}
%
}
}
;
[
scriptable
uuid
(
c1c7023d
-
4318
-
4f99
-
8307
-
b5ccf0558793
)
]
interface
nsILoadContextInfoFactory
:
nsISupports
{
readonly
attribute
nsILoadContextInfo
default
;
readonly
attribute
nsILoadContextInfo
private
;
readonly
attribute
nsILoadContextInfo
anonymous
;
[
implicit_jscontext
]
nsILoadContextInfo
custom
(
in
boolean
aAnonymous
in
jsval
aOriginAttributes
)
;
nsILoadContextInfo
fromLoadContext
(
in
nsILoadContext
aLoadContext
in
boolean
aAnonymous
)
;
nsILoadContextInfo
fromWindow
(
in
nsIDOMWindow
aWindow
in
boolean
aAnonymous
)
;
}
;
