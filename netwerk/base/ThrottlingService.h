#
ifndef
mozilla__net__ThrottlingService_h
#
define
mozilla__net__ThrottlingService_h
#
include
"
nsIThrottlingService
.
h
"
#
include
"
nsCOMArray
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsInterfaceHashtable
.
h
"
#
include
"
nsIObserver
.
h
"
#
include
"
nsITimer
.
h
"
class
nsIHttpChannel
;
namespace
mozilla
{
namespace
net
{
class
ThrottlingService
:
public
nsIThrottlingService
public
nsIObserver
public
nsITimerCallback
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSITHROTTLINGSERVICE
NS_DECL_NSIOBSERVER
NS_DECL_NSITIMERCALLBACK
ThrottlingService
(
)
;
nsresult
Init
(
)
;
void
Shutdown
(
)
;
static
nsresult
Create
(
nsISupports
*
outer
const
nsIID
&
iid
void
*
*
result
)
;
private
:
virtual
~
ThrottlingService
(
)
;
void
MaybeSuspendAll
(
)
;
void
MaybeResumeAll
(
)
;
void
HandleExtraAddRemove
(
)
;
bool
mEnabled
;
bool
mInitCalled
;
bool
mSuspended
;
uint32_t
mPressureCount
;
uint32_t
mSuspendPeriod
;
uint32_t
mResumePeriod
;
nsCOMPtr
<
nsITimer
>
mTimer
;
typedef
nsInterfaceHashtable
<
nsUint64HashKey
nsIHttpChannel
>
ChannelHash
;
ChannelHash
mChannelHash
;
void
IterateHash
(
void
(
*
callback
)
(
ChannelHash
:
:
Iterator
&
iter
)
)
;
bool
mIteratingHash
;
nsCOMArray
<
nsIHttpChannel
>
mChannelsToAddRemove
;
nsTArray
<
bool
>
mChannelIsAdd
;
}
;
}
}
#
endif
