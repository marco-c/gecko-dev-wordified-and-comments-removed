#
include
<
stdlib
.
h
>
#
include
<
string
.
h
>
#
include
<
stdio
.
h
>
#
include
"
filemgr
.
hxx
"
#
include
"
csutil
.
hxx
"
int
FileMgr
:
:
fail
(
const
char
*
err
const
char
*
par
)
{
fprintf
(
stderr
err
par
)
;
return
-
1
;
}
FileMgr
:
:
FileMgr
(
const
char
*
file
const
char
*
key
)
:
hin
(
NULL
)
linenum
(
0
)
{
in
[
0
]
=
'
\
0
'
;
myopen
(
fin
file
std
:
:
ios_base
:
:
in
)
;
if
(
!
fin
.
is_open
(
)
)
{
std
:
:
string
st
(
file
)
;
st
.
append
(
HZIP_EXTENSION
)
;
hin
=
new
Hunzip
(
st
.
c_str
(
)
key
)
;
}
if
(
!
fin
.
is_open
(
)
&
&
!
hin
-
>
is_open
(
)
)
fail
(
MSG_OPEN
file
)
;
}
FileMgr
:
:
~
FileMgr
(
)
{
delete
hin
;
}
bool
FileMgr
:
:
getline
(
std
:
:
string
&
dest
)
{
bool
ret
=
false
;
+
+
linenum
;
if
(
fin
.
is_open
(
)
)
{
ret
=
static_cast
<
bool
>
(
std
:
:
getline
(
fin
dest
)
)
;
}
else
if
(
hin
-
>
is_open
(
)
)
{
ret
=
hin
-
>
getline
(
dest
)
;
}
if
(
!
ret
)
{
-
-
linenum
;
}
return
ret
;
}
int
FileMgr
:
:
getlinenum
(
)
{
return
linenum
;
}
