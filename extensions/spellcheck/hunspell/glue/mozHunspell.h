#
ifndef
mozHunspell_h__
#
define
mozHunspell_h__
#
include
<
hunspell
.
hxx
>
#
include
"
mozISpellCheckingEngine
.
h
"
#
include
"
mozIPersonalDictionary
.
h
"
#
include
"
nsString
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsCOMArray
.
h
"
#
include
"
nsIMemoryReporter
.
h
"
#
include
"
nsIObserver
.
h
"
#
include
"
mozilla
/
Encoding
.
h
"
#
include
"
nsInterfaceHashtable
.
h
"
#
include
"
nsWeakReference
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
mozHunspellAllocator
.
h
"
#
define
MOZ_HUNSPELL_CONTRACTID
"
mozilla
.
org
/
spellchecker
/
engine
;
1
"
#
define
MOZ_HUNSPELL_CID
\
{
0x56c778e4
0x1bee
0x45f3
\
{
0xa6
0x89
0x88
0x66
0x92
0xa9
0x7f
0xe7
}
}
class
mozHunspell
final
:
public
mozISpellCheckingEngine
public
nsIObserver
public
nsSupportsWeakReference
public
nsIMemoryReporter
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_MOZISPELLCHECKINGENGINE
NS_DECL_NSIOBSERVER
NS_DECL_CYCLE_COLLECTION_CLASS_AMBIGUOUS
(
mozHunspell
mozISpellCheckingEngine
)
mozHunspell
(
)
;
nsresult
Init
(
)
;
void
LoadDictionaryList
(
bool
aNotifyChildProcesses
)
;
nsresult
ConvertCharset
(
const
char16_t
*
aStr
std
:
:
string
*
aDst
)
;
NS_DECL_NSIMEMORYREPORTER
protected
:
virtual
~
mozHunspell
(
)
;
void
DictionariesChanged
(
bool
aNotifyChildProcesses
)
;
nsCOMPtr
<
mozIPersonalDictionary
>
mPersonalDictionary
;
mozilla
:
:
UniquePtr
<
mozilla
:
:
Encoder
>
mEncoder
;
mozilla
:
:
UniquePtr
<
mozilla
:
:
Decoder
>
mDecoder
;
nsInterfaceHashtable
<
nsStringHashKey
nsIFile
>
mDictionaries
;
nsString
mDictionary
;
nsString
mLanguage
;
nsCString
mAffixFileName
;
nsCOMArray
<
nsIFile
>
mDynamicDirectories
;
nsInterfaceHashtable
<
nsStringHashKey
nsIFile
>
mDynamicDictionaries
;
Hunspell
*
mHunspell
;
}
;
#
endif
