#
ifndef
mozSpellChecker_h__
#
define
mozSpellChecker_h__
#
include
"
mozilla
/
MozPromise
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsCOMArray
.
h
"
#
include
"
nsString
.
h
"
#
include
"
mozIPersonalDictionary
.
h
"
#
include
"
mozISpellCheckingEngine
.
h
"
#
include
"
nsClassHashtable
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
class
mozEnglishWordUtils
;
namespace
mozilla
{
class
RemoteSpellcheckEngineChild
;
class
TextServicesDocument
;
typedef
MozPromise
<
CopyableTArray
<
bool
>
nsresult
false
>
CheckWordPromise
;
}
class
mozSpellChecker
final
{
public
:
NS_INLINE_DECL_CYCLE_COLLECTING_NATIVE_REFCOUNTING
(
mozSpellChecker
)
NS_DECL_CYCLE_COLLECTION_NATIVE_CLASS
(
mozSpellChecker
)
static
already_AddRefed
<
mozSpellChecker
>
Create
(
)
{
RefPtr
<
mozSpellChecker
>
spellChecker
=
new
mozSpellChecker
(
)
;
nsresult
rv
=
spellChecker
-
>
Init
(
)
;
NS_ENSURE_SUCCESS
(
rv
nullptr
)
;
return
spellChecker
.
forget
(
)
;
}
nsresult
SetDocument
(
mozilla
:
:
TextServicesDocument
*
aTextServicesDocument
bool
aFromStartofDoc
)
;
MOZ_CAN_RUN_SCRIPT
nsresult
NextMisspelledWord
(
nsAString
&
aWord
nsTArray
<
nsString
>
&
aSuggestions
)
;
nsresult
CheckWord
(
const
nsAString
&
aWord
bool
*
aIsMisspelled
nsTArray
<
nsString
>
*
aSuggestions
)
;
RefPtr
<
mozilla
:
:
CheckWordPromise
>
CheckWords
(
const
nsTArray
<
nsString
>
&
aWords
)
;
MOZ_CAN_RUN_SCRIPT
nsresult
Replace
(
const
nsAString
&
aOldWord
const
nsAString
&
aNewWord
bool
aAllOccurrences
)
;
nsresult
IgnoreAll
(
const
nsAString
&
aWord
)
;
nsresult
AddWordToPersonalDictionary
(
const
nsAString
&
aWord
)
;
nsresult
RemoveWordFromPersonalDictionary
(
const
nsAString
&
aWord
)
;
nsresult
GetPersonalDictionary
(
nsTArray
<
nsString
>
*
aWordList
)
;
nsresult
GetDictionaryList
(
nsTArray
<
nsString
>
*
aDictionaryList
)
;
nsresult
GetCurrentDictionary
(
nsAString
&
aDictionary
)
;
nsresult
SetCurrentDictionary
(
const
nsAString
&
aDictionary
)
;
RefPtr
<
mozilla
:
:
GenericPromise
>
SetCurrentDictionaryFromList
(
const
nsTArray
<
nsString
>
&
aList
)
;
void
DeleteRemoteEngine
(
)
{
mEngine
=
nullptr
;
}
mozilla
:
:
TextServicesDocument
*
GetTextServicesDocument
(
)
;
protected
:
mozSpellChecker
(
)
;
virtual
~
mozSpellChecker
(
)
;
nsresult
Init
(
)
;
RefPtr
<
mozEnglishWordUtils
>
mConverter
;
RefPtr
<
mozilla
:
:
TextServicesDocument
>
mTextServicesDocument
;
nsCOMPtr
<
mozIPersonalDictionary
>
mPersonalDictionary
;
nsCOMPtr
<
mozISpellCheckingEngine
>
mSpellCheckingEngine
;
bool
mFromStart
;
nsString
mCurrentDictionary
;
MOZ_CAN_RUN_SCRIPT
nsresult
SetupDoc
(
int32_t
*
outBlockOffset
)
;
nsresult
GetCurrentBlockIndex
(
mozilla
:
:
TextServicesDocument
*
aTextServicesDocument
int32_t
*
aOutBlockIndex
)
;
nsresult
GetEngineList
(
nsCOMArray
<
mozISpellCheckingEngine
>
*
aDictionaryList
)
;
mozilla
:
:
RemoteSpellcheckEngineChild
*
mEngine
;
friend
class
mozilla
:
:
RemoteSpellcheckEngineChild
;
}
;
#
endif
