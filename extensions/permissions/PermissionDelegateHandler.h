#
ifndef
PermissionDelegateHandler_h__
#
define
PermissionDelegateHandler_h__
#
include
"
nsISupports
.
h
"
namespace
mozilla
{
namespace
dom
{
class
Document
;
}
}
class
PermissionDelegateHandler
final
:
nsISupports
{
public
:
explicit
PermissionDelegateHandler
(
mozilla
:
:
dom
:
:
Document
*
aDocument
)
;
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_CLASS
(
PermissionDelegateHandler
)
nsresult
GetPermissionForPermissionsAPI
(
const
nsACString
&
aType
uint32_t
*
aPermission
)
;
enum
PermissionDelegatePolicy
{
eDelegateUseTopOrigin
eDelegateUseFeaturePolicy
ePersistDeniedCrossOrigin
eDelegateUseIframeOrigin
}
;
typedef
struct
{
const
char
*
mPermissionName
;
const
char16_t
*
mFeatureName
;
PermissionDelegatePolicy
mPolicy
;
}
PermissionDelegateInfo
;
void
DropDocumentReference
(
)
{
mDocument
=
nullptr
;
}
private
:
virtual
~
PermissionDelegateHandler
(
)
=
default
;
const
PermissionDelegateInfo
*
GetPermissionDelegateInfo
(
const
nsAString
&
aPermissionName
)
const
;
mozilla
:
:
dom
:
:
Document
*
mDocument
;
}
;
#
endif
