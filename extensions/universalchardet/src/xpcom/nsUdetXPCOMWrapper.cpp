#
include
"
nscore
.
h
"
#
include
"
nsUniversalDetector
.
h
"
#
include
"
nsUdetXPCOMWrapper
.
h
"
#
include
"
nsCharSetProber
.
h
"
#
include
"
nsUniversalCharDetDll
.
h
"
#
include
"
nsIFactory
.
h
"
#
include
"
nsISupports
.
h
"
#
include
"
nsCOMPtr
.
h
"
nsXPCOMDetector
:
:
nsXPCOMDetector
(
)
:
nsUniversalDetector
(
)
{
}
nsXPCOMDetector
:
:
~
nsXPCOMDetector
(
)
{
}
NS_IMPL_ISUPPORTS
(
nsXPCOMDetector
nsICharsetDetector
)
NS_IMETHODIMP
nsXPCOMDetector
:
:
Init
(
nsICharsetDetectionObserver
*
aObserver
)
{
NS_ASSERTION
(
mObserver
=
=
nullptr
"
Init
twice
"
)
;
if
(
nullptr
=
=
aObserver
)
return
NS_ERROR_ILLEGAL_VALUE
;
mObserver
=
aObserver
;
return
NS_OK
;
}
NS_IMETHODIMP
nsXPCOMDetector
:
:
DoIt
(
const
char
*
aBuf
uint32_t
aLen
bool
*
oDontFeedMe
)
{
NS_ASSERTION
(
mObserver
!
=
nullptr
"
have
not
init
yet
"
)
;
if
(
(
nullptr
=
=
aBuf
)
|
|
(
nullptr
=
=
oDontFeedMe
)
)
return
NS_ERROR_ILLEGAL_VALUE
;
this
-
>
Reset
(
)
;
nsresult
rv
=
this
-
>
HandleData
(
aBuf
aLen
)
;
if
(
NS_FAILED
(
rv
)
)
return
rv
;
if
(
mDone
)
{
if
(
mDetectedCharset
)
Report
(
mDetectedCharset
)
;
*
oDontFeedMe
=
true
;
}
*
oDontFeedMe
=
false
;
return
NS_OK
;
}
NS_IMETHODIMP
nsXPCOMDetector
:
:
Done
(
)
{
NS_ASSERTION
(
mObserver
!
=
nullptr
"
have
not
init
yet
"
)
;
#
ifdef
DEBUG_chardet
for
(
int32_t
i
=
0
;
i
<
NUM_OF_CHARSET_PROBERS
;
i
+
+
)
{
if
(
mCharSetProbers
[
i
]
)
mCharSetProbers
[
i
]
-
>
DumpStatus
(
)
;
}
#
endif
this
-
>
DataEnd
(
)
;
return
NS_OK
;
}
void
nsXPCOMDetector
:
:
Report
(
const
char
*
aCharset
)
{
NS_ASSERTION
(
mObserver
!
=
nullptr
"
have
not
init
yet
"
)
;
#
ifdef
DEBUG_chardet
printf
(
"
Universal
Charset
Detector
report
charset
%
s
.
\
r
\
n
"
aCharset
)
;
#
endif
mObserver
-
>
Notify
(
aCharset
eBestAnswer
)
;
}
