"
use
strict
"
;
add_task
(
async
function
test_BrowsingContext_structured_clone
(
)
{
let
browser
=
Services
.
appShell
.
createWindowlessBrowser
(
false
)
;
let
frame
=
browser
.
document
.
createElement
(
"
iframe
"
)
;
await
new
Promise
(
r
=
>
{
frame
.
onload
=
(
)
=
>
r
(
)
;
browser
.
document
.
body
.
appendChild
(
frame
)
;
}
)
;
let
{
browsingContext
}
=
frame
;
let
sch
=
new
StructuredCloneHolder
(
{
browsingContext
}
)
;
let
deserialize
=
(
)
=
>
sch
.
deserialize
(
{
}
true
)
;
equal
(
deserialize
(
)
.
browsingContext
browsingContext
"
Got
correct
browsing
context
from
StructuredClone
deserialize
"
)
;
equal
(
deserialize
(
)
.
browsingContext
browsingContext
"
Got
correct
browsing
context
from
second
StructuredClone
deserialize
"
)
;
frame
.
remove
(
)
;
frame
=
null
;
browsingContext
=
null
;
browser
.
document
.
location
.
reload
(
)
;
browser
.
close
(
)
;
await
schedulePreciseGCAndForceCC
(
3
)
;
Assert
.
throws
(
deserialize
e
=
>
e
.
name
=
=
=
"
DataCloneError
"
"
Should
get
a
DataCloneError
when
trying
to
decode
a
dead
BrowsingContext
"
)
;
}
)
;
