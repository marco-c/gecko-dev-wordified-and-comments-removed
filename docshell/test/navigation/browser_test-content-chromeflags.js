const
TEST_PAGE
=
data
:
text
/
html
<
html
>
<
body
>
<
a
href
=
"
about
:
blank
"
target
=
"
_blank
"
>
Test
<
/
a
>
<
/
body
>
<
/
html
>
;
const
{
CHROME_ALL
CHROME_REMOTE_WINDOW
CHROME_FISSION_WINDOW
}
=
Ci
.
nsIWebBrowserChrome
;
add_task
(
async
function
(
)
{
await
new
Promise
(
resolve
=
>
{
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
link
.
open_newwindow
"
2
]
]
}
resolve
)
;
}
)
;
await
BrowserTestUtils
.
withNewTab
(
{
gBrowser
url
:
TEST_PAGE
}
async
function
(
browser
)
{
let
openedPromise
=
BrowserTestUtils
.
waitForNewWindow
(
)
;
BrowserTestUtils
.
synthesizeMouse
(
"
a
"
0
0
{
}
browser
)
;
let
win
=
await
openedPromise
;
let
chromeFlags
=
win
.
docShell
.
treeOwner
.
QueryInterface
(
Ci
.
nsIInterfaceRequestor
)
.
getInterface
(
Ci
.
nsIAppWindow
)
.
chromeFlags
;
let
expected
=
CHROME_ALL
;
if
(
gMultiProcessBrowser
)
{
expected
|
=
CHROME_REMOTE_WINDOW
;
}
if
(
gFissionBrowser
)
{
expected
|
=
CHROME_FISSION_WINDOW
;
}
is
(
chromeFlags
expected
"
Window
should
have
opened
with
all
chrome
"
)
;
await
BrowserTestUtils
.
closeWindow
(
win
)
;
}
)
;
}
)
;
