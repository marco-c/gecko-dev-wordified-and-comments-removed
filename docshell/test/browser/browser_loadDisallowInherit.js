function
test
(
)
{
waitForExplicitFinish
(
)
;
Services
.
prefs
.
setBoolPref
(
"
security
.
data_uri
.
unique_opaque_origin
"
false
)
;
Services
.
prefs
.
setBoolPref
(
"
security
.
data_uri
.
block_toplevel_data_uri_navigations
"
false
)
;
registerCleanupFunction
(
function
(
)
{
Services
.
prefs
.
clearUserPref
(
"
security
.
data_uri
.
unique_opaque_origin
"
)
;
Services
.
prefs
.
clearUserPref
(
"
security
.
data_uri
.
block_toplevel_data_uri_navigations
"
)
;
}
)
;
executeSoon
(
startTest
)
;
}
function
startTest
(
)
{
let
tab
=
(
gBrowser
.
selectedTab
=
BrowserTestUtils
.
addTab
(
gBrowser
)
)
;
let
browser
=
gBrowser
.
getBrowserForTab
(
tab
)
;
function
loadURL
(
url
flags
triggeringPrincipal
func
)
{
BrowserTestUtils
.
browserLoaded
(
browser
false
url
)
.
then
(
(
)
=
>
{
func
(
)
;
}
)
;
browser
.
loadURI
(
url
{
flags
triggeringPrincipal
}
)
;
}
function
testURL
(
url
func
)
{
let
secMan
=
Services
.
scriptSecurityManager
;
let
ios
=
Services
.
io
;
let
artificialPrincipal
=
secMan
.
createCodebasePrincipal
(
ios
.
newURI
(
"
http
:
/
/
example
.
com
/
"
)
{
}
)
;
loadURL
(
"
http
:
/
/
example
.
com
/
"
0
artificialPrincipal
function
(
)
{
let
pagePrincipal
=
browser
.
contentPrincipal
;
ok
(
pagePrincipal
"
got
principal
for
http
:
/
/
page
"
)
;
loadURL
(
url
0
artificialPrincipal
function
(
)
{
ok
(
browser
.
contentPrincipal
.
equals
(
pagePrincipal
)
url
+
"
should
inherit
principal
"
)
;
let
webNav
=
Ci
.
nsIWebNavigation
;
loadURL
(
url
webNav
.
LOAD_FLAGS_DISALLOW_INHERIT_PRINCIPAL
artificialPrincipal
function
(
)
{
let
newPrincipal
=
browser
.
contentPrincipal
;
ok
(
newPrincipal
"
got
inner
principal
"
)
;
ok
(
!
newPrincipal
.
equals
(
pagePrincipal
)
url
+
"
should
not
inherit
principal
when
loaded
with
DISALLOW_INHERIT_OWNER
"
)
;
func
(
)
;
}
)
;
}
)
;
}
)
;
}
let
urls
=
[
"
data
:
text
/
html
<
body
>
hi
"
]
;
function
nextTest
(
)
{
let
url
=
urls
.
shift
(
)
;
if
(
url
)
{
testURL
(
url
nextTest
)
;
}
else
{
gBrowser
.
removeTab
(
tab
)
;
finish
(
)
;
}
}
nextTest
(
)
;
}
