const
{
PlacesTestUtils
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
testing
-
common
/
PlacesTestUtils
.
sys
.
mjs
"
)
;
add_task
(
async
function
test
(
)
{
const
testDir
=
"
http
:
/
/
mochi
.
test
:
8888
/
browser
/
docshell
/
test
/
browser
/
"
;
const
origURL
=
testDir
+
"
file_bug655270
.
html
"
;
const
newURL
=
origURL
+
"
?
new_page
"
;
const
faviconURL
=
testDir
+
"
favicon_bug655270
.
ico
"
;
let
icon1
;
let
promiseIcon1
=
PlacesTestUtils
.
waitForNotification
(
"
favicon
-
changed
"
events
=
>
events
.
some
(
e
=
>
{
if
(
e
.
url
=
=
origURL
)
{
icon1
=
e
.
faviconUrl
;
return
true
;
}
return
false
;
}
)
)
;
let
icon2
;
let
promiseIcon2
=
PlacesTestUtils
.
waitForNotification
(
"
favicon
-
changed
"
events
=
>
events
.
some
(
e
=
>
{
if
(
e
.
url
=
=
newURL
)
{
icon2
=
e
.
faviconUrl
;
return
true
;
}
return
false
;
}
)
)
;
let
tab
=
BrowserTestUtils
.
addTab
(
gBrowser
origURL
)
;
await
promiseIcon1
;
is
(
icon1
faviconURL
"
FaviconURL
for
original
URI
"
)
;
SpecialPowers
.
spawn
(
tab
.
linkedBrowser
[
]
function
(
)
{
content
.
history
.
pushState
(
"
"
"
"
"
?
new_page
"
)
;
}
)
;
await
promiseIcon2
;
is
(
icon2
faviconURL
"
FaviconURL
for
new
URI
"
)
;
gBrowser
.
removeTab
(
tab
)
;
}
)
;
