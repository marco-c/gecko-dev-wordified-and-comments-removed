"
use
strict
"
;
const
{
UrlbarTestUtils
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
testing
-
common
/
UrlbarTestUtils
.
sys
.
mjs
"
)
;
const
bug1002724_tests
=
[
{
original
:
"
example
.
com
"
expected
:
"
http
:
/
/
example
.
com
"
explanation
:
"
Should
load
HTTP
version
of
example
.
com
"
}
{
original
:
"
secureonly
.
example
.
com
"
expected
:
"
https
:
/
/
secureonly
.
example
.
com
"
explanation
:
"
Should
reject
secureonly
.
example
.
com
on
HTTP
but
load
the
HTTPS
version
"
}
]
;
async
function
test_one
(
test_obj
)
{
let
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
"
about
:
blank
"
)
;
gURLBar
.
focus
(
)
;
gURLBar
.
value
=
test_obj
.
original
;
let
loadPromise
=
BrowserTestUtils
.
browserLoaded
(
tab
.
linkedBrowser
false
)
;
EventUtils
.
synthesizeKey
(
"
KEY_Enter
"
)
;
await
loadPromise
;
ok
(
tab
.
linkedBrowser
.
currentURI
.
spec
.
startsWith
(
test_obj
.
expected
)
test_obj
.
explanation
)
;
BrowserTestUtils
.
removeTab
(
tab
)
;
}
add_task
(
async
function
test_bug1002724
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
network
.
stricttransportsecurity
.
preloadlist
"
false
]
[
"
network
.
dns
.
native
-
is
-
localhost
"
true
]
]
}
)
;
for
(
let
test
of
bug1002724_tests
)
{
await
test_one
(
test
)
;
}
}
)
;
