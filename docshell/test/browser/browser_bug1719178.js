"
use
strict
"
;
SimpleTest
.
requestFlakyTimeout
(
"
The
test
needs
to
let
objects
die
asynchronously
.
"
)
;
add_task
(
async
function
test_accessing_shistory
(
)
{
let
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
"
about
:
preferences
"
)
;
let
sh
=
tab
.
linkedBrowser
.
browsingContext
.
sessionHistory
;
ok
(
sh
"
Should
have
SessionHistory
object
"
)
;
gBrowser
.
removeTab
(
tab
)
;
tab
=
null
;
for
(
let
i
=
0
;
i
<
5
;
+
+
i
)
{
SpecialPowers
.
Services
.
obs
.
notifyObservers
(
null
"
memory
-
pressure
"
"
heap
-
minimize
"
)
;
SpecialPowers
.
DOMWindowUtils
.
garbageCollect
(
)
;
await
new
Promise
(
function
(
r
)
{
setTimeout
(
r
50
)
;
}
)
;
}
try
{
sh
.
reloadCurrentEntry
(
)
;
}
catch
(
ex
)
{
}
ok
(
true
"
This
test
shouldn
'
t
crash
.
"
)
;
}
)
;
