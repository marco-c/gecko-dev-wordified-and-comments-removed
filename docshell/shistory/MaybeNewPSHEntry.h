#
ifndef
mozilla_dom_MaybeNewPSHEntry_h
#
define
mozilla_dom_MaybeNewPSHEntry_h
#
include
"
ipc
/
IPCMessageUtils
.
h
"
#
include
"
mozilla
/
AlreadyAddRefed
.
h
"
#
include
"
mozilla
/
Variant
.
h
"
#
include
"
mozilla
/
ipc
/
IPDLParamTraits
.
h
"
#
include
"
mozilla
/
ipc
/
ProtocolUtils
.
h
"
namespace
mozilla
{
namespace
dom
{
class
LegacySHEntry
;
class
PSHEntryChild
;
class
PSHEntryParent
;
class
PSHistoryChild
;
class
PSHistoryParent
;
class
SHEntryChild
;
struct
NewPSHEntry
final
{
mozilla
:
:
ipc
:
:
ManagedEndpoint
<
PSHEntryChild
>
mEndpoint
;
PSHistoryParent
*
mSHistoryParent
;
PSHistoryChild
*
mSHistoryChild
;
uint64_t
mSharedID
;
}
;
typedef
Variant
<
PSHEntryParent
*
NewPSHEntry
>
MaybeNewPSHEntryParent
;
typedef
Variant
<
PSHEntryChild
*
NewPSHEntry
>
MaybeNewPSHEntryChild
;
class
CrossProcessSHEntry
{
NS_INLINE_DECL_PURE_VIRTUAL_REFCOUNTING
SHEntryChild
*
ToSHEntryChild
(
)
;
}
;
}
namespace
ipc
{
template
<
>
struct
IPDLParamTraits
<
dom
:
:
CrossProcessSHEntry
*
>
{
static
void
Write
(
IPC
:
:
Message
*
aMsg
IProtocol
*
aActor
dom
:
:
CrossProcessSHEntry
*
aEntry
)
;
static
bool
Read
(
const
IPC
:
:
Message
*
aMsg
PickleIterator
*
aIter
IProtocol
*
aActor
RefPtr
<
dom
:
:
CrossProcessSHEntry
>
*
aEntry
)
;
}
;
}
}
#
endif
