#
include
"
mozilla
/
dom
/
ParentSHistory
.
h
"
#
include
"
mozilla
/
dom
/
ParentSHistoryBinding
.
h
"
#
include
"
mozilla
/
dom
/
TabParent
.
h
"
#
include
"
nsDocShell
.
h
"
#
include
"
nsFrameLoader
.
h
"
#
include
"
nsXULAppAPI
.
h
"
namespace
mozilla
{
namespace
dom
{
ParentSHistory
:
:
ParentSHistory
(
nsFrameLoader
*
aFrameLoader
)
:
mFrameLoader
(
aFrameLoader
)
{
MOZ_ASSERT
(
XRE_IsParentProcess
(
)
)
;
}
ParentSHistory
:
:
~
ParentSHistory
(
)
{
}
nsDocShell
*
ParentSHistory
:
:
GetDocShell
(
)
{
return
nsDocShell
:
:
Cast
(
mFrameLoader
-
>
GetExistingDocShell
(
)
)
;
}
TabParent
*
ParentSHistory
:
:
GetTabParent
(
)
{
return
static_cast
<
TabParent
*
>
(
mFrameLoader
-
>
GetRemoteBrowser
(
)
)
;
}
already_AddRefed
<
ChildSHistory
>
ParentSHistory
:
:
GetChildIfSameProcess
(
)
{
if
(
GetDocShell
(
)
)
{
return
GetDocShell
(
)
-
>
GetSessionHistory
(
)
;
}
return
nullptr
;
}
NS_INTERFACE_MAP_BEGIN_CYCLE_COLLECTION
(
ParentSHistory
)
NS_WRAPPERCACHE_INTERFACE_MAP_ENTRY
NS_INTERFACE_MAP_ENTRY
(
nsISupports
)
NS_INTERFACE_MAP_END
NS_IMPL_CYCLE_COLLECTING_ADDREF
(
ParentSHistory
)
NS_IMPL_CYCLE_COLLECTING_RELEASE
(
ParentSHistory
)
NS_IMPL_CYCLE_COLLECTION_WRAPPERCACHE
(
ParentSHistory
mFrameLoader
)
JSObject
*
ParentSHistory
:
:
WrapObject
(
JSContext
*
cx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
ParentSHistoryBinding
:
:
Wrap
(
cx
this
aGivenProto
)
;
}
nsISupports
*
ParentSHistory
:
:
GetParentObject
(
)
const
{
return
static_cast
<
nsIFrameLoader
*
>
(
mFrameLoader
)
;
}
}
}
