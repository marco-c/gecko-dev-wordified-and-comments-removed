#
ifndef
mozilla_dom_ChildSHistory_h
#
define
mozilla_dom_ChildSHistory_h
#
include
"
nsCOMPtr
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
#
include
"
nsWrapperCache
.
h
"
class
nsSHistory
;
class
nsDocShell
;
class
nsISHistory
;
class
nsISHistoryInternal
;
class
nsIWebNavigation
;
class
nsIGlobalObject
;
namespace
mozilla
{
namespace
dom
{
class
ParentSHistory
;
class
ChildSHistory
:
public
nsISupports
public
nsWrapperCache
{
public
:
friend
class
ParentSHistory
;
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
ChildSHistory
)
nsISupports
*
GetParentObject
(
)
const
;
JSObject
*
WrapObject
(
JSContext
*
cx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
explicit
ChildSHistory
(
nsDocShell
*
aDocShell
)
;
int32_t
Count
(
)
;
int32_t
Index
(
)
;
void
Reload
(
uint32_t
aReloadFlags
ErrorResult
&
aRv
)
;
bool
CanGo
(
int32_t
aOffset
)
;
void
Go
(
int32_t
aOffset
ErrorResult
&
aRv
)
;
nsISHistory
*
LegacySHistory
(
)
;
nsISHistoryInternal
*
LegacySHistoryInternal
(
)
;
nsIWebNavigation
*
LegacySHistoryWebNav
(
)
;
ParentSHistory
*
GetParentIfSameProcess
(
)
;
private
:
virtual
~
ChildSHistory
(
)
;
RefPtr
<
nsDocShell
>
mDocShell
;
RefPtr
<
nsSHistory
>
mHistory
;
}
;
}
}
#
endif
