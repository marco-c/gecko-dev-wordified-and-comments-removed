#
include
"
nsISupports
.
idl
"
interface
nsIContentSecurityPolicy
;
interface
nsIMutableArray
;
interface
nsILayoutHistoryState
;
interface
nsIContentViewer
;
interface
nsIURI
;
interface
nsIInputStream
;
interface
nsIDocShellTreeItem
;
interface
nsIStructuredCloneContainer
;
interface
nsIBFCacheEntry
;
interface
nsIPrincipal
;
interface
nsISHistory
;
interface
nsIReferrerInfo
;
%
{
C
+
+
#
include
"
nsRect
.
h
"
class
nsDocShellEditorData
;
namespace
mozilla
{
namespace
dom
{
class
SHEntrySharedParentState
;
}
}
class
nsSHEntryShared
;
class
nsDocShellLoadState
;
struct
EntriesAndBrowsingContextData
;
%
}
[
ref
]
native
nsIntRect
(
nsIntRect
)
;
[
ptr
]
native
nsDocShellEditorDataPtr
(
nsDocShellEditorData
)
;
[
ptr
]
native
nsDocShellLoadStatePtr
(
nsDocShellLoadState
)
;
webidl
BrowsingContext
;
[
builtinclass
scriptable
uuid
(
0dad26b8
-
a259
-
42c7
-
93f1
-
2fa7fc076e45
)
]
interface
nsISHEntry
:
nsISupports
{
[
infallible
]
attribute
nsIURI
URI
;
[
infallible
]
attribute
nsIURI
originalURI
;
[
infallible
]
attribute
nsIURI
resultPrincipalURI
;
[
infallible
]
attribute
boolean
loadReplace
;
attribute
AString
title
;
[
infallible
]
attribute
boolean
isSubFrame
;
[
infallible
]
attribute
boolean
hasUserInteraction
;
[
infallible
]
attribute
nsIReferrerInfo
referrerInfo
;
[
infallible
]
attribute
nsIContentViewer
contentViewer
;
[
infallible
]
attribute
boolean
sticky
;
[
infallible
]
attribute
nsISupports
windowState
;
[
infallible
]
attribute
nsIMutableArray
refreshURIList
;
[
infallible
]
attribute
nsIInputStream
postData
;
[
infallible
]
attribute
nsILayoutHistoryState
layoutHistoryState
;
[
infallible
]
attribute
nsISHEntry
parent
;
[
infallible
]
attribute
unsigned
long
loadType
;
[
infallible
]
attribute
unsigned
long
ID
;
[
infallible
]
attribute
unsigned
long
cacheKey
;
[
infallible
]
attribute
boolean
saveLayoutStateFlag
;
attribute
ACString
contentType
;
[
infallible
]
attribute
boolean
URIWasModified
;
[
infallible
]
attribute
nsIPrincipal
triggeringPrincipal
;
[
infallible
]
attribute
nsIPrincipal
principalToInherit
;
[
infallible
]
attribute
nsIPrincipal
partitionedPrincipalToInherit
;
[
infallible
]
attribute
nsIContentSecurityPolicy
csp
;
[
infallible
]
attribute
nsIStructuredCloneContainer
stateData
;
attribute
nsIDRef
docshellID
;
[
infallible
]
readonly
attribute
boolean
isSrcdocEntry
;
attribute
AString
srcdocData
;
[
infallible
]
attribute
nsIURI
baseURI
;
attribute
boolean
scrollRestorationIsManual
;
[
infallible
]
readonly
attribute
boolean
loadedInThisProcess
;
[
infallible
]
readonly
attribute
nsISHistory
shistory
;
[
noscript
infallible
]
attribute
unsigned
long
lastTouched
;
[
infallible
]
readonly
attribute
long
childCount
;
[
infallible
]
attribute
boolean
persist
;
void
setScrollPosition
(
in
long
x
in
long
y
)
;
void
getScrollPosition
(
out
long
x
out
long
y
)
;
[
noscript
notxpcom
]
void
getViewerBounds
(
in
nsIntRect
bounds
)
;
[
noscript
notxpcom
]
void
setViewerBounds
(
[
const
]
in
nsIntRect
bounds
)
;
[
noscript
notxpcom
]
void
addChildShell
(
in
nsIDocShellTreeItem
shell
)
;
[
noscript
]
nsIDocShellTreeItem
childShellAt
(
in
long
index
)
;
[
noscript
notxpcom
]
void
clearChildShells
(
)
;
[
noscript
notxpcom
]
void
syncPresentationState
(
)
;
nsILayoutHistoryState
initLayoutHistoryState
(
)
;
[
noscript
]
void
create
(
in
nsIURI
URI
in
AString
title
in
nsIInputStream
inputStream
in
unsigned
long
cacheKey
in
ACString
contentType
in
nsIPrincipal
triggeringPrincipal
in
nsIPrincipal
principalToInherit
in
nsIPrincipal
partitionedPrincipalToInherit
in
nsIContentSecurityPolicy
aCsp
in
nsIDRef
docshellID
in
boolean
dynamicCreation
in
nsIURI
originalURI
in
nsIURI
resultPrincipalURI
in
bool
loadReplace
in
nsIReferrerInfo
referrerInfo
in
AString
srcdoc
in
bool
srcdocEntry
in
nsIURI
baseURI
in
bool
saveLayoutState
in
bool
expired
)
;
nsISHEntry
clone
(
)
;
[
noscript
notxpcom
]
nsDocShellEditorDataPtr
forgetEditorData
(
)
;
[
noscript
notxpcom
]
void
setEditorData
(
in
nsDocShellEditorDataPtr
aData
)
;
[
noscript
notxpcom
]
boolean
hasDetachedEditor
(
)
;
[
noscript
notxpcom
]
boolean
isDynamicallyAdded
(
)
;
boolean
hasDynamicallyAddedChild
(
)
;
[
noscript
notxpcom
]
boolean
hasBFCacheEntry
(
in
nsIBFCacheEntry
aEntry
)
;
void
adoptBFCacheEntry
(
in
nsISHEntry
aEntry
)
;
void
abandonBFCacheEntry
(
)
;
boolean
sharesDocumentWith
(
in
nsISHEntry
aEntry
)
;
void
setLoadTypeAsHistory
(
)
;
void
AddChild
(
in
nsISHEntry
aChild
in
long
aOffset
[
optional
default
(
false
)
]
in
bool
aUseRemoteSubframes
)
;
[
noscript
]
void
RemoveChild
(
in
nsISHEntry
aChild
)
;
nsISHEntry
GetChildAt
(
in
long
aIndex
)
;
[
notxpcom
]
void
GetChildSHEntryIfHasNoDynamicallyAddedChild
(
in
long
aChildOffset
out
nsISHEntry
aChild
)
;
[
noscript
]
void
ReplaceChild
(
in
nsISHEntry
aNewChild
)
;
[
notxpcom
]
void
ClearEntry
(
)
;
[
noscript
]
nsDocShellLoadStatePtr
CreateLoadInfo
(
)
;
[
infallible
]
readonly
attribute
unsigned
long
long
bfcacheID
;
void
synchronizeLayoutHistoryState
(
)
;
[
notxpcom
]
void
SyncTreesForSubframeNavigation
(
in
nsISHEntry
aEntry
in
BrowsingContext
aTopBC
in
BrowsingContext
aIgnoreBC
)
;
}
;
