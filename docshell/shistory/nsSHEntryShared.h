#
ifndef
nsSHEntryShared_h__
#
define
nsSHEntryShared_h__
#
include
"
nsCOMArray
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsExpirationTracker
.
h
"
#
include
"
nsIBFCacheEntry
.
h
"
#
include
"
nsIPolicyContainer
.
h
"
#
include
"
nsIWeakReferenceUtils
.
h
"
#
include
"
nsRect
.
h
"
#
include
"
nsString
.
h
"
#
include
"
nsStructuredCloneContainer
.
h
"
#
include
"
nsStubMutationObserver
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
class
nsSHEntry
;
class
nsISHEntry
;
class
nsISHistory
;
class
nsIDocShellTreeItem
;
class
nsIDocumentViewer
;
class
nsILayoutHistoryState
;
class
nsIPolicyContainer
;
class
nsIPrincipal
;
class
nsDocShellEditorData
;
class
nsFrameLoader
;
class
nsIMutableArray
;
class
nsSHistory
;
namespace
mozilla
{
namespace
dom
{
class
Document
;
struct
SHEntrySharedState
{
SHEntrySharedState
(
)
:
mId
(
GenerateId
(
)
)
{
}
SHEntrySharedState
(
const
SHEntrySharedState
&
aState
)
=
default
;
SHEntrySharedState
(
nsIPrincipal
*
aTriggeringPrincipal
nsIPrincipal
*
aPrincipalToInherit
nsIPrincipal
*
aPartitionedPrincipalToInherit
nsIPolicyContainer
*
aPolicyContainer
const
nsACString
&
aContentType
)
:
mId
(
GenerateId
(
)
)
mTriggeringPrincipal
(
aTriggeringPrincipal
)
mPrincipalToInherit
(
aPrincipalToInherit
)
mPartitionedPrincipalToInherit
(
aPartitionedPrincipalToInherit
)
mPolicyContainer
(
aPolicyContainer
)
mContentType
(
aContentType
)
mNavigationState
(
MakeRefPtr
<
nsStructuredCloneContainer
>
(
)
)
{
}
uint64_t
mId
=
0
;
nsCOMPtr
<
nsIPrincipal
>
mTriggeringPrincipal
;
nsCOMPtr
<
nsIPrincipal
>
mPrincipalToInherit
;
nsCOMPtr
<
nsIPrincipal
>
mPartitionedPrincipalToInherit
;
nsCOMPtr
<
nsIPolicyContainer
>
mPolicyContainer
;
nsCString
mContentType
;
nsCOMPtr
<
nsILayoutHistoryState
>
mLayoutHistoryState
;
uint32_t
mCacheKey
=
0
;
bool
mIsFrameNavigation
=
false
;
bool
mSaveLayoutState
=
true
;
RefPtr
<
nsStructuredCloneContainer
>
mNavigationState
;
protected
:
static
uint64_t
GenerateId
(
)
;
}
;
class
SHEntrySharedParentState
:
public
SHEntrySharedState
{
public
:
friend
class
SessionHistoryInfo
;
uint64_t
GetId
(
)
const
{
return
mId
;
}
void
ChangeId
(
uint64_t
aId
)
;
void
SetFrameLoader
(
nsFrameLoader
*
aFrameLoader
)
;
nsFrameLoader
*
GetFrameLoader
(
)
;
void
NotifyListenersDocumentViewerEvicted
(
)
;
nsExpirationState
*
GetExpirationState
(
)
{
return
&
mExpirationState
;
}
SHEntrySharedParentState
(
)
;
SHEntrySharedParentState
(
nsIPrincipal
*
aTriggeringPrincipal
nsIPrincipal
*
aPrincipalToInherit
nsIPrincipal
*
aPartitionedPrincipalToInherit
nsIPolicyContainer
*
aPolicyContainer
const
nsACString
&
aContentType
)
;
static
SHEntrySharedParentState
*
Lookup
(
uint64_t
aId
)
;
protected
:
virtual
~
SHEntrySharedParentState
(
)
;
NS_INLINE_DECL_VIRTUAL_REFCOUNTING_WITH_DESTROY
(
SHEntrySharedParentState
Destroy
(
)
)
virtual
void
Destroy
(
)
{
delete
this
;
}
void
CopyFrom
(
SHEntrySharedParentState
*
aSource
)
;
nsID
mDocShellID
{
}
;
nsIntRect
mViewerBounds
{
0
0
0
0
}
;
uint32_t
mLastTouched
=
0
;
nsWeakPtr
mSHistory
;
RefPtr
<
nsFrameLoader
>
mFrameLoader
;
nsExpirationState
mExpirationState
;
bool
mSticky
=
true
;
bool
mDynamicallyCreated
=
false
;
bool
mExpired
=
false
;
}
;
class
SHEntrySharedChildState
{
protected
:
void
CopyFrom
(
SHEntrySharedChildState
*
aSource
)
;
public
:
nsCOMArray
<
nsIDocShellTreeItem
>
mChildShells
;
nsCOMPtr
<
nsIDocumentViewer
>
mDocumentViewer
;
RefPtr
<
mozilla
:
:
dom
:
:
Document
>
mDocument
;
nsCOMPtr
<
nsISupports
>
mWindowState
;
nsCOMPtr
<
nsIMutableArray
>
mRefreshURIList
;
UniquePtr
<
nsDocShellEditorData
>
mEditorData
;
}
;
}
}
class
nsSHEntryShared
final
:
public
nsIBFCacheEntry
public
nsStubMutationObserver
public
mozilla
:
:
dom
:
:
SHEntrySharedParentState
public
mozilla
:
:
dom
:
:
SHEntrySharedChildState
{
public
:
static
void
EnsureHistoryTracker
(
)
;
static
void
Shutdown
(
)
;
using
SHEntrySharedParentState
:
:
SHEntrySharedParentState
;
already_AddRefed
<
nsSHEntryShared
>
Duplicate
(
)
;
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_NSIBFCACHEENTRY
NS_DECL_NSIMUTATIONOBSERVER_CHARACTERDATACHANGED
NS_DECL_NSIMUTATIONOBSERVER_ATTRIBUTECHANGED
NS_DECL_NSIMUTATIONOBSERVER_CONTENTAPPENDED
NS_DECL_NSIMUTATIONOBSERVER_CONTENTINSERTED
NS_DECL_NSIMUTATIONOBSERVER_CONTENTREMOVED
private
:
~
nsSHEntryShared
(
)
;
friend
class
nsSHEntry
;
void
RemoveFromExpirationTracker
(
)
;
void
SyncPresentationState
(
)
;
void
DropPresentationState
(
)
;
nsresult
SetDocumentViewer
(
nsIDocumentViewer
*
aViewer
)
;
}
;
#
endif
