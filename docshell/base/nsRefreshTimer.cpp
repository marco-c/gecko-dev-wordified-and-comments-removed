#
include
"
nsRefreshTimer
.
h
"
#
include
"
nsIURI
.
h
"
#
include
"
nsIPrincipal
.
h
"
#
include
"
nsDocShell
.
h
"
NS_IMPL_ADDREF
(
nsRefreshTimer
)
NS_IMPL_RELEASE
(
nsRefreshTimer
)
NS_INTERFACE_MAP_BEGIN
(
nsRefreshTimer
)
NS_INTERFACE_MAP_ENTRY_AMBIGUOUS
(
nsISupports
nsITimerCallback
)
NS_INTERFACE_MAP_ENTRY
(
nsITimerCallback
)
NS_INTERFACE_MAP_ENTRY
(
nsINamed
)
NS_INTERFACE_MAP_END_THREADSAFE
nsRefreshTimer
:
:
nsRefreshTimer
(
nsDocShell
*
aDocShell
nsIURI
*
aURI
nsIPrincipal
*
aPrincipal
int32_t
aDelay
bool
aRepeat
bool
aMetaRefresh
)
:
mDocShell
(
aDocShell
)
mURI
(
aURI
)
mPrincipal
(
aPrincipal
)
mDelay
(
aDelay
)
mRepeat
(
aRepeat
)
mMetaRefresh
(
aMetaRefresh
)
{
}
nsRefreshTimer
:
:
~
nsRefreshTimer
(
)
{
}
NS_IMETHODIMP
nsRefreshTimer
:
:
Notify
(
nsITimer
*
aTimer
)
{
NS_ASSERTION
(
mDocShell
"
DocShell
is
somehow
null
"
)
;
if
(
mDocShell
&
&
aTimer
)
{
uint32_t
delay
=
0
;
aTimer
-
>
GetDelay
(
&
delay
)
;
mDocShell
-
>
ForceRefreshURIFromTimer
(
mURI
mPrincipal
delay
mMetaRefresh
aTimer
)
;
}
return
NS_OK
;
}
NS_IMETHODIMP
nsRefreshTimer
:
:
GetName
(
nsACString
&
aName
)
{
aName
.
AssignLiteral
(
"
nsRefreshTimer
"
)
;
return
NS_OK
;
}
