#
include
"
nsISupports
.
idl
"
interface
mozIDOMWindowProxy
;
webidl
Element
;
[
ref
]
native
OriginAttributes
(
mozilla
:
:
OriginAttributes
)
;
%
{
C
+
+
#
ifdef
MOZILLA_INTERNAL_API
#
include
"
mozilla
/
BasePrincipal
.
h
"
#
endif
%
}
[
builtinclass
scriptable
uuid
(
2813a7a3
-
d084
-
4d00
-
acd0
-
f76620315c02
)
]
interface
nsILoadContext
:
nsISupports
{
readonly
attribute
mozIDOMWindowProxy
associatedWindow
;
readonly
attribute
mozIDOMWindowProxy
topWindow
;
readonly
attribute
Element
topFrameElement
;
readonly
attribute
boolean
isContent
;
attribute
boolean
usePrivateBrowsing
;
readonly
attribute
boolean
useRemoteTabs
;
readonly
attribute
boolean
useRemoteSubframes
;
attribute
boolean
useTrackingProtection
;
%
{
C
+
+
bool
UsePrivateBrowsing
(
)
{
bool
usingPB
=
false
;
GetUsePrivateBrowsing
(
&
usingPB
)
;
return
usingPB
;
}
bool
UseRemoteTabs
(
)
{
bool
usingRT
=
false
;
GetUseRemoteTabs
(
&
usingRT
)
;
return
usingRT
;
}
bool
UseRemoteSubframes
(
)
{
bool
usingRSF
=
false
;
GetUseRemoteSubframes
(
&
usingRSF
)
;
return
usingRSF
;
}
bool
UseTrackingProtection
(
)
{
bool
usingTP
=
false
;
GetUseTrackingProtection
(
&
usingTP
)
;
return
usingTP
;
}
%
}
[
noscript
]
void
SetPrivateBrowsing
(
in
boolean
aInPrivateBrowsing
)
;
[
noscript
]
void
SetRemoteTabs
(
in
boolean
aUseRemoteTabs
)
;
[
noscript
]
void
SetRemoteSubframes
(
in
boolean
aUseRemoteSubframes
)
;
[
binaryname
(
ScriptableOriginAttributes
)
implicit_jscontext
]
readonly
attribute
jsval
originAttributes
;
[
noscript
notxpcom
]
void
GetOriginAttributes
(
out
OriginAttributes
aAttrs
)
;
}
;
