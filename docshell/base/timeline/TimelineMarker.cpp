#
include
"
TimelineMarker
.
h
"
namespace
mozilla
{
TimelineMarker
:
:
TimelineMarker
(
const
char
*
aName
MarkerTracingType
aTracingType
MarkerStackRequest
aStackRequest
)
:
mName
(
aName
)
mTracingType
(
aTracingType
)
{
MOZ_COUNT_CTOR
(
TimelineMarker
)
;
SetCurrentTime
(
)
;
CaptureStackIfNecessary
(
aTracingType
aStackRequest
)
;
}
TimelineMarker
:
:
TimelineMarker
(
const
char
*
aName
const
TimeStamp
&
aTime
MarkerTracingType
aTracingType
MarkerStackRequest
aStackRequest
)
:
mName
(
aName
)
mTracingType
(
aTracingType
)
{
MOZ_COUNT_CTOR
(
TimelineMarker
)
;
SetCustomTime
(
aTime
)
;
CaptureStackIfNecessary
(
aTracingType
aStackRequest
)
;
}
TimelineMarker
:
:
~
TimelineMarker
(
)
{
MOZ_COUNT_DTOR
(
TimelineMarker
)
;
}
void
TimelineMarker
:
:
SetCurrentTime
(
)
{
TimeStamp
now
=
TimeStamp
:
:
Now
(
)
;
SetCustomTime
(
now
)
;
}
void
TimelineMarker
:
:
SetCustomTime
(
const
TimeStamp
&
aTime
)
{
bool
isInconsistent
=
false
;
mTime
=
(
aTime
-
TimeStamp
:
:
ProcessCreation
(
isInconsistent
)
)
.
ToMilliseconds
(
)
;
}
void
TimelineMarker
:
:
CaptureStackIfNecessary
(
MarkerTracingType
aTracingType
MarkerStackRequest
aStackRequest
)
{
if
(
(
aTracingType
=
=
MarkerTracingType
:
:
START
|
|
aTracingType
=
=
MarkerTracingType
:
:
TIMESTAMP
)
&
&
aStackRequest
!
=
MarkerStackRequest
:
:
NO_STACK
)
{
CaptureStack
(
)
;
}
}
}
