#
ifndef
mozilla_MarkersStorage_h_
#
define
mozilla_MarkersStorage_h_
#
include
"
TimelineMarkerEnums
.
h
"
#
include
"
MainThreadUtils
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
mozilla
/
LinkedList
.
h
"
#
include
"
nsTArray
.
h
"
namespace
mozilla
{
class
AbstractTimelineMarker
;
namespace
dom
{
struct
ProfileTimelineMarker
;
}
class
MarkersStorage
:
public
LinkedListElement
<
MarkersStorage
>
{
public
:
MarkersStorage
(
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
}
virtual
~
MarkersStorage
(
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
}
MarkersStorage
(
const
MarkersStorage
&
aOther
)
=
delete
;
void
operator
=
(
const
MarkersStorage
&
aOther
)
=
delete
;
virtual
void
AddMarker
(
UniquePtr
<
AbstractTimelineMarker
>
&
&
aMarker
)
=
0
;
virtual
void
AddOTMTMarker
(
UniquePtr
<
AbstractTimelineMarker
>
&
&
aMarker
)
=
0
;
virtual
void
ClearMarkers
(
)
=
0
;
virtual
void
PopMarkers
(
JSContext
*
aCx
nsTArray
<
dom
:
:
ProfileTimelineMarker
>
&
aStore
)
=
0
;
}
;
}
#
endif
