#
ifndef
mozilla_TimelineConsumers_h_
#
define
mozilla_TimelineConsumers_h_
#
include
"
nsIObserver
.
h
"
#
include
"
mozilla
/
StaticPtr
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
mozilla
/
LinkedList
.
h
"
#
include
"
mozilla
/
StaticMutex
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
TimelineMarkerEnums
.
h
"
class
nsDocShell
;
class
nsIDocShell
;
struct
JSContext
;
namespace
mozilla
{
class
TimeStamp
;
class
MarkersStorage
;
class
AbstractTimelineMarker
;
namespace
dom
{
struct
ProfileTimelineMarker
;
}
class
TimelineConsumers
{
public
:
static
void
AddConsumer
(
nsDocShell
*
aDocShell
)
;
static
void
RemoveConsumer
(
nsDocShell
*
aDocShell
)
;
static
bool
HasConsumer
(
nsIDocShell
*
aDocShell
)
;
static
bool
IsEmpty
(
)
;
static
void
AddMarkerForDocShell
(
nsDocShell
*
aDocShell
const
char
*
aName
MarkerTracingType
aTracingType
MarkerStackRequest
aStackRequest
=
MarkerStackRequest
:
:
STACK
)
;
static
void
AddMarkerForDocShell
(
nsIDocShell
*
aDocShell
const
char
*
aName
MarkerTracingType
aTracingType
MarkerStackRequest
aStackRequest
=
MarkerStackRequest
:
:
STACK
)
;
static
void
AddMarkerForDocShell
(
nsDocShell
*
aDocShell
const
char
*
aName
const
TimeStamp
&
aTime
MarkerTracingType
aTracingType
MarkerStackRequest
aStackRequest
=
MarkerStackRequest
:
:
STACK
)
;
static
void
AddMarkerForDocShell
(
nsIDocShell
*
aDocShell
const
char
*
aName
const
TimeStamp
&
aTime
MarkerTracingType
aTracingType
MarkerStackRequest
aStackRequest
=
MarkerStackRequest
:
:
STACK
)
;
static
void
AddMarkerForDocShell
(
nsDocShell
*
aDocShell
UniquePtr
<
AbstractTimelineMarker
>
&
&
aMarker
)
;
static
void
AddMarkerForDocShell
(
nsIDocShell
*
aDocShell
UniquePtr
<
AbstractTimelineMarker
>
&
&
aMarker
)
;
static
void
AddMarkerForAllObservedDocShells
(
const
char
*
aName
MarkerTracingType
aTracingType
MarkerStackRequest
aStackRequest
=
MarkerStackRequest
:
:
STACK
)
;
static
void
AddMarkerForAllObservedDocShells
(
const
char
*
aName
const
TimeStamp
&
aTime
MarkerTracingType
aTracingType
MarkerStackRequest
aStackRequest
=
MarkerStackRequest
:
:
STACK
)
;
static
void
AddMarkerForAllObservedDocShells
(
UniquePtr
<
AbstractTimelineMarker
>
&
aMarker
)
;
static
void
PopMarkers
(
nsDocShell
*
aDocShell
JSContext
*
aCx
nsTArray
<
dom
:
:
ProfileTimelineMarker
>
&
aStore
)
;
private
:
static
StaticMutex
sMutex
;
static
LinkedList
<
MarkersStorage
>
&
MarkersStores
(
)
REQUIRES
(
sMutex
)
;
static
uint32_t
sActiveConsumers
GUARDED_BY
(
sMutex
)
;
static
StaticAutoPtr
<
LinkedList
<
MarkersStorage
>
>
sMarkersStores
GUARDED_BY
(
sMutex
)
;
}
;
}
#
endif
