#
ifndef
mozilla_dom_BrowsingContextWebProgress_h
#
define
mozilla_dom_BrowsingContextWebProgress_h
#
include
"
nsIWebProgress
.
h
"
#
include
"
nsIWebProgressListener
.
h
"
#
include
"
nsTObserverArray
.
h
"
#
include
"
nsWeakReference
.
h
"
namespace
mozilla
{
namespace
dom
{
class
BrowsingContextWebProgress
final
:
public
nsIWebProgress
public
nsIWebProgressListener
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIWEBPROGRESS
NS_DECL_NSIWEBPROGRESSLISTENER
BrowsingContextWebProgress
(
)
=
default
;
struct
ListenerInfo
{
ListenerInfo
(
nsIWeakReference
*
aListener
unsigned
long
aNotifyMask
)
:
mWeakListener
(
aListener
)
mNotifyMask
(
aNotifyMask
)
{
}
bool
operator
=
=
(
const
ListenerInfo
&
aOther
)
const
{
return
mWeakListener
=
=
aOther
.
mWeakListener
;
}
bool
operator
=
=
(
const
nsWeakPtr
&
aOther
)
const
{
return
mWeakListener
=
=
aOther
;
}
nsWeakPtr
mWeakListener
;
unsigned
long
mNotifyMask
;
}
;
private
:
virtual
~
BrowsingContextWebProgress
(
)
=
default
;
void
UpdateAndNotifyListeners
(
nsIWebProgress
*
aWebProgress
uint32_t
aFlag
const
std
:
:
function
<
void
(
nsIWebProgressListener
*
)
>
&
aCallback
)
;
using
ListenerArray
=
nsAutoTObserverArray
<
ListenerInfo
4
>
;
ListenerArray
mListenerInfoList
;
uint32_t
mLoadType
=
0
;
bool
mIsLoadingDocument
=
false
;
}
;
}
}
#
endif
