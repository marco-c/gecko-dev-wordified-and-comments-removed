#
ifndef
nsDocShellEditorData_h__
#
define
nsDocShellEditorData_h__
#
ifndef
nsCOMPtr_h___
#
include
"
nsCOMPtr
.
h
"
#
endif
#
include
"
mozilla
/
HTMLEditor
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
dom
/
Document
.
h
"
class
nsIDocShell
;
class
nsEditingSession
;
class
nsDocShellEditorData
{
public
:
explicit
nsDocShellEditorData
(
nsIDocShell
*
aOwningDocShell
)
;
~
nsDocShellEditorData
(
)
;
MOZ_CAN_RUN_SCRIPT_BOUNDARY
nsresult
MakeEditable
(
bool
aWaitForUriLoad
)
;
bool
GetEditable
(
)
;
nsEditingSession
*
GetEditingSession
(
)
;
mozilla
:
:
HTMLEditor
*
GetHTMLEditor
(
)
const
{
return
mHTMLEditor
;
}
MOZ_CAN_RUN_SCRIPT_BOUNDARY
nsresult
SetHTMLEditor
(
mozilla
:
:
HTMLEditor
*
aHTMLEditor
)
;
MOZ_CAN_RUN_SCRIPT_BOUNDARY
void
TearDownEditor
(
)
;
nsresult
DetachFromWindow
(
)
;
nsresult
ReattachToWindow
(
nsIDocShell
*
aDocShell
)
;
bool
WaitingForLoad
(
)
const
{
return
mMakeEditable
;
}
protected
:
void
EnsureEditingSession
(
)
;
nsIDocShell
*
mDocShell
;
RefPtr
<
nsEditingSession
>
mEditingSession
;
RefPtr
<
mozilla
:
:
HTMLEditor
>
mHTMLEditor
;
mozilla
:
:
dom
:
:
Document
:
:
EditingState
mDetachedEditingState
;
bool
mMakeEditable
;
bool
mIsDetached
;
bool
mDetachedMakeEditable
;
}
;
#
endif
