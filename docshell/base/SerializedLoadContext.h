#
ifndef
SerializedLoadContext_h
#
define
SerializedLoadContext_h
#
include
"
base
/
basictypes
.
h
"
#
include
"
ipc
/
IPCMessageUtils
.
h
"
#
include
"
mozilla
/
BasePrincipal
.
h
"
class
nsILoadContext
;
class
nsIChannel
;
class
nsIWebSocketChannel
;
namespace
IPC
{
class
SerializedLoadContext
{
public
:
SerializedLoadContext
(
)
:
mIsNotNull
(
false
)
mIsPrivateBitValid
(
false
)
mIsContent
(
false
)
mUseRemoteTabs
(
false
)
mUseRemoteSubframes
(
false
)
mUseTrackingProtection
(
false
)
{
Init
(
nullptr
)
;
}
explicit
SerializedLoadContext
(
nsILoadContext
*
aLoadContext
)
;
explicit
SerializedLoadContext
(
nsIChannel
*
aChannel
)
;
explicit
SerializedLoadContext
(
nsIWebSocketChannel
*
aChannel
)
;
void
Init
(
nsILoadContext
*
aLoadContext
)
;
bool
IsNotNull
(
)
const
{
return
mIsNotNull
;
}
bool
IsPrivateBitValid
(
)
const
{
return
mIsPrivateBitValid
;
}
bool
mIsNotNull
;
bool
mIsPrivateBitValid
;
bool
mIsContent
;
bool
mUseRemoteTabs
;
bool
mUseRemoteSubframes
;
bool
mUseTrackingProtection
;
mozilla
:
:
OriginAttributes
mOriginAttributes
;
}
;
template
<
>
struct
ParamTraits
<
SerializedLoadContext
>
{
typedef
SerializedLoadContext
paramType
;
static
void
Write
(
Message
*
aMsg
const
paramType
&
aParam
)
{
nsAutoCString
suffix
;
aParam
.
mOriginAttributes
.
CreateSuffix
(
suffix
)
;
WriteParam
(
aMsg
aParam
.
mIsNotNull
)
;
WriteParam
(
aMsg
aParam
.
mIsContent
)
;
WriteParam
(
aMsg
aParam
.
mIsPrivateBitValid
)
;
WriteParam
(
aMsg
aParam
.
mUseRemoteTabs
)
;
WriteParam
(
aMsg
aParam
.
mUseRemoteSubframes
)
;
WriteParam
(
aMsg
aParam
.
mUseTrackingProtection
)
;
WriteParam
(
aMsg
suffix
)
;
}
static
bool
Read
(
const
Message
*
aMsg
PickleIterator
*
aIter
paramType
*
aResult
)
{
nsAutoCString
suffix
;
if
(
!
ReadParam
(
aMsg
aIter
&
aResult
-
>
mIsNotNull
)
|
|
!
ReadParam
(
aMsg
aIter
&
aResult
-
>
mIsContent
)
|
|
!
ReadParam
(
aMsg
aIter
&
aResult
-
>
mIsPrivateBitValid
)
|
|
!
ReadParam
(
aMsg
aIter
&
aResult
-
>
mUseRemoteTabs
)
|
|
!
ReadParam
(
aMsg
aIter
&
aResult
-
>
mUseRemoteSubframes
)
|
|
!
ReadParam
(
aMsg
aIter
&
aResult
-
>
mUseTrackingProtection
)
|
|
!
ReadParam
(
aMsg
aIter
&
suffix
)
)
{
return
false
;
}
return
aResult
-
>
mOriginAttributes
.
PopulateFromSuffix
(
suffix
)
;
}
}
;
}
#
endif
