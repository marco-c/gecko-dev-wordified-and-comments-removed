#
ifndef
LoadContext_h
#
define
LoadContext_h
#
include
"
SerializedLoadContext
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
BasePrincipal
.
h
"
#
include
"
nsIWeakReferenceUtils
.
h
"
#
include
"
mozilla
/
dom
/
Element
.
h
"
#
include
"
nsIInterfaceRequestor
.
h
"
#
include
"
nsILoadContext
.
h
"
namespace
mozilla
{
class
LoadContext
final
:
public
nsILoadContext
public
nsIInterfaceRequestor
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSILOADCONTEXT
NS_DECL_NSIINTERFACEREQUESTOR
LoadContext
(
const
IPC
:
:
SerializedLoadContext
&
aToCopy
dom
:
:
Element
*
aTopFrameElement
OriginAttributes
&
aAttrs
)
:
mTopFrameElement
(
do_GetWeakReference
(
aTopFrameElement
)
)
mIsContent
(
aToCopy
.
mIsContent
)
mUseRemoteTabs
(
aToCopy
.
mUseRemoteTabs
)
mUseRemoteSubframes
(
aToCopy
.
mUseRemoteSubframes
)
mUseTrackingProtection
(
aToCopy
.
mUseTrackingProtection
)
#
ifdef
DEBUG
mIsNotNull
(
aToCopy
.
mIsNotNull
)
#
endif
mOriginAttributes
(
aAttrs
)
{
}
LoadContext
(
dom
:
:
Element
*
aTopFrameElement
bool
aIsContent
bool
aUsePrivateBrowsing
bool
aUseRemoteTabs
bool
aUseRemoteSubframes
bool
aUseTrackingProtection
const
OriginAttributes
&
aAttrs
)
:
mTopFrameElement
(
do_GetWeakReference
(
aTopFrameElement
)
)
mIsContent
(
aIsContent
)
mUseRemoteTabs
(
aUseRemoteTabs
)
mUseRemoteSubframes
(
aUseRemoteSubframes
)
mUseTrackingProtection
(
aUseTrackingProtection
)
#
ifdef
DEBUG
mIsNotNull
(
true
)
#
endif
mOriginAttributes
(
aAttrs
)
{
MOZ_DIAGNOSTIC_ASSERT
(
aUsePrivateBrowsing
=
=
(
aAttrs
.
mPrivateBrowsingId
>
0
)
)
;
}
explicit
LoadContext
(
OriginAttributes
&
aAttrs
)
:
mTopFrameElement
(
nullptr
)
mIsContent
(
false
)
mUseRemoteTabs
(
false
)
mUseRemoteSubframes
(
false
)
mUseTrackingProtection
(
false
)
#
ifdef
DEBUG
mIsNotNull
(
true
)
#
endif
mOriginAttributes
(
aAttrs
)
{
}
explicit
LoadContext
(
nsIPrincipal
*
aPrincipal
nsILoadContext
*
aOptionalBase
=
nullptr
)
;
private
:
~
LoadContext
(
)
{
}
nsWeakPtr
mTopFrameElement
;
bool
mIsContent
;
bool
mUseRemoteTabs
;
bool
mUseRemoteSubframes
;
bool
mUseTrackingProtection
;
#
ifdef
DEBUG
bool
mIsNotNull
;
#
endif
OriginAttributes
mOriginAttributes
;
}
;
already_AddRefed
<
nsILoadContext
>
CreateLoadContext
(
)
;
already_AddRefed
<
nsILoadContext
>
CreatePrivateLoadContext
(
)
;
}
#
endif
