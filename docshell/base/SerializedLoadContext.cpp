#
include
"
SerializedLoadContext
.
h
"
#
include
"
nsNetUtil
.
h
"
#
include
"
nsIChannel
.
h
"
#
include
"
nsILoadContext
.
h
"
#
include
"
nsIPrivateBrowsingChannel
.
h
"
#
include
"
nsIWebSocketChannel
.
h
"
namespace
IPC
{
SerializedLoadContext
:
:
SerializedLoadContext
(
nsILoadContext
*
aLoadContext
)
:
mIsContent
(
false
)
mUseRemoteTabs
(
false
)
mUseRemoteSubframes
(
false
)
mUseTrackingProtection
(
false
)
{
Init
(
aLoadContext
)
;
}
SerializedLoadContext
:
:
SerializedLoadContext
(
nsIChannel
*
aChannel
)
:
mIsContent
(
false
)
mUseRemoteTabs
(
false
)
mUseRemoteSubframes
(
false
)
mUseTrackingProtection
(
false
)
{
if
(
!
aChannel
)
{
Init
(
nullptr
)
;
return
;
}
nsCOMPtr
<
nsILoadContext
>
loadContext
;
NS_QueryNotificationCallbacks
(
aChannel
loadContext
)
;
Init
(
loadContext
)
;
if
(
!
loadContext
)
{
bool
isPrivate
=
false
;
bool
isOverriden
=
false
;
nsCOMPtr
<
nsIPrivateBrowsingChannel
>
pbChannel
=
do_QueryInterface
(
aChannel
)
;
if
(
pbChannel
&
&
NS_SUCCEEDED
(
pbChannel
-
>
IsPrivateModeOverriden
(
&
isPrivate
&
isOverriden
)
)
&
&
isOverriden
)
{
mIsPrivateBitValid
=
true
;
}
mOriginAttributes
.
SyncAttributesWithPrivateBrowsing
(
isPrivate
)
;
}
}
SerializedLoadContext
:
:
SerializedLoadContext
(
nsIWebSocketChannel
*
aChannel
)
:
mIsContent
(
false
)
mUseRemoteTabs
(
false
)
mUseRemoteSubframes
(
false
)
mUseTrackingProtection
(
false
)
{
nsCOMPtr
<
nsILoadContext
>
loadContext
;
if
(
aChannel
)
{
NS_QueryNotificationCallbacks
(
aChannel
loadContext
)
;
}
Init
(
loadContext
)
;
}
void
SerializedLoadContext
:
:
Init
(
nsILoadContext
*
aLoadContext
)
{
if
(
aLoadContext
)
{
mIsNotNull
=
true
;
mIsPrivateBitValid
=
true
;
aLoadContext
-
>
GetIsContent
(
&
mIsContent
)
;
aLoadContext
-
>
GetUseRemoteTabs
(
&
mUseRemoteTabs
)
;
aLoadContext
-
>
GetUseRemoteSubframes
(
&
mUseRemoteSubframes
)
;
aLoadContext
-
>
GetUseTrackingProtection
(
&
mUseTrackingProtection
)
;
aLoadContext
-
>
GetOriginAttributes
(
mOriginAttributes
)
;
}
else
{
mIsNotNull
=
false
;
mIsPrivateBitValid
=
false
;
mIsContent
=
true
;
mUseRemoteTabs
=
false
;
mUseRemoteSubframes
=
false
;
mUseTrackingProtection
=
false
;
}
}
}
