#
ifndef
ICU4XCustomTimeZone_HPP
#
define
ICU4XCustomTimeZone_HPP
#
include
<
stdint
.
h
>
#
include
<
stddef
.
h
>
#
include
<
stdbool
.
h
>
#
include
<
algorithm
>
#
include
<
memory
>
#
include
<
variant
>
#
include
<
optional
>
#
include
"
diplomat_runtime
.
hpp
"
#
include
"
ICU4XCustomTimeZone
.
h
"
class
ICU4XCustomTimeZone
;
#
include
"
ICU4XError
.
hpp
"
class
ICU4XIanaToBcp47Mapper
;
class
ICU4XMetazoneCalculator
;
class
ICU4XIsoDateTime
;
struct
ICU4XCustomTimeZoneDeleter
{
void
operator
(
)
(
capi
:
:
ICU4XCustomTimeZone
*
l
)
const
noexcept
{
capi
:
:
ICU4XCustomTimeZone_destroy
(
l
)
;
}
}
;
class
ICU4XCustomTimeZone
{
public
:
static
diplomat
:
:
result
<
ICU4XCustomTimeZone
ICU4XError
>
create_from_string
(
const
std
:
:
string_view
s
)
;
static
ICU4XCustomTimeZone
create_empty
(
)
;
static
ICU4XCustomTimeZone
create_utc
(
)
;
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
try_set_gmt_offset_seconds
(
int32_t
offset_seconds
)
;
void
clear_gmt_offset
(
)
;
diplomat
:
:
result
<
int32_t
ICU4XError
>
gmt_offset_seconds
(
)
const
;
diplomat
:
:
result
<
bool
ICU4XError
>
is_gmt_offset_positive
(
)
const
;
diplomat
:
:
result
<
bool
ICU4XError
>
is_gmt_offset_zero
(
)
const
;
diplomat
:
:
result
<
bool
ICU4XError
>
gmt_offset_has_minutes
(
)
const
;
diplomat
:
:
result
<
bool
ICU4XError
>
gmt_offset_has_seconds
(
)
const
;
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
try_set_time_zone_id
(
const
std
:
:
string_view
id
)
;
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
try_set_iana_time_zone_id
(
const
ICU4XIanaToBcp47Mapper
&
mapper
const
std
:
:
string_view
id
)
;
void
clear_time_zone_id
(
)
;
template
<
typename
W
>
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
time_zone_id_to_writeable
(
W
&
write
)
const
;
diplomat
:
:
result
<
std
:
:
string
ICU4XError
>
time_zone_id
(
)
const
;
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
try_set_metazone_id
(
const
std
:
:
string_view
id
)
;
void
clear_metazone_id
(
)
;
template
<
typename
W
>
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
metazone_id_to_writeable
(
W
&
write
)
const
;
diplomat
:
:
result
<
std
:
:
string
ICU4XError
>
metazone_id
(
)
const
;
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
try_set_zone_variant
(
const
std
:
:
string_view
id
)
;
void
clear_zone_variant
(
)
;
template
<
typename
W
>
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
zone_variant_to_writeable
(
W
&
write
)
const
;
diplomat
:
:
result
<
std
:
:
string
ICU4XError
>
zone_variant
(
)
const
;
void
set_standard_time
(
)
;
void
set_daylight_time
(
)
;
diplomat
:
:
result
<
bool
ICU4XError
>
is_standard_time
(
)
const
;
diplomat
:
:
result
<
bool
ICU4XError
>
is_daylight_time
(
)
const
;
void
maybe_calculate_metazone
(
const
ICU4XMetazoneCalculator
&
metazone_calculator
const
ICU4XIsoDateTime
&
local_datetime
)
;
inline
const
capi
:
:
ICU4XCustomTimeZone
*
AsFFI
(
)
const
{
return
this
-
>
inner
.
get
(
)
;
}
inline
capi
:
:
ICU4XCustomTimeZone
*
AsFFIMut
(
)
{
return
this
-
>
inner
.
get
(
)
;
}
inline
ICU4XCustomTimeZone
(
capi
:
:
ICU4XCustomTimeZone
*
i
)
:
inner
(
i
)
{
}
ICU4XCustomTimeZone
(
)
=
default
;
ICU4XCustomTimeZone
(
ICU4XCustomTimeZone
&
&
)
noexcept
=
default
;
ICU4XCustomTimeZone
&
operator
=
(
ICU4XCustomTimeZone
&
&
other
)
noexcept
=
default
;
private
:
std
:
:
unique_ptr
<
capi
:
:
ICU4XCustomTimeZone
ICU4XCustomTimeZoneDeleter
>
inner
;
}
;
#
include
"
ICU4XIanaToBcp47Mapper
.
hpp
"
#
include
"
ICU4XMetazoneCalculator
.
hpp
"
#
include
"
ICU4XIsoDateTime
.
hpp
"
inline
diplomat
:
:
result
<
ICU4XCustomTimeZone
ICU4XError
>
ICU4XCustomTimeZone
:
:
create_from_string
(
const
std
:
:
string_view
s
)
{
auto
diplomat_result_raw_out_value
=
capi
:
:
ICU4XCustomTimeZone_create_from_string
(
s
.
data
(
)
s
.
size
(
)
)
;
diplomat
:
:
result
<
ICU4XCustomTimeZone
ICU4XError
>
diplomat_result_out_value
;
if
(
diplomat_result_raw_out_value
.
is_ok
)
{
diplomat_result_out_value
=
diplomat
:
:
Ok
<
ICU4XCustomTimeZone
>
(
ICU4XCustomTimeZone
(
diplomat_result_raw_out_value
.
ok
)
)
;
}
else
{
diplomat_result_out_value
=
diplomat
:
:
Err
<
ICU4XError
>
(
static_cast
<
ICU4XError
>
(
diplomat_result_raw_out_value
.
err
)
)
;
}
return
diplomat_result_out_value
;
}
inline
ICU4XCustomTimeZone
ICU4XCustomTimeZone
:
:
create_empty
(
)
{
return
ICU4XCustomTimeZone
(
capi
:
:
ICU4XCustomTimeZone_create_empty
(
)
)
;
}
inline
ICU4XCustomTimeZone
ICU4XCustomTimeZone
:
:
create_utc
(
)
{
return
ICU4XCustomTimeZone
(
capi
:
:
ICU4XCustomTimeZone_create_utc
(
)
)
;
}
inline
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
ICU4XCustomTimeZone
:
:
try_set_gmt_offset_seconds
(
int32_t
offset_seconds
)
{
auto
diplomat_result_raw_out_value
=
capi
:
:
ICU4XCustomTimeZone_try_set_gmt_offset_seconds
(
this
-
>
inner
.
get
(
)
offset_seconds
)
;
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
diplomat_result_out_value
;
if
(
diplomat_result_raw_out_value
.
is_ok
)
{
diplomat_result_out_value
=
diplomat
:
:
Ok
(
std
:
:
monostate
(
)
)
;
}
else
{
diplomat_result_out_value
=
diplomat
:
:
Err
<
ICU4XError
>
(
static_cast
<
ICU4XError
>
(
diplomat_result_raw_out_value
.
err
)
)
;
}
return
diplomat_result_out_value
;
}
inline
void
ICU4XCustomTimeZone
:
:
clear_gmt_offset
(
)
{
capi
:
:
ICU4XCustomTimeZone_clear_gmt_offset
(
this
-
>
inner
.
get
(
)
)
;
}
inline
diplomat
:
:
result
<
int32_t
ICU4XError
>
ICU4XCustomTimeZone
:
:
gmt_offset_seconds
(
)
const
{
auto
diplomat_result_raw_out_value
=
capi
:
:
ICU4XCustomTimeZone_gmt_offset_seconds
(
this
-
>
inner
.
get
(
)
)
;
diplomat
:
:
result
<
int32_t
ICU4XError
>
diplomat_result_out_value
;
if
(
diplomat_result_raw_out_value
.
is_ok
)
{
diplomat_result_out_value
=
diplomat
:
:
Ok
<
int32_t
>
(
diplomat_result_raw_out_value
.
ok
)
;
}
else
{
diplomat_result_out_value
=
diplomat
:
:
Err
<
ICU4XError
>
(
static_cast
<
ICU4XError
>
(
diplomat_result_raw_out_value
.
err
)
)
;
}
return
diplomat_result_out_value
;
}
inline
diplomat
:
:
result
<
bool
ICU4XError
>
ICU4XCustomTimeZone
:
:
is_gmt_offset_positive
(
)
const
{
auto
diplomat_result_raw_out_value
=
capi
:
:
ICU4XCustomTimeZone_is_gmt_offset_positive
(
this
-
>
inner
.
get
(
)
)
;
diplomat
:
:
result
<
bool
ICU4XError
>
diplomat_result_out_value
;
if
(
diplomat_result_raw_out_value
.
is_ok
)
{
diplomat_result_out_value
=
diplomat
:
:
Ok
<
bool
>
(
diplomat_result_raw_out_value
.
ok
)
;
}
else
{
diplomat_result_out_value
=
diplomat
:
:
Err
<
ICU4XError
>
(
static_cast
<
ICU4XError
>
(
diplomat_result_raw_out_value
.
err
)
)
;
}
return
diplomat_result_out_value
;
}
inline
diplomat
:
:
result
<
bool
ICU4XError
>
ICU4XCustomTimeZone
:
:
is_gmt_offset_zero
(
)
const
{
auto
diplomat_result_raw_out_value
=
capi
:
:
ICU4XCustomTimeZone_is_gmt_offset_zero
(
this
-
>
inner
.
get
(
)
)
;
diplomat
:
:
result
<
bool
ICU4XError
>
diplomat_result_out_value
;
if
(
diplomat_result_raw_out_value
.
is_ok
)
{
diplomat_result_out_value
=
diplomat
:
:
Ok
<
bool
>
(
diplomat_result_raw_out_value
.
ok
)
;
}
else
{
diplomat_result_out_value
=
diplomat
:
:
Err
<
ICU4XError
>
(
static_cast
<
ICU4XError
>
(
diplomat_result_raw_out_value
.
err
)
)
;
}
return
diplomat_result_out_value
;
}
inline
diplomat
:
:
result
<
bool
ICU4XError
>
ICU4XCustomTimeZone
:
:
gmt_offset_has_minutes
(
)
const
{
auto
diplomat_result_raw_out_value
=
capi
:
:
ICU4XCustomTimeZone_gmt_offset_has_minutes
(
this
-
>
inner
.
get
(
)
)
;
diplomat
:
:
result
<
bool
ICU4XError
>
diplomat_result_out_value
;
if
(
diplomat_result_raw_out_value
.
is_ok
)
{
diplomat_result_out_value
=
diplomat
:
:
Ok
<
bool
>
(
diplomat_result_raw_out_value
.
ok
)
;
}
else
{
diplomat_result_out_value
=
diplomat
:
:
Err
<
ICU4XError
>
(
static_cast
<
ICU4XError
>
(
diplomat_result_raw_out_value
.
err
)
)
;
}
return
diplomat_result_out_value
;
}
inline
diplomat
:
:
result
<
bool
ICU4XError
>
ICU4XCustomTimeZone
:
:
gmt_offset_has_seconds
(
)
const
{
auto
diplomat_result_raw_out_value
=
capi
:
:
ICU4XCustomTimeZone_gmt_offset_has_seconds
(
this
-
>
inner
.
get
(
)
)
;
diplomat
:
:
result
<
bool
ICU4XError
>
diplomat_result_out_value
;
if
(
diplomat_result_raw_out_value
.
is_ok
)
{
diplomat_result_out_value
=
diplomat
:
:
Ok
<
bool
>
(
diplomat_result_raw_out_value
.
ok
)
;
}
else
{
diplomat_result_out_value
=
diplomat
:
:
Err
<
ICU4XError
>
(
static_cast
<
ICU4XError
>
(
diplomat_result_raw_out_value
.
err
)
)
;
}
return
diplomat_result_out_value
;
}
inline
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
ICU4XCustomTimeZone
:
:
try_set_time_zone_id
(
const
std
:
:
string_view
id
)
{
auto
diplomat_result_raw_out_value
=
capi
:
:
ICU4XCustomTimeZone_try_set_time_zone_id
(
this
-
>
inner
.
get
(
)
id
.
data
(
)
id
.
size
(
)
)
;
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
diplomat_result_out_value
;
if
(
diplomat_result_raw_out_value
.
is_ok
)
{
diplomat_result_out_value
=
diplomat
:
:
Ok
(
std
:
:
monostate
(
)
)
;
}
else
{
diplomat_result_out_value
=
diplomat
:
:
Err
<
ICU4XError
>
(
static_cast
<
ICU4XError
>
(
diplomat_result_raw_out_value
.
err
)
)
;
}
return
diplomat_result_out_value
;
}
inline
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
ICU4XCustomTimeZone
:
:
try_set_iana_time_zone_id
(
const
ICU4XIanaToBcp47Mapper
&
mapper
const
std
:
:
string_view
id
)
{
auto
diplomat_result_raw_out_value
=
capi
:
:
ICU4XCustomTimeZone_try_set_iana_time_zone_id
(
this
-
>
inner
.
get
(
)
mapper
.
AsFFI
(
)
id
.
data
(
)
id
.
size
(
)
)
;
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
diplomat_result_out_value
;
if
(
diplomat_result_raw_out_value
.
is_ok
)
{
diplomat_result_out_value
=
diplomat
:
:
Ok
(
std
:
:
monostate
(
)
)
;
}
else
{
diplomat_result_out_value
=
diplomat
:
:
Err
<
ICU4XError
>
(
static_cast
<
ICU4XError
>
(
diplomat_result_raw_out_value
.
err
)
)
;
}
return
diplomat_result_out_value
;
}
inline
void
ICU4XCustomTimeZone
:
:
clear_time_zone_id
(
)
{
capi
:
:
ICU4XCustomTimeZone_clear_time_zone_id
(
this
-
>
inner
.
get
(
)
)
;
}
template
<
typename
W
>
inline
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
ICU4XCustomTimeZone
:
:
time_zone_id_to_writeable
(
W
&
write
)
const
{
capi
:
:
DiplomatWriteable
write_writer
=
diplomat
:
:
WriteableTrait
<
W
>
:
:
Construct
(
write
)
;
auto
diplomat_result_raw_out_value
=
capi
:
:
ICU4XCustomTimeZone_time_zone_id
(
this
-
>
inner
.
get
(
)
&
write_writer
)
;
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
diplomat_result_out_value
;
if
(
diplomat_result_raw_out_value
.
is_ok
)
{
diplomat_result_out_value
=
diplomat
:
:
Ok
(
std
:
:
monostate
(
)
)
;
}
else
{
diplomat_result_out_value
=
diplomat
:
:
Err
<
ICU4XError
>
(
static_cast
<
ICU4XError
>
(
diplomat_result_raw_out_value
.
err
)
)
;
}
return
diplomat_result_out_value
;
}
inline
diplomat
:
:
result
<
std
:
:
string
ICU4XError
>
ICU4XCustomTimeZone
:
:
time_zone_id
(
)
const
{
std
:
:
string
diplomat_writeable_string
;
capi
:
:
DiplomatWriteable
diplomat_writeable_out
=
diplomat
:
:
WriteableFromString
(
diplomat_writeable_string
)
;
auto
diplomat_result_raw_out_value
=
capi
:
:
ICU4XCustomTimeZone_time_zone_id
(
this
-
>
inner
.
get
(
)
&
diplomat_writeable_out
)
;
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
diplomat_result_out_value
;
if
(
diplomat_result_raw_out_value
.
is_ok
)
{
diplomat_result_out_value
=
diplomat
:
:
Ok
(
std
:
:
monostate
(
)
)
;
}
else
{
diplomat_result_out_value
=
diplomat
:
:
Err
<
ICU4XError
>
(
static_cast
<
ICU4XError
>
(
diplomat_result_raw_out_value
.
err
)
)
;
}
return
diplomat_result_out_value
.
replace_ok
(
std
:
:
move
(
diplomat_writeable_string
)
)
;
}
inline
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
ICU4XCustomTimeZone
:
:
try_set_metazone_id
(
const
std
:
:
string_view
id
)
{
auto
diplomat_result_raw_out_value
=
capi
:
:
ICU4XCustomTimeZone_try_set_metazone_id
(
this
-
>
inner
.
get
(
)
id
.
data
(
)
id
.
size
(
)
)
;
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
diplomat_result_out_value
;
if
(
diplomat_result_raw_out_value
.
is_ok
)
{
diplomat_result_out_value
=
diplomat
:
:
Ok
(
std
:
:
monostate
(
)
)
;
}
else
{
diplomat_result_out_value
=
diplomat
:
:
Err
<
ICU4XError
>
(
static_cast
<
ICU4XError
>
(
diplomat_result_raw_out_value
.
err
)
)
;
}
return
diplomat_result_out_value
;
}
inline
void
ICU4XCustomTimeZone
:
:
clear_metazone_id
(
)
{
capi
:
:
ICU4XCustomTimeZone_clear_metazone_id
(
this
-
>
inner
.
get
(
)
)
;
}
template
<
typename
W
>
inline
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
ICU4XCustomTimeZone
:
:
metazone_id_to_writeable
(
W
&
write
)
const
{
capi
:
:
DiplomatWriteable
write_writer
=
diplomat
:
:
WriteableTrait
<
W
>
:
:
Construct
(
write
)
;
auto
diplomat_result_raw_out_value
=
capi
:
:
ICU4XCustomTimeZone_metazone_id
(
this
-
>
inner
.
get
(
)
&
write_writer
)
;
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
diplomat_result_out_value
;
if
(
diplomat_result_raw_out_value
.
is_ok
)
{
diplomat_result_out_value
=
diplomat
:
:
Ok
(
std
:
:
monostate
(
)
)
;
}
else
{
diplomat_result_out_value
=
diplomat
:
:
Err
<
ICU4XError
>
(
static_cast
<
ICU4XError
>
(
diplomat_result_raw_out_value
.
err
)
)
;
}
return
diplomat_result_out_value
;
}
inline
diplomat
:
:
result
<
std
:
:
string
ICU4XError
>
ICU4XCustomTimeZone
:
:
metazone_id
(
)
const
{
std
:
:
string
diplomat_writeable_string
;
capi
:
:
DiplomatWriteable
diplomat_writeable_out
=
diplomat
:
:
WriteableFromString
(
diplomat_writeable_string
)
;
auto
diplomat_result_raw_out_value
=
capi
:
:
ICU4XCustomTimeZone_metazone_id
(
this
-
>
inner
.
get
(
)
&
diplomat_writeable_out
)
;
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
diplomat_result_out_value
;
if
(
diplomat_result_raw_out_value
.
is_ok
)
{
diplomat_result_out_value
=
diplomat
:
:
Ok
(
std
:
:
monostate
(
)
)
;
}
else
{
diplomat_result_out_value
=
diplomat
:
:
Err
<
ICU4XError
>
(
static_cast
<
ICU4XError
>
(
diplomat_result_raw_out_value
.
err
)
)
;
}
return
diplomat_result_out_value
.
replace_ok
(
std
:
:
move
(
diplomat_writeable_string
)
)
;
}
inline
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
ICU4XCustomTimeZone
:
:
try_set_zone_variant
(
const
std
:
:
string_view
id
)
{
auto
diplomat_result_raw_out_value
=
capi
:
:
ICU4XCustomTimeZone_try_set_zone_variant
(
this
-
>
inner
.
get
(
)
id
.
data
(
)
id
.
size
(
)
)
;
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
diplomat_result_out_value
;
if
(
diplomat_result_raw_out_value
.
is_ok
)
{
diplomat_result_out_value
=
diplomat
:
:
Ok
(
std
:
:
monostate
(
)
)
;
}
else
{
diplomat_result_out_value
=
diplomat
:
:
Err
<
ICU4XError
>
(
static_cast
<
ICU4XError
>
(
diplomat_result_raw_out_value
.
err
)
)
;
}
return
diplomat_result_out_value
;
}
inline
void
ICU4XCustomTimeZone
:
:
clear_zone_variant
(
)
{
capi
:
:
ICU4XCustomTimeZone_clear_zone_variant
(
this
-
>
inner
.
get
(
)
)
;
}
template
<
typename
W
>
inline
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
ICU4XCustomTimeZone
:
:
zone_variant_to_writeable
(
W
&
write
)
const
{
capi
:
:
DiplomatWriteable
write_writer
=
diplomat
:
:
WriteableTrait
<
W
>
:
:
Construct
(
write
)
;
auto
diplomat_result_raw_out_value
=
capi
:
:
ICU4XCustomTimeZone_zone_variant
(
this
-
>
inner
.
get
(
)
&
write_writer
)
;
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
diplomat_result_out_value
;
if
(
diplomat_result_raw_out_value
.
is_ok
)
{
diplomat_result_out_value
=
diplomat
:
:
Ok
(
std
:
:
monostate
(
)
)
;
}
else
{
diplomat_result_out_value
=
diplomat
:
:
Err
<
ICU4XError
>
(
static_cast
<
ICU4XError
>
(
diplomat_result_raw_out_value
.
err
)
)
;
}
return
diplomat_result_out_value
;
}
inline
diplomat
:
:
result
<
std
:
:
string
ICU4XError
>
ICU4XCustomTimeZone
:
:
zone_variant
(
)
const
{
std
:
:
string
diplomat_writeable_string
;
capi
:
:
DiplomatWriteable
diplomat_writeable_out
=
diplomat
:
:
WriteableFromString
(
diplomat_writeable_string
)
;
auto
diplomat_result_raw_out_value
=
capi
:
:
ICU4XCustomTimeZone_zone_variant
(
this
-
>
inner
.
get
(
)
&
diplomat_writeable_out
)
;
diplomat
:
:
result
<
std
:
:
monostate
ICU4XError
>
diplomat_result_out_value
;
if
(
diplomat_result_raw_out_value
.
is_ok
)
{
diplomat_result_out_value
=
diplomat
:
:
Ok
(
std
:
:
monostate
(
)
)
;
}
else
{
diplomat_result_out_value
=
diplomat
:
:
Err
<
ICU4XError
>
(
static_cast
<
ICU4XError
>
(
diplomat_result_raw_out_value
.
err
)
)
;
}
return
diplomat_result_out_value
.
replace_ok
(
std
:
:
move
(
diplomat_writeable_string
)
)
;
}
inline
void
ICU4XCustomTimeZone
:
:
set_standard_time
(
)
{
capi
:
:
ICU4XCustomTimeZone_set_standard_time
(
this
-
>
inner
.
get
(
)
)
;
}
inline
void
ICU4XCustomTimeZone
:
:
set_daylight_time
(
)
{
capi
:
:
ICU4XCustomTimeZone_set_daylight_time
(
this
-
>
inner
.
get
(
)
)
;
}
inline
diplomat
:
:
result
<
bool
ICU4XError
>
ICU4XCustomTimeZone
:
:
is_standard_time
(
)
const
{
auto
diplomat_result_raw_out_value
=
capi
:
:
ICU4XCustomTimeZone_is_standard_time
(
this
-
>
inner
.
get
(
)
)
;
diplomat
:
:
result
<
bool
ICU4XError
>
diplomat_result_out_value
;
if
(
diplomat_result_raw_out_value
.
is_ok
)
{
diplomat_result_out_value
=
diplomat
:
:
Ok
<
bool
>
(
diplomat_result_raw_out_value
.
ok
)
;
}
else
{
diplomat_result_out_value
=
diplomat
:
:
Err
<
ICU4XError
>
(
static_cast
<
ICU4XError
>
(
diplomat_result_raw_out_value
.
err
)
)
;
}
return
diplomat_result_out_value
;
}
inline
diplomat
:
:
result
<
bool
ICU4XError
>
ICU4XCustomTimeZone
:
:
is_daylight_time
(
)
const
{
auto
diplomat_result_raw_out_value
=
capi
:
:
ICU4XCustomTimeZone_is_daylight_time
(
this
-
>
inner
.
get
(
)
)
;
diplomat
:
:
result
<
bool
ICU4XError
>
diplomat_result_out_value
;
if
(
diplomat_result_raw_out_value
.
is_ok
)
{
diplomat_result_out_value
=
diplomat
:
:
Ok
<
bool
>
(
diplomat_result_raw_out_value
.
ok
)
;
}
else
{
diplomat_result_out_value
=
diplomat
:
:
Err
<
ICU4XError
>
(
static_cast
<
ICU4XError
>
(
diplomat_result_raw_out_value
.
err
)
)
;
}
return
diplomat_result_out_value
;
}
inline
void
ICU4XCustomTimeZone
:
:
maybe_calculate_metazone
(
const
ICU4XMetazoneCalculator
&
metazone_calculator
const
ICU4XIsoDateTime
&
local_datetime
)
{
capi
:
:
ICU4XCustomTimeZone_maybe_calculate_metazone
(
this
-
>
inner
.
get
(
)
metazone_calculator
.
AsFFI
(
)
local_datetime
.
AsFFI
(
)
)
;
}
#
endif
