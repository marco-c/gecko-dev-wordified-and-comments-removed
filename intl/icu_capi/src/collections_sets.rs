#
[
diplomat
:
:
bridge
]
pub
mod
ffi
{
use
crate
:
:
properties_sets
:
:
ffi
:
:
ICU4XCodePointSetData
;
use
alloc
:
:
boxed
:
:
Box
;
use
core
:
:
mem
;
use
icu_collections
:
:
codepointinvlist
:
:
CodePointInversionListBuilder
;
use
icu_properties
:
:
sets
:
:
CodePointSetData
;
#
[
diplomat
:
:
opaque
]
#
[
diplomat
:
:
rust_link
(
icu
:
:
collections
:
:
codepointinvlist
:
:
CodePointInversionListBuilder
Struct
)
]
pub
struct
ICU4XCodePointSetBuilder
(
pub
CodePointInversionListBuilder
)
;
impl
ICU4XCodePointSetBuilder
{
#
[
diplomat
:
:
rust_link
(
icu
:
:
collections
:
:
codepointinvlist
:
:
CodePointInversionListBuilder
:
:
new
FnInStruct
)
]
pub
fn
create
(
)
-
>
Box
<
Self
>
{
Box
:
:
new
(
Self
(
CodePointInversionListBuilder
:
:
new
(
)
)
)
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
collections
:
:
codepointinvlist
:
:
CodePointInversionListBuilder
:
:
build
FnInStruct
)
]
#
[
diplomat
:
:
rust_link
(
icu
:
:
properties
:
:
sets
:
:
CodePointSetData
:
:
from_code_point_inversion_list
FnInStruct
hidden
)
]
pub
fn
build
(
&
mut
self
)
-
>
Box
<
ICU4XCodePointSetData
>
{
let
inner
=
mem
:
:
take
(
&
mut
self
.
0
)
;
let
built
=
inner
.
build
(
)
;
let
set
=
CodePointSetData
:
:
from_code_point_inversion_list
(
built
)
;
Box
:
:
new
(
ICU4XCodePointSetData
(
set
)
)
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
collections
:
:
codepointinvlist
:
:
CodePointInversionListBuilder
:
:
complement
FnInStruct
)
]
pub
fn
complement
(
&
mut
self
)
{
self
.
0
.
complement
(
)
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
collections
:
:
codepointinvlist
:
:
CodePointInversionListBuilder
:
:
is_empty
FnInStruct
)
]
pub
fn
is_empty
(
&
self
)
-
>
bool
{
self
.
0
.
is_empty
(
)
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
collections
:
:
codepointinvlist
:
:
CodePointInversionListBuilder
:
:
add_char
FnInStruct
)
]
pub
fn
add_char
(
&
mut
self
ch
:
char
)
{
self
.
0
.
add_char
(
ch
)
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
collections
:
:
codepointinvlist
:
:
CodePointInversionListBuilder
:
:
add_u32
FnInStruct
)
]
#
[
diplomat
:
:
attr
(
dart
disable
)
]
pub
fn
add_u32
(
&
mut
self
ch
:
u32
)
{
self
.
0
.
add_u32
(
ch
)
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
collections
:
:
codepointinvlist
:
:
CodePointInversionListBuilder
:
:
add_range
FnInStruct
)
]
pub
fn
add_inclusive_range
(
&
mut
self
start
:
char
end
:
char
)
{
self
.
0
.
add_range
(
&
(
start
.
.
=
end
)
)
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
collections
:
:
codepointinvlist
:
:
CodePointInversionListBuilder
:
:
add_range_u32
FnInStruct
)
]
#
[
diplomat
:
:
attr
(
dart
disable
)
]
pub
fn
add_inclusive_range_u32
(
&
mut
self
start
:
u32
end
:
u32
)
{
self
.
0
.
add_range_u32
(
&
(
start
.
.
=
end
)
)
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
collections
:
:
codepointinvlist
:
:
CodePointInversionListBuilder
:
:
add_set
FnInStruct
)
]
#
[
diplomat
:
:
rust_link
(
icu
:
:
properties
:
:
sets
:
:
CodePointSetData
:
:
as_code_point_inversion_list
FnInStruct
hidden
)
]
#
[
diplomat
:
:
rust_link
(
icu
:
:
properties
:
:
sets
:
:
CodePointSetData
:
:
to_code_point_inversion_list
FnInStruct
hidden
)
]
pub
fn
add_set
(
&
mut
self
data
:
&
ICU4XCodePointSetData
)
{
let
list
=
data
.
0
.
to_code_point_inversion_list
(
)
;
self
.
0
.
add_set
(
&
list
)
;
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
collections
:
:
codepointinvlist
:
:
CodePointInversionListBuilder
:
:
remove_char
FnInStruct
)
]
pub
fn
remove_char
(
&
mut
self
ch
:
char
)
{
self
.
0
.
remove_char
(
ch
)
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
collections
:
:
codepointinvlist
:
:
CodePointInversionListBuilder
:
:
remove_range
FnInStruct
)
]
pub
fn
remove_inclusive_range
(
&
mut
self
start
:
char
end
:
char
)
{
self
.
0
.
remove_range
(
&
(
start
.
.
=
end
)
)
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
collections
:
:
codepointinvlist
:
:
CodePointInversionListBuilder
:
:
remove_set
FnInStruct
)
]
pub
fn
remove_set
(
&
mut
self
data
:
&
ICU4XCodePointSetData
)
{
let
list
=
data
.
0
.
to_code_point_inversion_list
(
)
;
self
.
0
.
remove_set
(
&
list
)
;
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
collections
:
:
codepointinvlist
:
:
CodePointInversionListBuilder
:
:
retain_char
FnInStruct
)
]
pub
fn
retain_char
(
&
mut
self
ch
:
char
)
{
self
.
0
.
retain_char
(
ch
)
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
collections
:
:
codepointinvlist
:
:
CodePointInversionListBuilder
:
:
retain_range
FnInStruct
)
]
pub
fn
retain_inclusive_range
(
&
mut
self
start
:
char
end
:
char
)
{
self
.
0
.
retain_range
(
&
(
start
.
.
=
end
)
)
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
collections
:
:
codepointinvlist
:
:
CodePointInversionListBuilder
:
:
retain_set
FnInStruct
)
]
pub
fn
retain_set
(
&
mut
self
data
:
&
ICU4XCodePointSetData
)
{
let
list
=
data
.
0
.
to_code_point_inversion_list
(
)
;
self
.
0
.
retain_set
(
&
list
)
;
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
collections
:
:
codepointinvlist
:
:
CodePointInversionListBuilder
:
:
complement_char
FnInStruct
)
]
pub
fn
complement_char
(
&
mut
self
ch
:
char
)
{
self
.
0
.
complement_char
(
ch
)
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
collections
:
:
codepointinvlist
:
:
CodePointInversionListBuilder
:
:
complement_range
FnInStruct
)
]
pub
fn
complement_inclusive_range
(
&
mut
self
start
:
char
end
:
char
)
{
self
.
0
.
complement_range
(
&
(
start
.
.
=
end
)
)
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
collections
:
:
codepointinvlist
:
:
CodePointInversionListBuilder
:
:
complement_set
FnInStruct
)
]
pub
fn
complement_set
(
&
mut
self
data
:
&
ICU4XCodePointSetData
)
{
let
list
=
data
.
0
.
to_code_point_inversion_list
(
)
;
self
.
0
.
complement_set
(
&
list
)
;
}
}
}
