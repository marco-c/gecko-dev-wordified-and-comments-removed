import
type
{
IsoDate
}
from
"
.
/
IsoDate
"
import
type
{
IsoDateTime
}
from
"
.
/
IsoDateTime
"
import
type
{
Time
}
from
"
.
/
Time
"
import
type
{
TimeZone
}
from
"
.
/
TimeZone
"
import
type
{
TimeZoneVariant
}
from
"
.
/
TimeZoneVariant
"
import
type
{
UtcOffset
}
from
"
.
/
UtcOffset
"
import
type
{
VariantOffsetsCalculator
}
from
"
.
/
VariantOffsetsCalculator
"
import
type
{
pointer
codepoint
}
from
"
.
/
diplomat
-
runtime
.
d
.
ts
"
;
export
class
TimeZoneInfo
{
get
ffiValue
(
)
:
pointer
;
static
utc
(
)
:
TimeZoneInfo
;
id
(
)
:
TimeZone
;
atDateTimeIso
(
date
:
IsoDate
time
:
Time
)
:
TimeZoneInfo
;
zoneNameDateTime
(
)
:
IsoDateTime
|
null
;
withVariant
(
timeVariant
:
TimeZoneVariant
)
:
TimeZoneInfo
;
inferVariant
(
offsetCalculator
:
VariantOffsetsCalculator
)
:
boolean
;
variant
(
)
:
TimeZoneVariant
|
null
;
constructor
(
id
:
TimeZone
offset
:
UtcOffset
|
null
variant
:
TimeZoneVariant
|
null
)
;
}
