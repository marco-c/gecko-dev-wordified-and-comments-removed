import
type
{
DataProvider
}
from
"
.
/
DataProvider
"
import
type
{
DateTimeAlignment
}
from
"
.
/
DateTimeAlignment
"
import
type
{
DateTimeFormatterLoadError
}
from
"
.
/
DateTimeFormatterLoadError
"
import
type
{
DateTimeLength
}
from
"
.
/
DateTimeLength
"
import
type
{
Locale
}
from
"
.
/
Locale
"
import
type
{
Time
}
from
"
.
/
Time
"
import
type
{
TimePrecision
}
from
"
.
/
TimePrecision
"
import
type
{
pointer
codepoint
}
from
"
.
/
diplomat
-
runtime
.
d
.
ts
"
;
export
class
TimeFormatter
{
get
ffiValue
(
)
:
pointer
;
static
createWithProvider
(
provider
:
DataProvider
locale
:
Locale
length
:
DateTimeLength
|
null
timePrecision
:
TimePrecision
|
null
alignment
:
DateTimeAlignment
|
null
)
:
TimeFormatter
;
format
(
time
:
Time
)
:
string
;
constructor
(
locale
:
Locale
length
:
DateTimeLength
|
null
timePrecision
:
TimePrecision
|
null
alignment
:
DateTimeAlignment
|
null
)
;
}
