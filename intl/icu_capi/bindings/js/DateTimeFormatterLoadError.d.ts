import
type
{
pointer
codepoint
}
from
"
.
/
diplomat
-
runtime
.
d
.
ts
"
;
export
class
DateTimeFormatterLoadError
{
static
fromValue
(
value
:
DateTimeFormatterLoadError
|
string
)
:
DateTimeFormatterLoadError
;
get
value
(
)
:
string
;
get
ffiValue
(
)
:
number
;
static
Unknown
:
DateTimeFormatterLoadError
;
static
InvalidDateFields
:
DateTimeFormatterLoadError
;
static
UnsupportedLength
:
DateTimeFormatterLoadError
;
static
ConflictingField
:
DateTimeFormatterLoadError
;
static
FormatterTooSpecific
:
DateTimeFormatterLoadError
;
static
DataMarkerNotFound
:
DateTimeFormatterLoadError
;
static
DataIdentifierNotFound
:
DateTimeFormatterLoadError
;
static
DataInvalidRequest
:
DateTimeFormatterLoadError
;
static
DataInconsistentData
:
DateTimeFormatterLoadError
;
static
DataDowncast
:
DateTimeFormatterLoadError
;
static
DataDeserialize
:
DateTimeFormatterLoadError
;
static
DataCustom
:
DateTimeFormatterLoadError
;
static
DataIo
:
DateTimeFormatterLoadError
;
constructor
(
value
:
DateTimeFormatterLoadError
|
string
)
;
}
