#
ifndef
icu4x_CollatorResolvedOptionsV1_HPP
#
define
icu4x_CollatorResolvedOptionsV1_HPP
#
include
"
CollatorResolvedOptionsV1
.
d
.
hpp
"
#
include
<
stdio
.
h
>
#
include
<
stdint
.
h
>
#
include
<
stddef
.
h
>
#
include
<
stdbool
.
h
>
#
include
<
memory
>
#
include
<
functional
>
#
include
<
optional
>
#
include
<
cstdlib
>
#
include
"
.
.
/
diplomat_runtime
.
hpp
"
#
include
"
CollatorAlternateHandling
.
hpp
"
#
include
"
CollatorCaseFirst
.
hpp
"
#
include
"
CollatorCaseLevel
.
hpp
"
#
include
"
CollatorMaxVariable
.
hpp
"
#
include
"
CollatorNumericOrdering
.
hpp
"
#
include
"
CollatorStrength
.
hpp
"
namespace
icu4x
{
namespace
capi
{
extern
"
C
"
{
}
}
}
inline
icu4x
:
:
capi
:
:
CollatorResolvedOptionsV1
icu4x
:
:
CollatorResolvedOptionsV1
:
:
AsFFI
(
)
const
{
return
icu4x
:
:
capi
:
:
CollatorResolvedOptionsV1
{
strength
.
AsFFI
(
)
alternate_handling
.
AsFFI
(
)
case_first
.
AsFFI
(
)
max_variable
.
AsFFI
(
)
case_level
.
AsFFI
(
)
numeric
.
AsFFI
(
)
}
;
}
inline
icu4x
:
:
CollatorResolvedOptionsV1
icu4x
:
:
CollatorResolvedOptionsV1
:
:
FromFFI
(
icu4x
:
:
capi
:
:
CollatorResolvedOptionsV1
c_struct
)
{
return
icu4x
:
:
CollatorResolvedOptionsV1
{
icu4x
:
:
CollatorStrength
:
:
FromFFI
(
c_struct
.
strength
)
icu4x
:
:
CollatorAlternateHandling
:
:
FromFFI
(
c_struct
.
alternate_handling
)
icu4x
:
:
CollatorCaseFirst
:
:
FromFFI
(
c_struct
.
case_first
)
icu4x
:
:
CollatorMaxVariable
:
:
FromFFI
(
c_struct
.
max_variable
)
icu4x
:
:
CollatorCaseLevel
:
:
FromFFI
(
c_struct
.
case_level
)
icu4x
:
:
CollatorNumericOrdering
:
:
FromFFI
(
c_struct
.
numeric
)
}
;
}
#
endif
