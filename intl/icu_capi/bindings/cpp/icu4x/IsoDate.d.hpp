#
ifndef
icu4x_IsoDate_D_HPP
#
define
icu4x_IsoDate_D_HPP
#
include
<
stdio
.
h
>
#
include
<
stdint
.
h
>
#
include
<
stddef
.
h
>
#
include
<
stdbool
.
h
>
#
include
<
memory
>
#
include
<
functional
>
#
include
<
optional
>
#
include
<
cstdlib
>
#
include
"
.
.
/
diplomat_runtime
.
hpp
"
namespace
icu4x
{
namespace
capi
{
struct
Calendar
;
}
class
Calendar
;
namespace
capi
{
struct
Date
;
}
class
Date
;
namespace
capi
{
struct
IsoDate
;
}
class
IsoDate
;
struct
IsoWeekOfYear
;
class
CalendarError
;
class
Rfc9557ParseError
;
class
Weekday
;
}
namespace
icu4x
{
namespace
capi
{
struct
IsoDate
;
}
}
namespace
icu4x
{
class
IsoDate
{
public
:
inline
static
diplomat
:
:
result
<
std
:
:
unique_ptr
<
icu4x
:
:
IsoDate
>
icu4x
:
:
CalendarError
>
create
(
int32_t
year
uint8_t
month
uint8_t
day
)
;
inline
static
std
:
:
unique_ptr
<
icu4x
:
:
IsoDate
>
from_rata_die
(
int64_t
rd
)
;
inline
static
diplomat
:
:
result
<
std
:
:
unique_ptr
<
icu4x
:
:
IsoDate
>
icu4x
:
:
Rfc9557ParseError
>
from_string
(
std
:
:
string_view
v
)
;
inline
std
:
:
unique_ptr
<
icu4x
:
:
Date
>
to_calendar
(
const
icu4x
:
:
Calendar
&
calendar
)
const
;
inline
std
:
:
unique_ptr
<
icu4x
:
:
Date
>
to_any
(
)
const
;
inline
int64_t
to_rata_die
(
)
const
;
inline
uint16_t
day_of_year
(
)
const
;
inline
uint8_t
day_of_month
(
)
const
;
inline
icu4x
:
:
Weekday
day_of_week
(
)
const
;
inline
icu4x
:
:
IsoWeekOfYear
week_of_year
(
)
const
;
inline
uint8_t
month
(
)
const
;
inline
int32_t
year
(
)
const
;
inline
bool
is_in_leap_year
(
)
const
;
inline
uint8_t
months_in_year
(
)
const
;
inline
uint8_t
days_in_month
(
)
const
;
inline
uint16_t
days_in_year
(
)
const
;
inline
const
icu4x
:
:
capi
:
:
IsoDate
*
AsFFI
(
)
const
;
inline
icu4x
:
:
capi
:
:
IsoDate
*
AsFFI
(
)
;
inline
static
const
icu4x
:
:
IsoDate
*
FromFFI
(
const
icu4x
:
:
capi
:
:
IsoDate
*
ptr
)
;
inline
static
icu4x
:
:
IsoDate
*
FromFFI
(
icu4x
:
:
capi
:
:
IsoDate
*
ptr
)
;
inline
static
void
operator
delete
(
void
*
ptr
)
;
private
:
IsoDate
(
)
=
delete
;
IsoDate
(
const
icu4x
:
:
IsoDate
&
)
=
delete
;
IsoDate
(
icu4x
:
:
IsoDate
&
&
)
noexcept
=
delete
;
IsoDate
operator
=
(
const
icu4x
:
:
IsoDate
&
)
=
delete
;
IsoDate
operator
=
(
icu4x
:
:
IsoDate
&
&
)
noexcept
=
delete
;
static
void
operator
delete
[
]
(
void
*
size_t
)
=
delete
;
}
;
}
#
endif
