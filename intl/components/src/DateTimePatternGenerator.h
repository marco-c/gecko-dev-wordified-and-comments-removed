#
ifndef
intl_components_DateTimePatternGenerator_h_
#
define
intl_components_DateTimePatternGenerator_h_
#
include
"
unicode
/
udatpg
.
h
"
#
include
"
mozilla
/
Result
.
h
"
#
include
"
mozilla
/
ResultVariant
.
h
"
#
include
"
mozilla
/
Span
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
mozilla
/
intl
/
ICU4CGlue
.
h
"
namespace
mozilla
:
:
intl
{
class
DateTimePatternGenerator
final
{
public
:
explicit
DateTimePatternGenerator
(
UDateTimePatternGenerator
*
aGenerator
)
:
mGenerator
(
aGenerator
)
{
MOZ_ASSERT
(
mGenerator
)
;
}
;
DateTimePatternGenerator
(
DateTimePatternGenerator
&
&
other
)
noexcept
:
mGenerator
(
other
.
mGenerator
)
{
other
.
mGenerator
=
nullptr
;
}
DateTimePatternGenerator
&
operator
=
(
DateTimePatternGenerator
&
&
other
)
noexcept
{
if
(
this
!
=
&
other
)
{
mGenerator
=
other
.
mGenerator
;
other
.
mGenerator
=
nullptr
;
}
return
*
this
;
}
DateTimePatternGenerator
(
const
DateTimePatternGenerator
&
)
=
delete
;
DateTimePatternGenerator
&
operator
=
(
const
DateTimePatternGenerator
&
)
=
delete
;
~
DateTimePatternGenerator
(
)
;
enum
class
Error
{
InternalError
}
;
static
Result
<
UniquePtr
<
DateTimePatternGenerator
>
Error
>
TryCreate
(
const
char
*
aLocale
)
;
template
<
typename
B
>
ICUResult
GetBestPattern
(
Span
<
const
char16_t
>
aSkeleton
B
&
aBuffer
)
{
return
FillBufferWithICUCall
(
aBuffer
[
&
]
(
UChar
*
target
int32_t
length
UErrorCode
*
status
)
{
return
udatpg_getBestPattern
(
mGenerator
aSkeleton
.
data
(
)
static_cast
<
int32_t
>
(
aSkeleton
.
Length
(
)
)
target
length
status
)
;
}
)
;
}
template
<
typename
B
>
static
ICUResult
GetSkeleton
(
Span
<
const
char16_t
>
aPattern
B
&
aBuffer
)
{
return
FillBufferWithICUCall
(
aBuffer
[
&
]
(
UChar
*
target
int32_t
length
UErrorCode
*
status
)
{
return
udatpg_getSkeleton
(
nullptr
aPattern
.
data
(
)
static_cast
<
int32_t
>
(
aPattern
.
Length
(
)
)
target
length
status
)
;
}
)
;
}
UDateTimePatternGenerator
*
UnsafeGetUDateTimePatternGenerator
(
)
const
{
return
mGenerator
;
}
private
:
UDateTimePatternGenerator
*
mGenerator
=
nullptr
;
}
;
}
#
endif
