#
ifndef
intl_components_BidiEmbeddingLevel_h_
#
define
intl_components_BidiEmbeddingLevel_h_
#
include
<
cstdint
>
namespace
mozilla
:
:
intl
{
enum
class
BidiDirection
:
uint8_t
{
LTR
=
0
RTL
=
1
}
;
class
BidiEmbeddingLevel
{
public
:
explicit
BidiEmbeddingLevel
(
uint8_t
aValue
)
:
mValue
(
aValue
)
{
}
explicit
BidiEmbeddingLevel
(
int
aValue
)
:
mValue
(
static_cast
<
uint8_t
>
(
aValue
)
)
{
}
BidiEmbeddingLevel
(
)
=
default
;
BidiEmbeddingLevel
(
const
BidiEmbeddingLevel
&
other
)
=
default
;
BidiEmbeddingLevel
&
operator
=
(
const
BidiEmbeddingLevel
&
other
)
=
default
;
BidiDirection
Direction
(
)
;
static
BidiEmbeddingLevel
LTR
(
)
;
static
BidiEmbeddingLevel
RTL
(
)
;
static
BidiEmbeddingLevel
DefaultLTR
(
)
;
static
BidiEmbeddingLevel
DefaultRTL
(
)
;
bool
IsDefaultLTR
(
)
const
;
bool
IsDefaultRTL
(
)
const
;
bool
IsLTR
(
)
const
;
bool
IsRTL
(
)
const
;
bool
IsSameDirection
(
BidiEmbeddingLevel
aOther
)
const
;
uint8_t
Value
(
)
const
;
operator
uint8_t
(
)
const
{
return
mValue
;
}
private
:
uint8_t
mValue
=
0
;
}
;
}
#
endif
