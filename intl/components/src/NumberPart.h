#
ifndef
intl_components_NumberPart_h_
#
define
intl_components_NumberPart_h_
#
include
<
cstddef
>
#
include
<
cstdint
>
#
include
"
mozilla
/
Vector
.
h
"
namespace
mozilla
:
:
intl
{
enum
class
NumberPartType
:
int16_t
{
ApproximatelySign
Compact
Currency
Decimal
ExponentInteger
ExponentMinusSign
ExponentSeparator
Fraction
Group
Infinity
Integer
Literal
MinusSign
Nan
Percent
PlusSign
Unit
}
;
enum
class
NumberPartSource
:
int16_t
{
Shared
Start
End
}
;
struct
NumberPart
{
NumberPartType
type
;
NumberPartSource
source
;
size_t
endIndex
;
bool
operator
=
=
(
const
NumberPart
&
rhs
)
const
{
return
type
=
=
rhs
.
type
&
&
source
=
=
rhs
.
source
&
&
endIndex
=
=
rhs
.
endIndex
;
}
bool
operator
!
=
(
const
NumberPart
&
rhs
)
const
{
return
!
(
*
this
=
=
rhs
)
;
}
}
;
using
NumberPartVector
=
mozilla
:
:
Vector
<
NumberPart
8
>
;
}
#
endif
