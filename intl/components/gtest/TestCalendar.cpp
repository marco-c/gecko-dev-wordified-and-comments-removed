#
include
"
gtest
/
gtest
.
h
"
#
include
"
mozilla
/
intl
/
Calendar
.
h
"
#
include
"
mozilla
/
intl
/
DateTimeFormat
.
h
"
#
include
"
mozilla
/
Span
.
h
"
#
include
"
TestBuffer
.
h
"
namespace
mozilla
:
:
intl
{
const
double
CALENDAR_DATE
=
1032800850000
.
0
;
TEST
(
IntlCalendar
GetLegacyKeywordValuesForLocale
)
{
bool
hasGregorian
=
false
;
bool
hasIslamic
=
false
;
auto
gregorian
=
MakeStringSpan
(
"
gregorian
"
)
;
auto
islamic
=
MakeStringSpan
(
"
islamic
"
)
;
auto
keywords
=
Calendar
:
:
GetLegacyKeywordValuesForLocale
(
"
en
-
US
"
)
.
unwrap
(
)
;
for
(
auto
name
:
keywords
)
{
if
(
name
.
unwrap
(
)
=
=
gregorian
)
{
hasGregorian
=
true
;
}
if
(
name
.
unwrap
(
)
=
=
islamic
)
{
hasIslamic
=
true
;
}
}
ASSERT_TRUE
(
hasGregorian
)
;
ASSERT_TRUE
(
hasIslamic
)
;
}
TEST
(
IntlCalendar
GetBcp47KeywordValuesForLocale
)
{
bool
hasGregory
=
false
;
bool
hasIslamic
=
false
;
auto
gregory
=
MakeStringSpan
(
"
gregory
"
)
;
auto
islamic
=
MakeStringSpan
(
"
islamic
"
)
;
auto
keywords
=
Calendar
:
:
GetBcp47KeywordValuesForLocale
(
"
en
-
US
"
)
.
unwrap
(
)
;
for
(
auto
name
:
keywords
)
{
if
(
name
.
unwrap
(
)
=
=
gregory
)
{
hasGregory
=
true
;
}
if
(
name
.
unwrap
(
)
=
=
islamic
)
{
hasIslamic
=
true
;
}
}
ASSERT_TRUE
(
hasGregory
)
;
ASSERT_TRUE
(
hasIslamic
)
;
}
TEST
(
IntlCalendar
GetBcp47KeywordValuesForLocaleCommonlyUsed
)
{
bool
hasGregory
=
false
;
bool
hasIslamic
=
false
;
auto
gregory
=
MakeStringSpan
(
"
gregory
"
)
;
auto
islamic
=
MakeStringSpan
(
"
islamic
"
)
;
auto
keywords
=
Calendar
:
:
GetBcp47KeywordValuesForLocale
(
"
en
-
US
"
Calendar
:
:
CommonlyUsed
:
:
Yes
)
.
unwrap
(
)
;
for
(
auto
name
:
keywords
)
{
if
(
name
.
unwrap
(
)
=
=
gregory
)
{
hasGregory
=
true
;
}
if
(
name
.
unwrap
(
)
=
=
islamic
)
{
hasIslamic
=
true
;
}
}
ASSERT_TRUE
(
hasGregory
)
;
ASSERT_FALSE
(
hasIslamic
)
;
}
TEST
(
IntlCalendar
GetBcp47Type
)
{
auto
calendar
=
Calendar
:
:
TryCreate
(
"
en
-
US
"
Some
(
MakeStringSpan
(
u
"
GMT
+
3
"
)
)
)
.
unwrap
(
)
;
ASSERT_STREQ
(
calendar
-
>
GetBcp47Type
(
)
.
unwrap
(
)
"
gregory
"
)
;
}
TEST
(
IntlCalendar
SetTimeInMs
)
{
auto
calendar
=
Calendar
:
:
TryCreate
(
"
en
-
US
"
Some
(
MakeStringSpan
(
u
"
GMT
+
3
"
)
)
)
.
unwrap
(
)
;
calendar
-
>
SetTimeInMs
(
CALENDAR_DATE
)
.
unwrap
(
)
;
}
TEST
(
IntlCalendar
CloneFrom
)
{
DateTimeFormat
:
:
StyleBag
style
;
style
.
date
=
Some
(
DateTimeFormat
:
:
Style
:
:
Medium
)
;
style
.
time
=
Some
(
DateTimeFormat
:
:
Style
:
:
Medium
)
;
auto
dtFormat
=
DateTimeFormat
:
:
TryCreateFromStyle
(
MakeStringSpan
(
"
en
-
US
"
)
style
nullptr
Some
(
MakeStringSpan
(
u
"
America
/
Chicago
"
)
)
)
.
unwrap
(
)
;
dtFormat
-
>
CloneCalendar
(
CALENDAR_DATE
)
.
unwrap
(
)
;
}
}
