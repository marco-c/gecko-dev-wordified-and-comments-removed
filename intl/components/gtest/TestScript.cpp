#
include
"
gtest
/
gtest
.
h
"
#
include
"
mozilla
/
intl
/
Script
.
h
"
#
include
"
nsUnicodeScriptCodes
.
h
"
namespace
mozilla
:
:
intl
{
TEST
(
IntlScript
GetExtensions
)
{
ScriptExtensionVector
extensions
;
for
(
char32_t
ch
=
0
;
ch
<
0x0041
;
ch
+
+
)
{
ASSERT_TRUE
(
Script
:
:
GetExtensions
(
ch
extensions
)
.
isOk
(
)
)
;
ASSERT_EQ
(
extensions
.
length
(
)
1u
)
;
ASSERT_EQ
(
unicode
:
:
Script
(
extensions
[
0
]
)
unicode
:
:
Script
:
:
COMMON
)
;
}
for
(
char32_t
ch
=
0x300
;
ch
<
0x0341
;
ch
+
+
)
{
ASSERT_TRUE
(
Script
:
:
GetExtensions
(
ch
extensions
)
.
isOk
(
)
)
;
ASSERT_EQ
(
extensions
.
length
(
)
1u
)
;
ASSERT_EQ
(
unicode
:
:
Script
(
extensions
[
0
]
)
unicode
:
:
Script
:
:
INHERITED
)
;
}
ASSERT_TRUE
(
Script
:
:
GetExtensions
(
0x1cf7
extensions
)
.
isOk
(
)
)
;
ASSERT_EQ
(
extensions
.
length
(
)
1u
)
;
ASSERT_EQ
(
unicode
:
:
Script
(
extensions
[
0
]
)
unicode
:
:
Script
:
:
BENGALI
)
;
ASSERT_TRUE
(
Script
:
:
GetExtensions
(
0x063f
extensions
)
.
isOk
(
)
)
;
ASSERT_EQ
(
extensions
.
length
(
)
1u
)
;
ASSERT_EQ
(
unicode
:
:
Script
(
extensions
[
0
]
)
unicode
:
:
Script
:
:
ARABIC
)
;
ASSERT_TRUE
(
Script
:
:
GetExtensions
(
0xff65
extensions
)
.
isOk
(
)
)
;
ASSERT_EQ
(
extensions
.
length
(
)
6u
)
;
ASSERT_EQ
(
unicode
:
:
Script
(
extensions
[
0
]
)
unicode
:
:
Script
:
:
BOPOMOFO
)
;
ASSERT_EQ
(
unicode
:
:
Script
(
extensions
[
1
]
)
unicode
:
:
Script
:
:
HAN
)
;
ASSERT_EQ
(
unicode
:
:
Script
(
extensions
[
2
]
)
unicode
:
:
Script
:
:
HANGUL
)
;
ASSERT_EQ
(
unicode
:
:
Script
(
extensions
[
3
]
)
unicode
:
:
Script
:
:
HIRAGANA
)
;
ASSERT_EQ
(
unicode
:
:
Script
(
extensions
[
4
]
)
unicode
:
:
Script
:
:
KATAKANA
)
;
ASSERT_EQ
(
unicode
:
:
Script
(
extensions
[
5
]
)
unicode
:
:
Script
:
:
YI
)
;
ASSERT_TRUE
(
Script
:
:
GetExtensions
(
0x110000
extensions
)
.
isOk
(
)
)
;
ASSERT_EQ
(
extensions
.
length
(
)
1u
)
;
ASSERT_EQ
(
unicode
:
:
Script
(
extensions
[
0
]
)
unicode
:
:
Script
:
:
UNKNOWN
)
;
}
}
