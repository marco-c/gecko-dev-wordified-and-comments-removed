#
ifndef
nsLanguageAtomService_h_
#
define
nsLanguageAtomService_h_
#
include
"
mozilla
/
NotNull
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
RWLock
.
h
"
#
include
"
mozilla
/
StaticPtr
.
h
"
#
include
"
nsAtomHashKeys
.
h
"
#
include
"
nsTHashMap
.
h
"
namespace
mozilla
{
class
Encoding
;
}
class
nsLanguageAtomService
final
{
using
Encoding
=
mozilla
:
:
Encoding
;
template
<
typename
T
>
using
NotNull
=
mozilla
:
:
NotNull
<
T
>
;
public
:
static
nsLanguageAtomService
*
GetService
(
)
;
static
void
Shutdown
(
)
;
nsStaticAtom
*
LookupLanguage
(
const
nsACString
&
aLanguage
)
;
already_AddRefed
<
nsAtom
>
LookupCharSet
(
NotNull
<
const
Encoding
*
>
aCharSet
)
;
nsAtom
*
GetLocaleLanguage
(
)
;
nsStaticAtom
*
GetLanguageGroup
(
nsAtom
*
aLanguage
)
;
private
:
nsStaticAtom
*
GetUncachedLanguageGroup
(
nsAtom
*
aLanguage
)
const
;
static
mozilla
:
:
StaticAutoPtr
<
nsLanguageAtomService
>
sLangAtomService
;
nsTHashMap
<
RefPtr
<
nsAtom
>
nsStaticAtom
*
>
mLangToGroup
MOZ_GUARDED_BY
(
mLock
)
;
RefPtr
<
nsAtom
>
mLocaleLanguage
MOZ_GUARDED_BY
(
mLock
)
;
mozilla
:
:
RWLock
mLock
{
"
LanguageAtomService
"
}
;
}
;
#
endif
