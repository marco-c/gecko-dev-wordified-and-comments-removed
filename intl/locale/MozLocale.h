#
ifndef
mozilla_intl_MozLocale_h__
#
define
mozilla_intl_MozLocale_h__
#
include
"
nsString
.
h
"
#
include
"
nsTArray
.
h
"
namespace
mozilla
{
namespace
intl
{
class
Locale
{
public
:
explicit
Locale
(
const
nsACString
&
aLocale
)
;
explicit
Locale
(
const
char
*
aLocale
)
:
Locale
(
nsDependentCString
(
aLocale
)
)
{
}
;
const
nsACString
&
GetLanguage
(
)
const
;
const
nsACString
&
GetScript
(
)
const
;
const
nsACString
&
GetRegion
(
)
const
;
const
nsTArray
<
nsCString
>
&
GetVariants
(
)
const
;
bool
IsValid
(
)
;
const
nsCString
AsString
(
)
;
bool
Matches
(
const
Locale
&
aOther
bool
aThisRange
bool
aOtherRange
)
const
;
bool
AddLikelySubtags
(
)
;
void
ClearVariants
(
)
;
void
ClearRegion
(
)
;
bool
operator
=
=
(
const
Locale
&
aOther
)
{
return
mLanguage
.
Equals
(
aOther
.
mLanguage
)
&
&
mScript
.
Equals
(
aOther
.
mScript
)
&
&
mRegion
.
Equals
(
aOther
.
mRegion
)
&
&
mVariants
=
=
aOther
.
mVariants
;
}
private
:
nsAutoCStringN
<
3
>
mLanguage
;
nsAutoCStringN
<
4
>
mScript
;
nsAutoCStringN
<
2
>
mRegion
;
nsTArray
<
nsCString
>
mVariants
;
bool
mIsValid
=
true
;
}
;
}
}
DECLARE_USE_COPY_CONSTRUCTORS
(
mozilla
:
:
intl
:
:
Locale
)
#
endif
