#
ifndef
mozilla_intl_l10n_FluentResource_h
#
define
mozilla_intl_l10n_FluentResource_h
#
include
"
mozilla
/
dom
/
BindingDeclarations
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsWrapperCache
.
h
"
#
include
"
mozilla
/
dom
/
FluentBinding
.
h
"
#
include
"
mozilla
/
intl
/
FluentBindings
.
h
"
namespace
mozilla
{
namespace
intl
{
class
FluentResource
:
public
nsWrapperCache
{
public
:
NS_INLINE_DECL_CYCLE_COLLECTING_NATIVE_REFCOUNTING
(
FluentResource
)
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_NATIVE_CLASS
(
FluentResource
)
explicit
FluentResource
(
nsISupports
*
aParent
const
nsACString
&
aSource
)
;
static
already_AddRefed
<
FluentResource
>
Constructor
(
const
dom
:
:
GlobalObject
&
aGlobal
const
nsACString
&
aSource
)
;
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
nsISupports
*
GetParentObject
(
)
const
{
return
mParent
;
}
const
ffi
:
:
FluentResource
*
Raw
(
)
const
{
return
mRaw
;
}
protected
:
virtual
~
FluentResource
(
)
;
nsCOMPtr
<
nsISupports
>
mParent
;
const
RefPtr
<
const
ffi
:
:
FluentResource
>
mRaw
;
bool
mHasErrors
;
}
;
}
}
#
endif
