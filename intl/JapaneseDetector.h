#
ifndef
mozilla_JapaneseDetector_h
#
define
mozilla_JapaneseDetector_h
#
include
"
mozilla
/
Encoding
.
h
"
namespace
mozilla
{
class
JapaneseDetector
;
}
;
#
define
SHIFT_OR_EUC_DETECTOR
mozilla
:
:
JapaneseDetector
#
include
"
shift_or_euc
.
h
"
namespace
mozilla
{
class
JapaneseDetector
final
{
public
:
~
JapaneseDetector
(
)
{
}
static
void
operator
delete
(
void
*
aDetector
)
{
shift_or_euc_detector_free
(
reinterpret_cast
<
JapaneseDetector
*
>
(
aDetector
)
)
;
}
static
inline
UniquePtr
<
JapaneseDetector
>
Create
(
bool
aAllow2022
)
{
UniquePtr
<
JapaneseDetector
>
detector
(
shift_or_euc_detector_new
(
aAllow2022
)
)
;
return
detector
;
}
inline
const
mozilla
:
:
Encoding
*
Feed
(
Span
<
const
uint8_t
>
aBuffer
bool
aLast
)
{
return
shift_or_euc_detector_feed
(
this
aBuffer
.
Elements
(
)
aBuffer
.
Length
(
)
aLast
)
;
}
private
:
JapaneseDetector
(
)
=
delete
;
JapaneseDetector
(
const
JapaneseDetector
&
)
=
delete
;
JapaneseDetector
&
operator
=
(
const
JapaneseDetector
&
)
=
delete
;
}
;
}
;
#
endif
