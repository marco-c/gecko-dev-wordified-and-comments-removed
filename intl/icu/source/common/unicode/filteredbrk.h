#
ifndef
FILTEREDBRK_H
#
define
FILTEREDBRK_H
#
include
"
unicode
/
utypes
.
h
"
#
include
"
unicode
/
brkiter
.
h
"
#
if
!
UCONFIG_NO_BREAK_ITERATION
&
&
!
UCONFIG_NO_FILTERED_BREAK_ITERATION
U_NAMESPACE_BEGIN
class
U_COMMON_API
FilteredBreakIteratorBuilder
:
public
UObject
{
public
:
virtual
~
FilteredBreakIteratorBuilder
(
)
;
static
FilteredBreakIteratorBuilder
*
createInstance
(
const
Locale
&
where
UErrorCode
&
status
)
;
#
ifndef
U_HIDE_DEPRECATED_API
static
inline
FilteredBreakIteratorBuilder
*
createInstance
(
UErrorCode
&
status
)
{
return
createEmptyInstance
(
status
)
;
}
#
endif
#
ifndef
U_HIDE_DRAFT_API
static
FilteredBreakIteratorBuilder
*
createEmptyInstance
(
UErrorCode
&
status
)
;
#
endif
virtual
UBool
suppressBreakAfter
(
const
UnicodeString
&
string
UErrorCode
&
status
)
=
0
;
virtual
UBool
unsuppressBreakAfter
(
const
UnicodeString
&
string
UErrorCode
&
status
)
=
0
;
#
ifndef
U_HIDE_DEPRECATED_API
virtual
BreakIterator
*
build
(
BreakIterator
*
adoptBreakIterator
UErrorCode
&
status
)
=
0
;
#
endif
#
ifndef
U_HIDE_DRAFT_API
inline
BreakIterator
*
wrapIteratorWithFilter
(
BreakIterator
*
adoptBreakIterator
UErrorCode
&
status
)
{
return
build
(
adoptBreakIterator
status
)
;
}
#
endif
protected
:
FilteredBreakIteratorBuilder
(
)
;
}
;
U_NAMESPACE_END
#
endif
#
endif
