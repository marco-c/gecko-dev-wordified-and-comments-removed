#
ifndef
__UCHARSTRIEBUILDER_H__
#
define
__UCHARSTRIEBUILDER_H__
#
include
"
unicode
/
utypes
.
h
"
#
if
U_SHOW_CPLUSPLUS_API
#
include
"
unicode
/
stringtriebuilder
.
h
"
#
include
"
unicode
/
ucharstrie
.
h
"
#
include
"
unicode
/
unistr
.
h
"
U_NAMESPACE_BEGIN
class
UCharsTrieElement
;
class
U_COMMON_API
UCharsTrieBuilder
:
public
StringTrieBuilder
{
public
:
UCharsTrieBuilder
(
UErrorCode
&
errorCode
)
;
virtual
~
UCharsTrieBuilder
(
)
;
UCharsTrieBuilder
&
add
(
const
UnicodeString
&
s
int32_t
value
UErrorCode
&
errorCode
)
;
UCharsTrie
*
build
(
UStringTrieBuildOption
buildOption
UErrorCode
&
errorCode
)
;
UnicodeString
&
buildUnicodeString
(
UStringTrieBuildOption
buildOption
UnicodeString
&
result
UErrorCode
&
errorCode
)
;
UCharsTrieBuilder
&
clear
(
)
{
strings
.
remove
(
)
;
elementsLength
=
0
;
ucharsLength
=
0
;
return
*
this
;
}
private
:
UCharsTrieBuilder
(
const
UCharsTrieBuilder
&
other
)
=
delete
;
UCharsTrieBuilder
&
operator
=
(
const
UCharsTrieBuilder
&
other
)
=
delete
;
void
buildUChars
(
UStringTrieBuildOption
buildOption
UErrorCode
&
errorCode
)
;
virtual
int32_t
getElementStringLength
(
int32_t
i
)
const
override
;
virtual
char16_t
getElementUnit
(
int32_t
i
int32_t
unitIndex
)
const
override
;
virtual
int32_t
getElementValue
(
int32_t
i
)
const
override
;
virtual
int32_t
getLimitOfLinearMatch
(
int32_t
first
int32_t
last
int32_t
unitIndex
)
const
override
;
virtual
int32_t
countElementUnits
(
int32_t
start
int32_t
limit
int32_t
unitIndex
)
const
override
;
virtual
int32_t
skipElementsBySomeUnits
(
int32_t
i
int32_t
unitIndex
int32_t
count
)
const
override
;
virtual
int32_t
indexOfElementWithNextUnit
(
int32_t
i
int32_t
unitIndex
char16_t
unit
)
const
override
;
virtual
UBool
matchNodesCanHaveValues
(
)
const
override
{
return
true
;
}
virtual
int32_t
getMaxBranchLinearSubNodeLength
(
)
const
override
{
return
UCharsTrie
:
:
kMaxBranchLinearSubNodeLength
;
}
virtual
int32_t
getMinLinearMatch
(
)
const
override
{
return
UCharsTrie
:
:
kMinLinearMatch
;
}
virtual
int32_t
getMaxLinearMatchLength
(
)
const
override
{
return
UCharsTrie
:
:
kMaxLinearMatchLength
;
}
class
UCTLinearMatchNode
:
public
LinearMatchNode
{
public
:
UCTLinearMatchNode
(
const
char16_t
*
units
int32_t
len
Node
*
nextNode
)
;
virtual
bool
operator
=
=
(
const
Node
&
other
)
const
override
;
virtual
void
write
(
StringTrieBuilder
&
builder
)
override
;
private
:
const
char16_t
*
s
;
}
;
virtual
Node
*
createLinearMatchNode
(
int32_t
i
int32_t
unitIndex
int32_t
length
Node
*
nextNode
)
const
override
;
UBool
ensureCapacity
(
int32_t
length
)
;
virtual
int32_t
write
(
int32_t
unit
)
override
;
int32_t
write
(
const
char16_t
*
s
int32_t
length
)
;
virtual
int32_t
writeElementUnits
(
int32_t
i
int32_t
unitIndex
int32_t
length
)
override
;
virtual
int32_t
writeValueAndFinal
(
int32_t
i
UBool
isFinal
)
override
;
virtual
int32_t
writeValueAndType
(
UBool
hasValue
int32_t
value
int32_t
node
)
override
;
virtual
int32_t
writeDeltaTo
(
int32_t
jumpTarget
)
override
;
UnicodeString
strings
;
UCharsTrieElement
*
elements
;
int32_t
elementsCapacity
;
int32_t
elementsLength
;
char16_t
*
uchars
;
int32_t
ucharsCapacity
;
int32_t
ucharsLength
;
}
;
U_NAMESPACE_END
#
endif
#
endif
