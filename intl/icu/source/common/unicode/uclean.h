#
ifndef
__UCLEAN_H__
#
define
__UCLEAN_H__
#
include
"
unicode
/
utypes
.
h
"
U_STABLE
void
U_EXPORT2
u_init
(
UErrorCode
*
status
)
;
#
ifndef
U_HIDE_SYSTEM_API
U_STABLE
void
U_EXPORT2
u_cleanup
(
void
)
;
U_CDECL_BEGIN
typedef
void
*
U_CALLCONV
UMemAllocFn
(
const
void
*
context
size_t
size
)
;
typedef
void
*
U_CALLCONV
UMemReallocFn
(
const
void
*
context
void
*
mem
size_t
size
)
;
typedef
void
U_CALLCONV
UMemFreeFn
(
const
void
*
context
void
*
mem
)
;
#
ifndef
_MSC_VER
U_STABLE
void
U_EXPORT2
u_setMemoryFunctions
(
const
void
*
context
UMemAllocFn
*
U_CALLCONV
a
UMemReallocFn
*
U_CALLCONV
r
UMemFreeFn
*
U_CALLCONV
f
UErrorCode
*
status
)
;
#
else
U_STABLE
void
U_EXPORT2
u_setMemoryFunctions
(
const
void
*
context
UMemAllocFn
*
a
UMemReallocFn
*
r
UMemFreeFn
*
f
UErrorCode
*
status
)
;
#
endif
U_CDECL_END
#
ifndef
U_HIDE_DEPRECATED_API
typedef
void
*
UMTX
;
U_CDECL_BEGIN
typedef
void
U_CALLCONV
UMtxInitFn
(
const
void
*
context
UMTX
*
mutex
UErrorCode
*
status
)
;
typedef
void
U_CALLCONV
UMtxFn
(
const
void
*
context
UMTX
*
mutex
)
;
U_CDECL_END
U_DEPRECATED
void
U_EXPORT2
u_setMutexFunctions
(
const
void
*
context
UMtxInitFn
*
init
UMtxFn
*
destroy
UMtxFn
*
lock
UMtxFn
*
unlock
UErrorCode
*
status
)
;
typedef
int32_t
U_CALLCONV
UMtxAtomicFn
(
const
void
*
context
int32_t
*
p
)
;
U_DEPRECATED
void
U_EXPORT2
u_setAtomicIncDecFunctions
(
const
void
*
context
UMtxAtomicFn
*
inc
UMtxAtomicFn
*
dec
UErrorCode
*
status
)
;
#
endif
#
endif
#
endif
