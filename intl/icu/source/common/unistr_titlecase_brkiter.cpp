#
include
"
unicode
/
utypes
.
h
"
#
if
!
UCONFIG_NO_BREAK_ITERATION
#
include
"
unicode
/
brkiter
.
h
"
#
include
"
unicode
/
locid
.
h
"
#
include
"
unicode
/
ucasemap
.
h
"
#
include
"
unicode
/
unistr
.
h
"
#
include
"
ucasemap_imp
.
h
"
U_NAMESPACE_BEGIN
UnicodeString
&
UnicodeString
:
:
toTitle
(
BreakIterator
*
titleIter
)
{
return
toTitle
(
titleIter
Locale
:
:
getDefault
(
)
0
)
;
}
UnicodeString
&
UnicodeString
:
:
toTitle
(
BreakIterator
*
titleIter
const
Locale
&
locale
)
{
return
toTitle
(
titleIter
locale
0
)
;
}
UnicodeString
&
UnicodeString
:
:
toTitle
(
BreakIterator
*
titleIter
const
Locale
&
locale
uint32_t
options
)
{
BreakIterator
*
bi
=
titleIter
;
if
(
bi
=
=
NULL
)
{
UErrorCode
errorCode
=
U_ZERO_ERROR
;
bi
=
BreakIterator
:
:
createWordInstance
(
locale
errorCode
)
;
if
(
U_FAILURE
(
errorCode
)
)
{
setToBogus
(
)
;
return
*
this
;
}
}
UnicodeString
copyOfInput
(
*
this
)
;
bi
-
>
setText
(
copyOfInput
)
;
caseMap
(
ustrcase_getCaseLocale
(
locale
.
getBaseName
(
)
)
options
bi
ustrcase_internalToTitle
)
;
if
(
titleIter
=
=
NULL
)
{
delete
bi
;
}
return
*
this
;
}
U_NAMESPACE_END
#
endif
