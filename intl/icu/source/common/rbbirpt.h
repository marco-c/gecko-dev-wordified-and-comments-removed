#
ifndef
RBBIRPT_H
#
define
RBBIRPT_H
#
include
"
unicode
/
utypes
.
h
"
U_NAMESPACE_BEGIN
static
const
uint8_t
kRuleSet_digit_char
=
128
;
static
const
uint8_t
kRuleSet_name_char
=
129
;
static
const
uint8_t
kRuleSet_name_start_char
=
130
;
static
const
uint8_t
kRuleSet_rule_char
=
131
;
static
const
uint8_t
kRuleSet_white_space
=
132
;
enum
RBBI_RuleParseAction
{
doCheckVarDef
doDotAny
doEndAssign
doEndOfRule
doEndVariableName
doExit
doExprCatOperator
doExprFinished
doExprOrOperator
doExprRParen
doExprStart
doLParen
doNOP
doNoChain
doOptionEnd
doOptionStart
doReverseDir
doRuleChar
doRuleError
doRuleErrorAssignExpr
doScanUnicodeSet
doSlash
doStartAssign
doStartTagValue
doStartVariableName
doTagDigit
doTagExpectedError
doTagValue
doUnaryOpPlus
doUnaryOpQuestion
doUnaryOpStar
doVariableNameExpectedErr
rbbiLastAction
}
;
struct
RBBIRuleTableEl
{
RBBI_RuleParseAction
fAction
;
uint8_t
fCharClass
;
uint8_t
fNextState
;
uint8_t
fPushState
;
UBool
fNextChar
;
}
;
static
const
struct
RBBIRuleTableEl
gRuleParseStateTable
[
]
=
{
{
doNOP
0
0
0
true
}
{
doExprStart
254
29
9
false
}
{
doNOP
132
1
0
true
}
{
doNoChain
94
12
9
true
}
{
doExprStart
36
88
98
false
}
{
doNOP
33
19
0
true
}
{
doNOP
59
1
0
true
}
{
doNOP
252
0
0
false
}
{
doExprStart
255
29
9
false
}
{
doEndOfRule
59
1
0
true
}
{
doNOP
132
9
0
true
}
{
doRuleError
255
103
0
false
}
{
doExprStart
254
29
0
false
}
{
doNOP
132
12
0
true
}
{
doRuleError
94
103
0
false
}
{
doExprStart
36
88
37
false
}
{
doRuleError
59
103
0
false
}
{
doRuleError
252
103
0
false
}
{
doExprStart
255
29
0
false
}
{
doNOP
33
21
0
true
}
{
doReverseDir
255
28
9
false
}
{
doOptionStart
130
23
0
true
}
{
doRuleError
255
103
0
false
}
{
doNOP
129
23
0
true
}
{
doOptionEnd
255
25
0
false
}
{
doNOP
59
1
0
true
}
{
doNOP
132
25
0
true
}
{
doRuleError
255
103
0
false
}
{
doExprStart
255
29
9
false
}
{
doRuleChar
254
38
0
true
}
{
doNOP
132
29
0
true
}
{
doRuleChar
131
38
0
true
}
{
doNOP
91
94
38
false
}
{
doLParen
40
29
38
true
}
{
doNOP
36
88
37
false
}
{
doDotAny
46
38
0
true
}
{
doRuleError
255
103
0
false
}
{
doCheckVarDef
255
38
0
false
}
{
doNOP
132
38
0
true
}
{
doUnaryOpStar
42
43
0
true
}
{
doUnaryOpPlus
43
43
0
true
}
{
doUnaryOpQuestion
63
43
0
true
}
{
doNOP
255
43
0
false
}
{
doExprCatOperator
254
29
0
false
}
{
doNOP
132
43
0
true
}
{
doExprCatOperator
131
29
0
false
}
{
doExprCatOperator
91
29
0
false
}
{
doExprCatOperator
40
29
0
false
}
{
doExprCatOperator
36
29
0
false
}
{
doExprCatOperator
46
29
0
false
}
{
doExprCatOperator
47
55
0
false
}
{
doExprCatOperator
123
67
0
true
}
{
doExprOrOperator
124
29
0
true
}
{
doExprRParen
41
255
0
true
}
{
doExprFinished
255
255
0
false
}
{
doSlash
47
57
0
true
}
{
doNOP
255
103
0
false
}
{
doExprCatOperator
254
29
0
false
}
{
doNOP
132
43
0
true
}
{
doExprCatOperator
131
29
0
false
}
{
doExprCatOperator
91
29
0
false
}
{
doExprCatOperator
40
29
0
false
}
{
doExprCatOperator
36
29
0
false
}
{
doExprCatOperator
46
29
0
false
}
{
doExprOrOperator
124
29
0
true
}
{
doExprRParen
41
255
0
true
}
{
doExprFinished
255
255
0
false
}
{
doNOP
132
67
0
true
}
{
doStartTagValue
128
70
0
false
}
{
doTagExpectedError
255
103
0
false
}
{
doNOP
132
74
0
true
}
{
doNOP
125
74
0
false
}
{
doTagDigit
128
70
0
true
}
{
doTagExpectedError
255
103
0
false
}
{
doNOP
132
74
0
true
}
{
doTagValue
125
77
0
true
}
{
doTagExpectedError
255
103
0
false
}
{
doExprCatOperator
254
29
0
false
}
{
doNOP
132
77
0
true
}
{
doExprCatOperator
131
29
0
false
}
{
doExprCatOperator
91
29
0
false
}
{
doExprCatOperator
40
29
0
false
}
{
doExprCatOperator
36
29
0
false
}
{
doExprCatOperator
46
29
0
false
}
{
doExprCatOperator
47
55
0
false
}
{
doExprOrOperator
124
29
0
true
}
{
doExprRParen
41
255
0
true
}
{
doExprFinished
255
255
0
false
}
{
doStartVariableName
36
90
0
true
}
{
doNOP
255
103
0
false
}
{
doNOP
130
92
0
true
}
{
doVariableNameExpectedErr
255
103
0
false
}
{
doNOP
129
92
0
true
}
{
doEndVariableName
255
255
0
false
}
{
doScanUnicodeSet
91
255
0
true
}
{
doScanUnicodeSet
112
255
0
true
}
{
doScanUnicodeSet
80
255
0
true
}
{
doNOP
255
103
0
false
}
{
doNOP
132
98
0
true
}
{
doStartAssign
61
29
101
true
}
{
doNOP
255
37
9
false
}
{
doEndAssign
59
1
0
true
}
{
doRuleErrorAssignExpr
255
103
0
false
}
{
doExit
255
103
0
true
}
}
;
#
ifdef
RBBI_DEBUG
static
const
char
*
const
RBBIRuleStateNames
[
]
=
{
0
"
start
"
0
0
0
0
0
0
0
"
break
-
rule
-
end
"
0
0
"
start
-
after
-
caret
"
0
0
0
0
0
0
"
rev
-
option
"
0
"
option
-
scan1
"
0
"
option
-
scan2
"
0
"
option
-
scan3
"
0
0
"
reverse
-
rule
"
"
term
"
0
0
0
0
0
0
0
"
term
-
var
-
ref
"
"
expr
-
mod
"
0
0
0
0
"
expr
-
cont
"
0
0
0
0
0
0
0
0
0
0
0
"
look
-
ahead
"
0
"
expr
-
cont
-
no
-
slash
"
0
0
0
0
0
0
0
0
0
"
tag
-
open
"
0
0
"
tag
-
value
"
0
0
0
"
tag
-
close
"
0
0
"
expr
-
cont
-
no
-
tag
"
0
0
0
0
0
0
0
0
0
0
"
scan
-
var
-
name
"
0
"
scan
-
var
-
start
"
0
"
scan
-
var
-
body
"
0
"
scan
-
unicode
-
set
"
0
0
0
"
assign
-
or
-
rule
"
0
0
"
assign
-
end
"
0
"
errorDeath
"
0
}
;
#
endif
U_NAMESPACE_END
#
endif
