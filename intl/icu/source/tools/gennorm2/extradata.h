#
ifndef
__EXTRADATA_H__
#
define
__EXTRADATA_H__
#
include
"
unicode
/
utypes
.
h
"
#
if
!
UCONFIG_NO_NORMALIZATION
#
include
"
unicode
/
errorcode
.
h
"
#
include
"
unicode
/
unistr
.
h
"
#
include
"
unicode
/
utf16
.
h
"
#
include
"
hash
.
h
"
#
include
"
norms
.
h
"
#
include
"
toolutil
.
h
"
#
include
"
utrie2
.
h
"
#
include
"
uvectr32
.
h
"
U_NAMESPACE_BEGIN
class
ExtraData
:
public
Norms
:
:
Enumerator
{
public
:
ExtraData
(
Norms
&
n
UBool
fast
)
;
void
rangeHandler
(
UChar32
start
UChar32
end
Norm
&
norm
)
override
;
UnicodeString
maybeNoMappingsOnly
;
UnicodeString
maybeNoMappingsAndCompositions
;
UnicodeString
maybeYesCompositions
;
UnicodeString
yesYesCompositions
;
UnicodeString
yesNoMappingsAndCompositions
;
UnicodeString
yesNoMappingsOnly
;
UnicodeString
noNoMappingsCompYes
;
UnicodeString
noNoMappingsCompBoundaryBefore
;
UnicodeString
noNoMappingsCompNoMaybeCC
;
UnicodeString
noNoMappingsEmpty
;
private
:
int32_t
writeMapping
(
UChar32
c
const
Norm
&
norm
UnicodeString
&
dataString
)
;
int32_t
writeNoNoMapping
(
UChar32
c
const
Norm
&
norm
UnicodeString
&
dataString
Hashtable
&
previousMappings
)
;
UBool
setNoNoDelta
(
UChar32
c
Norm
&
norm
)
const
;
void
writeCompositions
(
UChar32
c
const
Norm
&
norm
UnicodeString
&
dataString
)
;
void
writeExtraData
(
UChar32
c
Norm
&
norm
)
;
UBool
optimizeFast
;
Hashtable
previousNoNoMappingsCompYes
;
Hashtable
previousNoNoMappingsCompBoundaryBefore
;
Hashtable
previousNoNoMappingsCompNoMaybeCC
;
Hashtable
previousNoNoMappingsEmpty
;
}
;
U_NAMESPACE_END
#
endif
#
endif
