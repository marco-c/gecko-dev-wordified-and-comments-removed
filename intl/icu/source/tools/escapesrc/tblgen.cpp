#
include
"
unicode
/
utypes
.
h
"
#
include
"
unicode
/
ucnv
.
h
"
#
include
"
unicode
/
uniset
.
h
"
#
include
<
stdio
.
h
>
static
const
char
*
kConverter
=
"
ibm
-
1047
"
;
int
main
(
int
argc
const
char
*
argv
[
]
)
{
printf
(
"
/
/
%
s
\
n
"
U_COPYRIGHT_STRING
)
;
printf
(
"
/
/
generated
by
tblgen
.
You
weren
'
t
going
to
edit
it
by
hand
were
you
?
\
n
"
)
;
printf
(
"
\
n
"
)
;
UErrorCode
status
=
U_ZERO_ERROR
;
LocalUConverterPointer
cnv
(
ucnv_open
(
kConverter
&
status
)
)
;
if
(
U_FAILURE
(
status
)
)
{
fprintf
(
stderr
"
Failed
to
open
%
s
:
%
s
\
n
"
kConverter
u_errorName
(
status
)
)
;
return
1
;
}
printf
(
"
static
const
char
cp1047_8859_1
[
256
]
=
{
\
n
"
)
;
for
(
int
i
=
0x00
;
i
<
0x100
;
i
+
+
)
{
char
cp1047
[
1
]
;
cp1047
[
0
]
=
i
;
char16_t
u
[
1
]
;
char16_t
*
target
=
u
;
const
char
*
source
=
cp1047
;
ucnv_toUnicode
(
cnv
.
getAlias
(
)
&
target
u
+
1
&
source
cp1047
+
1
nullptr
true
&
status
)
;
if
(
U_FAILURE
(
status
)
)
{
fprintf
(
stderr
"
Conversion
failure
at
#
%
X
:
%
s
\
n
"
i
u_errorName
(
status
)
)
;
return
2
;
}
printf
(
"
(
char
)
0x
%
02X
/
*
%
02X
*
/
\
n
"
u
[
0
]
i
)
;
}
printf
(
"
}
;
\
n
\
n
"
)
;
UnicodeSet
oldIllegal
(
"
[
0
-
9
a
-
z
A
-
Z
"
"
_
\
\
{
\
\
}
\
\
[
\
\
]
#
\
\
(
\
\
)
<
>
%
\
\
:
;
.
"
"
?
*
+
\
\
-
/
\
\
^
\
\
&
|
~
!
=
\
\
\
"
'
]
"
status
)
;
printf
(
"
static
const
bool
oldIllegal
[
256
]
=
{
\
n
"
)
;
for
(
char16_t
i
=
0x00
;
i
<
0x100
;
i
+
+
)
{
printf
(
"
%
s
/
*
U
+
%
04X
*
/
\
n
"
(
oldIllegal
.
contains
(
i
)
)
?
"
true
"
:
"
false
"
i
)
;
}
printf
(
"
}
;
\
n
\
n
"
)
;
return
0
;
}
