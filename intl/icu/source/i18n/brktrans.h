#
ifndef
BRKTRANS_H
#
define
BRKTRANS_H
#
include
"
unicode
/
utypes
.
h
"
#
if
!
UCONFIG_NO_TRANSLITERATION
&
&
!
UCONFIG_NO_BREAK_ITERATION
#
include
"
unicode
/
translit
.
h
"
#
include
"
unicode
/
localpointer
.
h
"
U_NAMESPACE_BEGIN
class
UVector32
;
class
BreakTransliterator
:
public
Transliterator
{
public
:
BreakTransliterator
(
UnicodeFilter
*
adoptedFilter
=
nullptr
)
;
virtual
~
BreakTransliterator
(
)
;
BreakTransliterator
(
const
BreakTransliterator
&
)
;
virtual
BreakTransliterator
*
clone
(
)
const
override
;
virtual
const
UnicodeString
&
getInsertion
(
)
const
;
virtual
void
setInsertion
(
const
UnicodeString
&
insertion
)
;
virtual
UClassID
getDynamicClassID
(
)
const
override
;
U_I18N_API
static
UClassID
U_EXPORT2
getStaticClassID
(
)
;
protected
:
virtual
void
handleTransliterate
(
Replaceable
&
text
UTransPosition
&
offset
UBool
isIncremental
)
const
override
;
private
:
LocalPointer
<
BreakIterator
>
cachedBI
;
LocalPointer
<
UVector32
>
cachedBoundaries
;
UnicodeString
fInsertion
;
static
UnicodeString
replaceableAsString
(
Replaceable
&
r
)
;
BreakTransliterator
&
operator
=
(
const
BreakTransliterator
&
)
;
}
;
U_NAMESPACE_END
#
endif
#
endif
