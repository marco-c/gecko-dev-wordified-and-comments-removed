#
ifndef
FPHDLIMP_H
#
define
FPHDLIMP_H
#
include
"
unicode
/
utypes
.
h
"
#
if
!
UCONFIG_NO_FORMATTING
#
include
"
unicode
/
fieldpos
.
h
"
#
include
"
unicode
/
fpositer
.
h
"
#
include
"
unicode
/
formattedvalue
.
h
"
U_NAMESPACE_BEGIN
class
U_I18N_API
FieldPositionHandler
:
public
UMemory
{
protected
:
int32_t
fShift
=
0
;
public
:
virtual
~
FieldPositionHandler
(
)
;
virtual
void
addAttribute
(
int32_t
id
int32_t
start
int32_t
limit
)
=
0
;
virtual
void
shiftLast
(
int32_t
delta
)
=
0
;
virtual
UBool
isRecording
(
void
)
const
=
0
;
void
setShift
(
int32_t
delta
)
;
}
;
class
FieldPositionOnlyHandler
:
public
FieldPositionHandler
{
FieldPosition
&
pos
;
UBool
acceptFirstOnly
=
false
;
UBool
seenFirst
=
false
;
public
:
FieldPositionOnlyHandler
(
FieldPosition
&
pos
)
;
virtual
~
FieldPositionOnlyHandler
(
)
;
void
addAttribute
(
int32_t
id
int32_t
start
int32_t
limit
)
U_OVERRIDE
;
void
shiftLast
(
int32_t
delta
)
U_OVERRIDE
;
UBool
isRecording
(
void
)
const
U_OVERRIDE
;
void
setAcceptFirstOnly
(
UBool
acceptFirstOnly
)
;
}
;
class
U_I18N_API
FieldPositionIteratorHandler
:
public
FieldPositionHandler
{
FieldPositionIterator
*
iter
;
UVector32
*
vec
;
UErrorCode
status
;
UFieldCategory
fCategory
;
static
void
*
U_EXPORT2
operator
new
(
size_t
)
U_NOEXCEPT
=
delete
;
static
void
*
U_EXPORT2
operator
new
[
]
(
size_t
)
U_NOEXCEPT
=
delete
;
#
if
U_HAVE_PLACEMENT_NEW
static
void
*
U_EXPORT2
operator
new
(
size_t
void
*
)
U_NOEXCEPT
=
delete
;
#
endif
public
:
FieldPositionIteratorHandler
(
FieldPositionIterator
*
posIter
UErrorCode
&
status
)
;
FieldPositionIteratorHandler
(
UVector32
*
vec
UErrorCode
&
status
)
;
~
FieldPositionIteratorHandler
(
)
;
void
addAttribute
(
int32_t
id
int32_t
start
int32_t
limit
)
U_OVERRIDE
;
void
shiftLast
(
int32_t
delta
)
U_OVERRIDE
;
UBool
isRecording
(
void
)
const
U_OVERRIDE
;
inline
void
getError
(
UErrorCode
&
_status
)
{
if
(
U_SUCCESS
(
_status
)
&
&
U_FAILURE
(
status
)
)
{
_status
=
status
;
}
}
inline
void
setCategory
(
UFieldCategory
category
)
{
fCategory
=
category
;
}
}
;
U_NAMESPACE_END
#
endif
#
endif
