#
include
"
unicode
/
utypes
.
h
"
#
if
!
UCONFIG_NO_FORMATTING
#
define
UNISTR_FROM_STRING_EXPLICIT
#
include
"
numparse_types
.
h
"
#
include
"
numparse_validators
.
h
"
#
include
"
static_unicode_sets
.
h
"
using
namespace
icu
;
using
namespace
icu
:
:
numparse
;
using
namespace
icu
:
:
numparse
:
:
impl
;
void
RequireAffixValidator
:
:
postProcess
(
ParsedNumber
&
result
)
const
{
if
(
result
.
prefix
.
isBogus
(
)
|
|
result
.
suffix
.
isBogus
(
)
)
{
result
.
flags
|
=
FLAG_FAIL
;
}
}
UnicodeString
RequireAffixValidator
:
:
toString
(
)
const
{
return
u
"
<
ReqAffix
>
"
;
}
void
RequireCurrencyValidator
:
:
postProcess
(
ParsedNumber
&
result
)
const
{
if
(
result
.
currencyCode
[
0
]
=
=
0
)
{
result
.
flags
|
=
FLAG_FAIL
;
}
}
UnicodeString
RequireCurrencyValidator
:
:
toString
(
)
const
{
return
u
"
<
ReqCurrency
>
"
;
}
RequireDecimalSeparatorValidator
:
:
RequireDecimalSeparatorValidator
(
bool
patternHasDecimalSeparator
)
:
fPatternHasDecimalSeparator
(
patternHasDecimalSeparator
)
{
}
void
RequireDecimalSeparatorValidator
:
:
postProcess
(
ParsedNumber
&
result
)
const
{
bool
parseHasDecimalSeparator
=
0
!
=
(
result
.
flags
&
FLAG_HAS_DECIMAL_SEPARATOR
)
;
if
(
parseHasDecimalSeparator
!
=
fPatternHasDecimalSeparator
)
{
result
.
flags
|
=
FLAG_FAIL
;
}
}
UnicodeString
RequireDecimalSeparatorValidator
:
:
toString
(
)
const
{
return
u
"
<
ReqDecimal
>
"
;
}
void
RequireNumberValidator
:
:
postProcess
(
ParsedNumber
&
result
)
const
{
if
(
!
result
.
seenNumber
(
)
)
{
result
.
flags
|
=
FLAG_FAIL
;
}
}
UnicodeString
RequireNumberValidator
:
:
toString
(
)
const
{
return
u
"
<
ReqNumber
>
"
;
}
MultiplierParseHandler
:
:
MultiplierParseHandler
(
:
:
icu
:
:
number
:
:
Scale
multiplier
)
:
fMultiplier
(
std
:
:
move
(
multiplier
)
)
{
}
void
MultiplierParseHandler
:
:
postProcess
(
ParsedNumber
&
result
)
const
{
if
(
!
result
.
quantity
.
bogus
)
{
fMultiplier
.
applyReciprocalTo
(
result
.
quantity
)
;
}
}
UnicodeString
MultiplierParseHandler
:
:
toString
(
)
const
{
return
u
"
<
Scale
>
"
;
}
#
endif
