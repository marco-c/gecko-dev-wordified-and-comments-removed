#
include
"
unicode
/
utypes
.
h
"
#
if
!
UCONFIG_NO_FORMATTING
#
ifndef
__NUMPARSE_STRINGSEGMENT_H__
#
define
__NUMPARSE_STRINGSEGMENT_H__
#
include
"
unicode
/
unistr
.
h
"
#
include
"
unicode
/
uniset
.
h
"
U_NAMESPACE_BEGIN
class
U_I18N_API
StringSegment
:
public
UMemory
{
public
:
StringSegment
(
const
UnicodeString
&
str
bool
ignoreCase
)
;
int32_t
getOffset
(
)
const
;
void
setOffset
(
int32_t
start
)
;
void
adjustOffset
(
int32_t
delta
)
;
void
adjustOffsetByCodePoint
(
)
;
void
setLength
(
int32_t
length
)
;
void
resetLength
(
)
;
int32_t
length
(
)
const
;
char16_t
charAt
(
int32_t
index
)
const
;
UChar32
codePointAt
(
int32_t
index
)
const
;
UnicodeString
toUnicodeString
(
)
const
;
UnicodeString
toTempUnicodeString
(
)
const
;
UChar32
getCodePoint
(
)
const
;
bool
startsWith
(
UChar32
otherCp
)
const
;
bool
startsWith
(
const
UnicodeSet
&
uniset
)
const
;
bool
startsWith
(
const
UnicodeString
&
other
)
const
;
int32_t
getCommonPrefixLength
(
const
UnicodeString
&
other
)
;
int32_t
getCaseSensitivePrefixLength
(
const
UnicodeString
&
other
)
;
bool
operator
=
=
(
const
UnicodeString
&
other
)
const
;
private
:
const
UnicodeString
&
fStr
;
int32_t
fStart
;
int32_t
fEnd
;
bool
fFoldCase
;
int32_t
getPrefixLengthInternal
(
const
UnicodeString
&
other
bool
foldCase
)
;
static
bool
codePointsEqual
(
UChar32
cp1
UChar32
cp2
bool
foldCase
)
;
}
;
U_NAMESPACE_END
#
endif
#
endif
