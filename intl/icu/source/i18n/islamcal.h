#
ifndef
ISLAMCAL_H
#
define
ISLAMCAL_H
#
include
"
unicode
/
utypes
.
h
"
#
if
!
UCONFIG_NO_FORMATTING
#
include
"
unicode
/
calendar
.
h
"
U_NAMESPACE_BEGIN
class
U_I18N_API
IslamicCalendar
:
public
Calendar
{
public
:
enum
EMonths
{
MUHARRAM
=
0
SAFAR
=
1
RABI_1
=
2
RABI_2
=
3
JUMADA_1
=
4
JUMADA_2
=
5
RAJAB
=
6
SHABAN
=
7
RAMADAN
=
8
SHAWWAL
=
9
DHU_AL_QIDAH
=
10
DHU_AL_HIJJAH
=
11
ISLAMIC_MONTH_MAX
}
;
IslamicCalendar
(
const
Locale
&
aLocale
UErrorCode
&
success
)
;
IslamicCalendar
(
const
IslamicCalendar
&
other
)
=
default
;
virtual
~
IslamicCalendar
(
)
;
virtual
IslamicCalendar
*
clone
(
)
const
override
;
protected
:
static
UBool
civilLeapYear
(
int32_t
year
)
;
virtual
int32_t
yearStart
(
int32_t
year
)
const
;
virtual
int32_t
monthStart
(
int32_t
year
int32_t
month
)
const
;
int32_t
trueMonthStart
(
int32_t
month
)
const
;
private
:
static
double
moonAge
(
UDate
time
UErrorCode
&
status
)
;
protected
:
virtual
int32_t
handleGetLimit
(
UCalendarDateFields
field
ELimitType
limitType
)
const
override
;
virtual
int32_t
handleGetMonthLength
(
int32_t
extendedYear
int32_t
month
)
const
override
;
virtual
int32_t
handleGetYearLength
(
int32_t
extendedYear
)
const
override
;
virtual
int32_t
handleComputeMonthStart
(
int32_t
eyear
int32_t
month
UBool
useMonth
)
const
override
;
virtual
int32_t
handleGetExtendedYear
(
)
override
;
virtual
void
handleComputeFields
(
int32_t
julianDay
UErrorCode
&
status
)
override
;
virtual
int32_t
getEpoc
(
)
const
;
public
:
virtual
UClassID
getDynamicClassID
(
)
const
override
;
static
UClassID
U_EXPORT2
getStaticClassID
(
)
;
virtual
const
char
*
getType
(
)
const
override
;
virtual
int32_t
getRelatedYear
(
UErrorCode
&
status
)
const
override
;
virtual
void
setRelatedYear
(
int32_t
year
)
override
;
virtual
bool
inTemporalLeapYear
(
UErrorCode
&
status
)
const
override
;
private
:
IslamicCalendar
(
)
=
delete
;
protected
:
virtual
UBool
haveDefaultCentury
(
)
const
override
;
virtual
UDate
defaultCenturyStart
(
)
const
override
;
virtual
int32_t
defaultCenturyStartYear
(
)
const
override
;
private
:
static
void
U_CALLCONV
initializeSystemDefaultCentury
(
)
;
}
;
class
U_I18N_API
IslamicCivilCalendar
:
public
IslamicCalendar
{
public
:
IslamicCivilCalendar
(
const
Locale
&
aLocale
UErrorCode
&
success
)
;
IslamicCivilCalendar
(
const
IslamicCivilCalendar
&
other
)
=
default
;
virtual
~
IslamicCivilCalendar
(
)
;
virtual
IslamicCivilCalendar
*
clone
(
)
const
override
;
virtual
UClassID
getDynamicClassID
(
)
const
override
;
static
UClassID
U_EXPORT2
getStaticClassID
(
)
;
virtual
const
char
*
getType
(
)
const
override
;
protected
:
virtual
int32_t
yearStart
(
int32_t
year
)
const
override
;
virtual
int32_t
monthStart
(
int32_t
year
int32_t
month
)
const
override
;
virtual
int32_t
handleGetMonthLength
(
int32_t
extendedYear
int32_t
month
)
const
override
;
virtual
int32_t
handleGetYearLength
(
int32_t
extendedYear
)
const
override
;
virtual
void
handleComputeFields
(
int32_t
julianDay
UErrorCode
&
status
)
override
;
}
;
class
U_I18N_API
IslamicTBLACalendar
:
public
IslamicCivilCalendar
{
public
:
IslamicTBLACalendar
(
const
Locale
&
aLocale
UErrorCode
&
success
)
;
IslamicTBLACalendar
(
const
IslamicTBLACalendar
&
other
)
=
default
;
virtual
~
IslamicTBLACalendar
(
)
;
virtual
UClassID
getDynamicClassID
(
)
const
override
;
static
UClassID
U_EXPORT2
getStaticClassID
(
)
;
virtual
const
char
*
getType
(
)
const
override
;
virtual
IslamicTBLACalendar
*
clone
(
)
const
override
;
protected
:
virtual
int32_t
getEpoc
(
)
const
override
;
}
;
class
U_I18N_API
IslamicUmalquraCalendar
:
public
IslamicCalendar
{
public
:
IslamicUmalquraCalendar
(
const
Locale
&
aLocale
UErrorCode
&
success
)
;
IslamicUmalquraCalendar
(
const
IslamicUmalquraCalendar
&
other
)
=
default
;
virtual
~
IslamicUmalquraCalendar
(
)
;
virtual
UClassID
getDynamicClassID
(
)
const
override
;
static
UClassID
U_EXPORT2
getStaticClassID
(
)
;
virtual
const
char
*
getType
(
)
const
override
;
virtual
IslamicUmalquraCalendar
*
clone
(
)
const
override
;
protected
:
virtual
int32_t
yearStart
(
int32_t
year
)
const
override
;
virtual
int32_t
monthStart
(
int32_t
year
int32_t
month
)
const
override
;
virtual
int32_t
handleGetMonthLength
(
int32_t
extendedYear
int32_t
month
)
const
override
;
virtual
int32_t
handleGetYearLength
(
int32_t
extendedYear
)
const
override
;
virtual
void
handleComputeFields
(
int32_t
julianDay
UErrorCode
&
status
)
override
;
}
;
class
U_I18N_API
IslamicRGSACalendar
:
public
IslamicCalendar
{
public
:
IslamicRGSACalendar
(
const
Locale
&
aLocale
UErrorCode
&
success
)
;
IslamicRGSACalendar
(
const
IslamicRGSACalendar
&
other
)
=
default
;
virtual
~
IslamicRGSACalendar
(
)
;
virtual
UClassID
getDynamicClassID
(
)
const
override
;
static
UClassID
U_EXPORT2
getStaticClassID
(
)
;
virtual
const
char
*
getType
(
)
const
override
;
virtual
IslamicRGSACalendar
*
clone
(
)
const
override
;
}
;
U_NAMESPACE_END
#
endif
#
endif
