#
ifndef
TAIWNCAL_H
#
define
TAIWNCAL_H
#
include
"
unicode
/
utypes
.
h
"
#
if
!
UCONFIG_NO_FORMATTING
#
include
"
unicode
/
calendar
.
h
"
#
include
"
unicode
/
gregocal
.
h
"
U_NAMESPACE_BEGIN
class
TaiwanCalendar
:
public
GregorianCalendar
{
public
:
enum
EEras
{
BEFORE_MINGUO
=
0
MINGUO
=
1
}
;
TaiwanCalendar
(
const
Locale
&
aLocale
UErrorCode
&
success
)
;
virtual
~
TaiwanCalendar
(
)
;
TaiwanCalendar
(
const
TaiwanCalendar
&
source
)
;
virtual
TaiwanCalendar
*
clone
(
)
const
override
;
public
:
virtual
UClassID
getDynamicClassID
(
)
const
override
;
U_I18N_API
static
UClassID
U_EXPORT2
getStaticClassID
(
)
;
virtual
const
char
*
getType
(
)
const
override
;
private
:
TaiwanCalendar
(
)
;
protected
:
virtual
int32_t
handleGetExtendedYear
(
UErrorCode
&
status
)
override
;
virtual
void
handleComputeFields
(
int32_t
julianDay
UErrorCode
&
status
)
override
;
virtual
int32_t
handleGetLimit
(
UCalendarDateFields
field
ELimitType
limitType
)
const
override
;
DECLARE_OVERRIDE_SYSTEM_DEFAULT_CENTURY
}
;
U_NAMESPACE_END
#
endif
#
endif
