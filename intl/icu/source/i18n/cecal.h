#
ifndef
CECAL_H
#
define
CECAL_H
#
include
"
unicode
/
utypes
.
h
"
#
if
!
UCONFIG_NO_FORMATTING
#
include
"
unicode
/
calendar
.
h
"
U_NAMESPACE_BEGIN
class
U_I18N_API
CECalendar
:
public
Calendar
{
public
:
virtual
const
char
*
getTemporalMonthCode
(
UErrorCode
&
status
)
const
override
;
virtual
void
setTemporalMonthCode
(
const
char
*
code
UErrorCode
&
status
)
override
;
protected
:
CECalendar
(
const
Locale
&
aLocale
UErrorCode
&
success
)
;
CECalendar
(
const
CECalendar
&
other
)
;
virtual
~
CECalendar
(
)
;
protected
:
virtual
int64_t
handleComputeMonthStart
(
int32_t
eyear
int32_t
month
UBool
useMonth
UErrorCode
&
status
)
const
override
;
virtual
int32_t
handleGetLimit
(
UCalendarDateFields
field
ELimitType
limitType
)
const
override
;
protected
:
virtual
int32_t
getJDEpochOffset
(
)
const
=
0
;
static
void
jdToCE
(
int32_t
julianDay
int32_t
jdEpochOffset
int32_t
&
year
int32_t
&
month
int32_t
&
day
UErrorCode
&
status
)
;
}
;
U_NAMESPACE_END
#
endif
#
endif
