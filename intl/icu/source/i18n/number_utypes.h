#
include
"
unicode
/
utypes
.
h
"
#
if
!
UCONFIG_NO_FORMATTING
#
ifndef
__SOURCE_NUMBER_UTYPES_H__
#
define
__SOURCE_NUMBER_UTYPES_H__
#
include
"
unicode
/
numberformatter
.
h
"
#
include
"
number_types
.
h
"
#
include
"
number_decimalquantity
.
h
"
#
include
"
number_stringbuilder
.
h
"
U_NAMESPACE_BEGIN
namespace
number
{
namespace
impl
{
struct
UNumberFormatterData
:
public
UMemory
{
static
constexpr
int32_t
kMagic
=
0x4E465200
;
int32_t
fMagic
=
kMagic
;
LocalizedNumberFormatter
fFormatter
;
static
UNumberFormatterData
*
validate
(
UNumberFormatter
*
input
UErrorCode
&
status
)
;
static
const
UNumberFormatterData
*
validate
(
const
UNumberFormatter
*
input
UErrorCode
&
status
)
;
UNumberFormatter
*
exportForC
(
)
;
}
;
struct
UFormattedNumberData
:
public
UMemory
{
static
constexpr
int32_t
kMagic
=
0x46444E00
;
int32_t
fMagic
=
kMagic
;
DecimalQuantity
quantity
;
NumberStringBuilder
string
;
static
UFormattedNumberData
*
validate
(
UFormattedNumber
*
input
UErrorCode
&
status
)
;
static
const
UFormattedNumberData
*
validate
(
const
UFormattedNumber
*
input
UErrorCode
&
status
)
;
UFormattedNumber
*
exportForC
(
)
;
}
;
}
}
U_NAMESPACE_END
#
endif
#
endif
