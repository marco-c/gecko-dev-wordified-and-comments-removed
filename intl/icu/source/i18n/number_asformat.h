#
include
"
unicode
/
utypes
.
h
"
#
if
!
UCONFIG_NO_FORMATTING
#
ifndef
__NUMBER_ASFORMAT_H__
#
define
__NUMBER_ASFORMAT_H__
#
include
"
unicode
/
numberformatter
.
h
"
#
include
"
number_types
.
h
"
#
include
"
number_decimalquantity
.
h
"
#
include
"
number_scientific
.
h
"
#
include
"
number_patternstring
.
h
"
#
include
"
number_modifiers
.
h
"
#
include
"
number_multiplier
.
h
"
#
include
"
number_roundingutils
.
h
"
#
include
"
decNumber
.
h
"
#
include
"
charstr
.
h
"
U_NAMESPACE_BEGIN
namespace
number
:
:
impl
{
class
U_I18N_API
LocalizedNumberFormatterAsFormat
:
public
Format
{
public
:
LocalizedNumberFormatterAsFormat
(
const
LocalizedNumberFormatter
&
formatter
const
Locale
&
locale
)
;
~
LocalizedNumberFormatterAsFormat
(
)
override
;
bool
operator
=
=
(
const
Format
&
other
)
const
override
;
LocalizedNumberFormatterAsFormat
*
clone
(
)
const
override
;
UnicodeString
&
format
(
const
Formattable
&
obj
UnicodeString
&
appendTo
FieldPosition
&
pos
UErrorCode
&
status
)
const
override
;
UnicodeString
&
format
(
const
Formattable
&
obj
UnicodeString
&
appendTo
FieldPositionIterator
*
posIter
UErrorCode
&
status
)
const
override
;
void
parseObject
(
const
UnicodeString
&
source
Formattable
&
result
ParsePosition
&
parse_pos
)
const
override
;
const
LocalizedNumberFormatter
&
getNumberFormatter
(
)
const
;
UClassID
getDynamicClassID
(
)
const
override
;
static
UClassID
U_EXPORT2
getStaticClassID
(
)
;
private
:
LocalizedNumberFormatter
fFormatter
;
Locale
fLocale
;
}
;
}
U_NAMESPACE_END
#
endif
#
endif
