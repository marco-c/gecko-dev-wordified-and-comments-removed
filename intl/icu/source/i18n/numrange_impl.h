#
include
"
unicode
/
utypes
.
h
"
#
if
!
UCONFIG_NO_FORMATTING
#
ifndef
__SOURCE_NUMRANGE_TYPES_H__
#
define
__SOURCE_NUMRANGE_TYPES_H__
#
include
"
unicode
/
numberformatter
.
h
"
#
include
"
unicode
/
numberrangeformatter
.
h
"
#
include
"
unicode
/
simpleformatter
.
h
"
#
include
"
number_types
.
h
"
#
include
"
number_decimalquantity
.
h
"
#
include
"
number_formatimpl
.
h
"
#
include
"
formatted_string_builder
.
h
"
#
include
"
formattedval_impl
.
h
"
#
include
"
pluralranges
.
h
"
U_NAMESPACE_BEGIN
namespace
number
:
:
impl
{
class
UFormattedNumberRangeData
:
public
FormattedValueStringBuilderImpl
{
public
:
UFormattedNumberRangeData
(
)
:
FormattedValueStringBuilderImpl
(
kUndefinedField
)
{
}
virtual
~
UFormattedNumberRangeData
(
)
;
DecimalQuantity
quantity1
;
DecimalQuantity
quantity2
;
UNumberRangeIdentityResult
identityResult
=
UNUM_IDENTITY_RESULT_COUNT
;
}
;
class
NumberRangeFormatterImpl
:
public
UMemory
{
public
:
NumberRangeFormatterImpl
(
const
RangeMacroProps
&
macros
UErrorCode
&
status
)
;
void
format
(
UFormattedNumberRangeData
&
data
bool
equalBeforeRounding
UErrorCode
&
status
)
const
;
private
:
NumberFormatterImpl
formatterImpl1
;
NumberFormatterImpl
formatterImpl2
;
bool
fSameFormatters
;
UNumberRangeCollapse
fCollapse
;
UNumberRangeIdentityFallback
fIdentityFallback
;
SimpleFormatter
fRangeFormatter
;
NumberFormatterImpl
fApproximatelyFormatter
;
StandardPluralRanges
fPluralRanges
;
void
formatSingleValue
(
UFormattedNumberRangeData
&
data
MicroProps
&
micros1
MicroProps
&
micros2
UErrorCode
&
status
)
const
;
void
formatApproximately
(
UFormattedNumberRangeData
&
data
MicroProps
&
micros1
MicroProps
&
micros2
UErrorCode
&
status
)
const
;
void
formatRange
(
UFormattedNumberRangeData
&
data
MicroProps
&
micros1
MicroProps
&
micros2
UErrorCode
&
status
)
const
;
const
Modifier
&
resolveModifierPlurals
(
const
Modifier
&
first
const
Modifier
&
second
)
const
;
}
;
const
UFormattedNumberRangeData
*
validateUFormattedNumberRange
(
const
UFormattedNumberRange
*
uresult
UErrorCode
&
status
)
;
}
U_NAMESPACE_END
#
endif
#
endif
