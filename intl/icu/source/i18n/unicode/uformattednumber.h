#
ifndef
__UFORMATTEDNUMBER_H__
#
define
__UFORMATTEDNUMBER_H__
#
include
"
unicode
/
utypes
.
h
"
#
if
!
UCONFIG_NO_FORMATTING
#
include
"
unicode
/
ufieldpositer
.
h
"
#
include
"
unicode
/
uformattedvalue
.
h
"
#
include
"
unicode
/
umisc
.
h
"
struct
UFormattedNumber
;
typedef
struct
UFormattedNumber
UFormattedNumber
;
U_CAPI
UFormattedNumber
*
U_EXPORT2
unumf_openResult
(
UErrorCode
*
ec
)
;
U_CAPI
const
UFormattedValue
*
U_EXPORT2
unumf_resultAsValue
(
const
UFormattedNumber
*
uresult
UErrorCode
*
ec
)
;
U_CAPI
int32_t
U_EXPORT2
unumf_resultToString
(
const
UFormattedNumber
*
uresult
UChar
*
buffer
int32_t
bufferCapacity
UErrorCode
*
ec
)
;
U_CAPI
UBool
U_EXPORT2
unumf_resultNextFieldPosition
(
const
UFormattedNumber
*
uresult
UFieldPosition
*
ufpos
UErrorCode
*
ec
)
;
U_CAPI
void
U_EXPORT2
unumf_resultGetAllFieldPositions
(
const
UFormattedNumber
*
uresult
UFieldPositionIterator
*
ufpositer
UErrorCode
*
ec
)
;
U_CAPI
int32_t
U_EXPORT2
unumf_resultToDecimalNumber
(
const
UFormattedNumber
*
uresult
char
*
dest
int32_t
destCapacity
UErrorCode
*
ec
)
;
U_CAPI
void
U_EXPORT2
unumf_closeResult
(
UFormattedNumber
*
uresult
)
;
#
if
U_SHOW_CPLUSPLUS_API
U_NAMESPACE_BEGIN
U_DEFINE_LOCAL_OPEN_POINTER
(
LocalUFormattedNumberPointer
UFormattedNumber
unumf_closeResult
)
;
U_NAMESPACE_END
#
endif
#
endif
#
endif
