#
ifndef
PERSNCAL_H
#
define
PERSNCAL_H
#
include
"
unicode
/
utypes
.
h
"
#
if
!
UCONFIG_NO_FORMATTING
#
include
"
unicode
/
calendar
.
h
"
U_NAMESPACE_BEGIN
class
PersianCalendar
:
public
Calendar
{
public
:
enum
EMonths
{
FARVARDIN
=
0
ORDIBEHESHT
=
1
KHORDAD
=
2
TIR
=
3
MORDAD
=
4
SHAHRIVAR
=
5
MEHR
=
6
ABAN
=
7
AZAR
=
8
DEI
=
9
BAHMAN
=
10
ESFAND
=
11
PERSIAN_MONTH_MAX
}
;
PersianCalendar
(
const
Locale
&
aLocale
UErrorCode
&
success
)
;
PersianCalendar
(
const
PersianCalendar
&
other
)
;
virtual
~
PersianCalendar
(
)
;
virtual
PersianCalendar
*
clone
(
)
const
override
;
private
:
static
UBool
isLeapYear
(
int32_t
year
)
;
int32_t
yearStart
(
int32_t
year
)
;
int32_t
monthStart
(
int32_t
year
int32_t
month
)
const
;
protected
:
virtual
int32_t
handleGetLimit
(
UCalendarDateFields
field
ELimitType
limitType
)
const
override
;
virtual
int32_t
handleGetMonthLength
(
int32_t
extendedYear
int32_t
month
)
const
override
;
virtual
int32_t
handleGetYearLength
(
int32_t
extendedYear
)
const
override
;
virtual
int32_t
handleComputeMonthStart
(
int32_t
eyear
int32_t
month
UBool
useMonth
)
const
override
;
virtual
int32_t
handleGetExtendedYear
(
)
override
;
virtual
void
handleComputeFields
(
int32_t
julianDay
UErrorCode
&
status
)
override
;
public
:
virtual
UClassID
getDynamicClassID
(
)
const
override
;
U_I18N_API
static
UClassID
U_EXPORT2
getStaticClassID
(
)
;
virtual
const
char
*
getType
(
)
const
override
;
virtual
int32_t
getRelatedYear
(
UErrorCode
&
status
)
const
override
;
virtual
void
setRelatedYear
(
int32_t
year
)
override
;
private
:
PersianCalendar
(
)
;
protected
:
virtual
UBool
haveDefaultCentury
(
)
const
override
;
virtual
UDate
defaultCenturyStart
(
)
const
override
;
virtual
int32_t
defaultCenturyStartYear
(
)
const
override
;
}
;
U_NAMESPACE_END
#
endif
#
endif
