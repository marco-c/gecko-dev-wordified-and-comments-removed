#
include
"
unicode
/
utypes
.
h
"
#
if
!
UCONFIG_NO_FORMATTING
#
ifndef
__SOURCE_NUMBER_CURRENCYSYMBOLS_H__
#
define
__SOURCE_NUMBER_CURRENCYSYMBOLS_H__
#
include
"
numparse_types
.
h
"
#
include
"
charstr
.
h
"
#
include
"
number_decimfmtprops
.
h
"
U_NAMESPACE_BEGIN
namespace
number
{
namespace
impl
{
class
U_I18N_API
CurrencySymbols
:
public
UMemory
{
public
:
CurrencySymbols
(
)
=
default
;
CurrencySymbols
(
CurrencyUnit
currency
const
Locale
&
locale
UErrorCode
&
status
)
;
CurrencySymbols
(
CurrencyUnit
currency
const
Locale
&
locale
const
DecimalFormatSymbols
&
symbols
UErrorCode
&
status
)
;
const
char16_t
*
getIsoCode
(
)
const
;
UnicodeString
getNarrowCurrencySymbol
(
UErrorCode
&
status
)
const
;
UnicodeString
getCurrencySymbol
(
UErrorCode
&
status
)
const
;
UnicodeString
getIntlCurrencySymbol
(
UErrorCode
&
status
)
const
;
UnicodeString
getPluralName
(
StandardPlural
:
:
Form
plural
UErrorCode
&
status
)
const
;
protected
:
CurrencyUnit
fCurrency
;
CharString
fLocaleName
;
UnicodeString
fCurrencySymbol
;
UnicodeString
fIntlCurrencySymbol
;
UnicodeString
loadSymbol
(
UCurrNameStyle
selector
UErrorCode
&
status
)
const
;
}
;
CurrencyUnit
resolveCurrency
(
const
DecimalFormatProperties
&
properties
const
Locale
&
locale
UErrorCode
&
status
)
;
}
}
U_NAMESPACE_END
#
endif
#
endif
