#
ifndef
__DIGITGROUPING_H__
#
define
__DIGITGROUPING_H__
#
include
"
unicode
/
uobject
.
h
"
#
include
"
unicode
/
utypes
.
h
"
U_NAMESPACE_BEGIN
class
IntDigitCountRange
;
class
U_I18N_API
DigitGrouping
:
public
UMemory
{
public
:
DigitGrouping
(
)
:
fGrouping
(
0
)
fGrouping2
(
0
)
fMinGrouping
(
0
)
{
}
UBool
equals
(
const
DigitGrouping
&
rhs
)
const
{
return
(
(
fGrouping
=
=
rhs
.
fGrouping
)
&
&
(
fGrouping2
=
=
rhs
.
fGrouping2
)
&
&
(
fMinGrouping
=
=
rhs
.
fMinGrouping
)
)
;
}
UBool
isSeparatorAt
(
int32_t
digitsLeftOfDecimal
int32_t
digitPos
)
const
;
int32_t
getSeparatorCount
(
int32_t
digitsLeftOfDecimal
)
const
;
UBool
isGroupingUsed
(
)
const
{
return
fGrouping
>
0
;
}
UBool
isNoGrouping
(
int32_t
positiveValue
const
IntDigitCountRange
&
range
)
const
;
void
clear
(
)
;
public
:
int32_t
fGrouping
;
int32_t
fGrouping2
;
int32_t
fMinGrouping
;
private
:
UBool
isGroupingEnabled
(
int32_t
digitsLeftOfDecimal
)
const
;
int32_t
getGrouping2
(
)
const
;
int32_t
getMinGrouping
(
)
const
;
}
;
U_NAMESPACE_END
#
endif
