#
ifndef
QUANT_H
#
define
QUANT_H
#
include
"
unicode
/
utypes
.
h
"
#
if
!
UCONFIG_NO_TRANSLITERATION
#
include
"
unicode
/
unifunct
.
h
"
#
include
"
unicode
/
unimatch
.
h
"
U_NAMESPACE_BEGIN
class
Quantifier
:
public
UnicodeFunctor
public
UnicodeMatcher
{
public
:
enum
{
MAX
=
0x7FFFFFFF
}
;
Quantifier
(
UnicodeFunctor
*
adoptedMatcher
uint32_t
minCount
uint32_t
maxCount
)
;
Quantifier
(
const
Quantifier
&
o
)
;
virtual
~
Quantifier
(
)
;
virtual
UnicodeMatcher
*
toMatcher
(
)
const
override
;
virtual
Quantifier
*
clone
(
)
const
override
;
virtual
UMatchDegree
matches
(
const
Replaceable
&
text
int32_t
&
offset
int32_t
limit
UBool
incremental
)
override
;
virtual
UnicodeString
&
toPattern
(
UnicodeString
&
result
UBool
escapeUnprintable
=
false
)
const
override
;
virtual
UBool
matchesIndexValue
(
uint8_t
v
)
const
override
;
virtual
void
addMatchSetTo
(
UnicodeSet
&
toUnionTo
)
const
override
;
virtual
void
setData
(
const
TransliterationRuleData
*
)
override
;
virtual
UClassID
getDynamicClassID
(
)
const
override
;
static
UClassID
U_EXPORT2
getStaticClassID
(
)
;
private
:
UnicodeFunctor
*
matcher
;
uint32_t
minCount
;
uint32_t
maxCount
;
}
;
U_NAMESPACE_END
#
endif
#
endif
