#
ifndef
__PLURALRANGES_H__
#
define
__PLURALRANGES_H__
#
include
"
unicode
/
utypes
.
h
"
#
if
!
UCONFIG_NO_FORMATTING
#
include
"
unicode
/
uobject
.
h
"
#
include
"
unicode
/
locid
.
h
"
#
include
"
unicode
/
plurrule
.
h
"
#
include
"
standardplural
.
h
"
#
include
"
cmemory
.
h
"
U_NAMESPACE_BEGIN
namespace
number
:
:
impl
{
class
UFormattedNumberRangeData
;
}
class
StandardPluralRanges
:
public
UMemory
{
public
:
static
StandardPluralRanges
forLocale
(
const
Locale
&
locale
UErrorCode
&
status
)
;
StandardPluralRanges
copy
(
UErrorCode
&
status
)
const
;
LocalPointer
<
StandardPluralRanges
>
toPointer
(
UErrorCode
&
status
)
&
&
noexcept
;
StandardPlural
:
:
Form
resolve
(
StandardPlural
:
:
Form
first
StandardPlural
:
:
Form
second
)
const
;
void
addPluralRange
(
StandardPlural
:
:
Form
first
StandardPlural
:
:
Form
second
StandardPlural
:
:
Form
result
)
;
void
setCapacity
(
int32_t
length
UErrorCode
&
status
)
;
private
:
struct
StandardPluralRangeTriple
{
StandardPlural
:
:
Form
first
;
StandardPlural
:
:
Form
second
;
StandardPlural
:
:
Form
result
;
}
;
typedef
MaybeStackArray
<
StandardPluralRangeTriple
3
>
PluralRangeTriples
;
PluralRangeTriples
fTriples
;
int32_t
fTriplesLen
=
0
;
}
;
U_NAMESPACE_END
#
endif
#
endif
