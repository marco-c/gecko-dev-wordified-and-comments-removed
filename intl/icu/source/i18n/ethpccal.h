#
ifndef
ETHPCCAL_H
#
define
ETHPCCAL_H
#
include
"
unicode
/
utypes
.
h
"
#
if
!
UCONFIG_NO_FORMATTING
#
include
"
unicode
/
calendar
.
h
"
#
include
"
cecal
.
h
"
U_NAMESPACE_BEGIN
class
EthiopicCalendar
:
public
CECalendar
{
public
:
enum
EMonths
{
MESKEREM
TEKEMT
HEDAR
TAHSAS
TER
YEKATIT
MEGABIT
MIAZIA
GENBOT
SENE
HAMLE
NEHASSE
PAGUMEN
}
;
enum
EEras
{
AMETE_ALEM
AMETE_MIHRET
}
;
EthiopicCalendar
(
const
Locale
&
aLocale
UErrorCode
&
success
)
;
EthiopicCalendar
(
const
EthiopicCalendar
&
other
)
=
default
;
virtual
~
EthiopicCalendar
(
)
;
virtual
EthiopicCalendar
*
clone
(
)
const
override
;
virtual
const
char
*
getType
(
)
const
override
;
virtual
int32_t
getRelatedYear
(
UErrorCode
&
status
)
const
override
;
virtual
void
setRelatedYear
(
int32_t
year
)
override
;
protected
:
virtual
int32_t
handleGetExtendedYear
(
)
override
;
virtual
void
handleComputeFields
(
int32_t
julianDay
UErrorCode
&
status
)
override
;
virtual
UDate
defaultCenturyStart
(
)
const
override
;
virtual
int32_t
defaultCenturyStartYear
(
)
const
override
;
virtual
int32_t
getJDEpochOffset
(
)
const
override
;
public
:
virtual
UClassID
getDynamicClassID
(
)
const
override
;
U_I18N_API
static
UClassID
U_EXPORT2
getStaticClassID
(
)
;
#
if
0
public
:
int32_t
ethiopicToJD
(
int32_t
year
int32_t
month
int32_t
day
)
;
#
endif
}
;
class
EthiopicAmeteAlemCalendar
:
public
EthiopicCalendar
{
public
:
EthiopicAmeteAlemCalendar
(
const
Locale
&
aLocale
UErrorCode
&
success
)
;
EthiopicAmeteAlemCalendar
(
const
EthiopicAmeteAlemCalendar
&
other
)
=
default
;
virtual
~
EthiopicAmeteAlemCalendar
(
)
;
virtual
EthiopicAmeteAlemCalendar
*
clone
(
)
const
override
;
virtual
const
char
*
getType
(
)
const
override
;
virtual
UClassID
getDynamicClassID
(
)
const
override
;
U_I18N_API
static
UClassID
U_EXPORT2
getStaticClassID
(
)
;
virtual
int32_t
getRelatedYear
(
UErrorCode
&
status
)
const
override
;
virtual
void
setRelatedYear
(
int32_t
year
)
override
;
protected
:
virtual
int32_t
handleGetExtendedYear
(
)
override
;
virtual
void
handleComputeFields
(
int32_t
julianDay
UErrorCode
&
status
)
override
;
virtual
int32_t
handleGetLimit
(
UCalendarDateFields
field
ELimitType
limitType
)
const
override
;
virtual
int32_t
defaultCenturyStartYear
(
)
const
override
;
}
;
U_NAMESPACE_END
#
endif
#
endif
