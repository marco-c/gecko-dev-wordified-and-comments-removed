import
os
import
shutil
from
mozperftest
.
layers
import
Layer
from
mozprofile
import
create_profile
from
mozprofile
.
prefs
import
Preferences
HERE
=
os
.
path
.
dirname
(
__file__
)
class
Profile
(
Layer
)
:
    
name
=
"
profile
"
    
activated
=
True
    
arguments
=
{
        
"
directory
"
:
{
"
type
"
:
str
"
default
"
:
None
"
help
"
:
"
Profile
to
use
"
}
        
"
user
-
js
"
:
{
"
type
"
:
str
"
default
"
:
None
"
help
"
:
"
Custom
user
.
js
"
}
    
}
    
def
__init__
(
self
env
mach_cmd
)
:
        
super
(
Profile
self
)
.
__init__
(
env
mach_cmd
)
        
self
.
_created_dirs
=
[
]
    
def
setup
(
self
)
:
        
pass
    
def
_cleanup
(
self
)
:
        
pass
    
def
run
(
self
metadata
)
:
        
if
self
.
get_arg
(
"
directory
"
)
is
not
None
:
            
return
        
profile
=
create_profile
(
app
=
"
firefox
"
)
        
profile
.
cleanup
=
self
.
_cleanup
        
prefs
=
metadata
.
get_options
(
"
browser_prefs
"
)
        
if
prefs
=
=
{
}
:
            
prefs
[
"
mozperftest
"
]
=
"
true
"
        
user_js
=
self
.
get_arg
(
"
user
-
js
"
)
        
if
user_js
is
not
None
:
            
self
.
info
(
"
Applying
use
prefs
from
%
s
"
%
user_js
)
            
default_prefs
=
dict
(
Preferences
.
read_prefs
(
user_js
)
)
            
prefs
.
update
(
default_prefs
)
        
profile
.
set_preferences
(
prefs
)
        
self
.
info
(
"
Created
profile
at
%
s
"
%
profile
.
profile
)
        
self
.
_created_dirs
.
append
(
profile
.
profile
)
        
self
.
set_arg
(
"
profile
-
directory
"
profile
.
profile
)
        
return
metadata
    
def
teardown
(
self
)
:
        
for
dir
in
self
.
_created_dirs
:
            
if
os
.
path
.
exists
(
dir
)
:
                
shutil
.
rmtree
(
dir
)
