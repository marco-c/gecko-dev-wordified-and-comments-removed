import
gdb
import
gdb
.
printing
class
GeckoPrettyPrinter
(
object
)
:
    
pp
=
gdb
.
printing
.
RegexpCollectionPrettyPrinter
(
"
GeckoPrettyPrinters
"
)
    
def
__init__
(
self
name
regexp
)
:
        
self
.
name
=
name
        
self
.
regexp
=
regexp
    
def
__call__
(
self
wrapped
)
:
        
GeckoPrettyPrinter
.
pp
.
add_printer
(
self
.
name
self
.
regexp
wrapped
)
        
return
wrapped
import
gdbpp
.
enumset
import
gdbpp
.
linkedlist
import
gdbpp
.
owningthread
import
gdbpp
.
smartptr
import
gdbpp
.
string
import
gdbpp
.
syncedcontext
import
gdbpp
.
tarray
import
gdbpp
.
thashtable
gdb
.
printing
.
register_pretty_printer
(
None
GeckoPrettyPrinter
.
pp
)
