from
__future__
import
unicode_literals
print_function
import
os
import
subprocess
import
tempfile
from
mozlint
import
formatters
def
get_editor
(
)
:
    
return
os
.
environ
.
get
(
'
EDITOR
'
)
def
edit_results
(
results
)
:
    
if
not
results
:
        
return
    
editor
=
get_editor
(
)
    
if
not
editor
:
        
print
(
'
warning
:
could
not
find
a
default
editor
'
)
        
return
    
name
=
os
.
path
.
basename
(
editor
)
    
if
name
in
(
'
vim
'
'
nvim
'
'
gvim
'
)
:
        
cmd
=
[
            
editor
            
'
-
-
cmd
'
'
set
errorformat
+
=
%
f
:
\
\
line
\
\
%
l
\
\
\
\
\
\
col
\
\
%
c
\
\
\
\
\
\
%
trror
\
\
-
\
\
%
m
'
            
'
-
-
cmd
'
'
set
errorformat
+
=
%
f
:
\
\
line
\
\
%
l
\
\
\
\
\
\
col
\
\
%
c
\
\
\
\
\
\
%
tarning
\
\
-
\
\
%
m
'
            
'
-
-
cmd
'
'
set
errorformat
+
=
%
f
:
\
\
line
\
\
%
l
\
\
\
\
\
\
%
trror
\
\
-
\
\
%
m
'
            
'
-
-
cmd
'
'
set
errorformat
+
=
%
f
:
\
\
line
\
\
%
l
\
\
\
\
\
\
%
tarning
\
\
-
\
\
%
m
'
            
'
-
c
'
'
copen
'
            
'
-
c
'
'
1bd
'
        
]
        
with
tempfile
.
NamedTemporaryFile
(
)
as
fh
:
            
s
=
formatters
.
get
(
'
compact
'
summary
=
False
)
(
results
)
            
fh
.
write
(
s
)
            
fh
.
flush
(
)
            
cmd
.
extend
(
[
'
-
q
'
fh
.
name
]
)
            
subprocess
.
call
(
cmd
)
    
else
:
        
for
path
errors
in
results
.
iteritems
(
)
:
            
subprocess
.
call
(
[
editor
path
]
)
