#
-
*
-
coding
:
utf
-
8
-
*
-
from
__future__
import
unicode_literals
import
os
import
unittest
import
mozunit
from
mozbuild
.
action
.
package_fennec_apk
import
(
    
package_fennec_apk
as
package
)
from
mozpack
.
mozjar
import
JarReader
import
mozpack
.
path
as
mozpath
test_data_path
=
mozpath
.
abspath
(
mozpath
.
dirname
(
__file__
)
)
test_data_path
=
mozpath
.
join
(
test_data_path
'
data
'
'
package_fennec_apk
'
)
def
data
(
name
)
:
    
return
os
.
path
.
join
(
test_data_path
name
)
class
TestPackageFennecAPK
(
unittest
.
TestCase
)
:
    
"
"
"
    
Unit
tests
for
package_fennec_apk
.
py
.
    
"
"
"
    
def
test_arguments
(
self
)
:
        
jarrer
=
package
(
inputs
=
[
]
                         
omni_ja
=
data
(
'
omni
.
ja
'
)
                         
assets_dirs
=
[
data
(
'
assets
'
)
]
                         
lib_dirs
=
[
data
(
'
lib
'
)
]
                         
root_files
=
[
data
(
'
root_file
.
txt
'
)
]
)
        
self
.
assertEquals
(
jarrer
[
'
assets
/
omni
.
ja
'
]
.
open
(
)
.
read
(
)
.
strip
(
)
'
omni
.
ja
'
)
        
for
name
in
(
'
assets
/
asset
.
txt
'
                     
'
lib
/
lib
.
txt
'
                     
'
root_file
.
txt
'
)
:
            
self
.
assertEquals
(
jarrer
[
name
]
.
open
(
)
.
read
(
)
.
strip
(
)
name
)
    
def
test_inputs
(
self
)
:
        
jarrer
=
package
(
inputs
=
[
data
(
'
input2
.
apk
'
)
data
(
'
input1
.
ap_
'
)
]
)
        
files1
=
JarReader
(
data
(
'
input1
.
ap_
'
)
)
.
entries
.
keys
(
)
        
files2
=
JarReader
(
data
(
'
input2
.
apk
'
)
)
.
entries
.
keys
(
)
        
for
name
in
files2
:
            
self
.
assertTrue
(
name
in
files1
or
                            
jarrer
[
name
]
.
open
(
)
.
read
(
)
.
startswith
(
'
input2
/
'
)
)
        
for
name
in
files1
:
            
self
.
assertTrue
(
jarrer
[
name
]
.
open
(
)
.
read
(
)
.
startswith
(
'
input1
/
'
)
)
if
__name__
=
=
'
__main__
'
:
    
mozunit
.
main
(
)
