template
def
check_compiler_flag
(
flag
)
:
depends
(
is_gcc
)
def
check
(
value
)
:
if
value
:
return
[
flag
]
set_config
(
"
CFLAGS
"
check
)
return
check
check_compiler_flag
(
"
-
Werror
=
foobar
"
)
def
fortytwo
(
)
:
return
42
def
twentyone
(
)
:
yield
21
depends
(
is_gcc
)
def
check
(
value
)
:
if
value
:
return
fortytwo
(
)
set_config
(
"
TEMPLATE_VALUE
"
check
)
depends
(
is_gcc
)
def
check
(
value
)
:
if
value
:
for
val
in
twentyone
(
)
:
return
val
set_config
(
"
TEMPLATE_VALUE_2
"
check
)
imports
(
"
sys
"
)
def
platform
(
)
:
return
sys
.
platform
option
(
"
-
-
enable
-
imports
-
in
-
template
"
help
=
"
Imports
in
template
"
)
depends
(
"
-
-
enable
-
imports
-
in
-
template
"
)
def
check
(
value
)
:
if
value
:
return
platform
(
)
set_config
(
"
PLATFORM
"
check
)
template
def
indirectly_define_option
(
*
args
*
*
kwargs
)
:
option
(
*
args
*
*
kwargs
)
