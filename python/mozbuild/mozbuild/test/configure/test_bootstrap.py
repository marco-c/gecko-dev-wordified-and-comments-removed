from
mozunit
import
main
from
common
import
BaseConfigureTest
class
TestBootstrap
(
BaseConfigureTest
)
:
    
def
test_bootstrap
(
self
)
:
        
def
get_value_for
(
arg
)
:
            
sandbox
=
self
.
get_sandbox
(
{
}
{
}
[
arg
]
{
}
)
            
return
sandbox
.
_value_for
(
sandbox
[
"
enable_bootstrap
"
]
)
        
self
.
assertEqual
(
None
get_value_for
(
"
-
-
disable
-
bootstrap
"
)
)
        
bootstrap
=
get_value_for
(
"
-
-
enable
-
bootstrap
"
)
        
self
.
assertTrue
(
bootstrap
(
"
foo
"
)
)
        
self
.
assertTrue
(
bootstrap
(
"
bar
"
)
)
        
bootstrap
=
get_value_for
(
"
-
-
enable
-
bootstrap
=
foo
bar
"
)
        
self
.
assertTrue
(
bootstrap
(
"
foo
"
)
)
        
self
.
assertTrue
(
bootstrap
(
"
bar
"
)
)
        
self
.
assertFalse
(
bootstrap
(
"
qux
"
)
)
        
bootstrap
=
get_value_for
(
"
-
-
enable
-
bootstrap
=
-
foo
"
)
        
self
.
assertFalse
(
bootstrap
(
"
foo
"
)
)
        
self
.
assertTrue
(
bootstrap
(
"
bar
"
)
)
        
self
.
assertTrue
(
bootstrap
(
"
qux
"
)
)
        
bootstrap
=
get_value_for
(
"
-
-
enable
-
bootstrap
=
-
foo
foo
bar
"
)
        
self
.
assertFalse
(
bootstrap
(
"
foo
"
)
)
        
self
.
assertTrue
(
bootstrap
(
"
bar
"
)
)
        
self
.
assertFalse
(
bootstrap
(
"
qux
"
)
)
if
__name__
=
=
"
__main__
"
:
    
main
(
)
