import
imp
import
os
import
sys
orig_find_module
=
imp
.
find_module
def
my_find_module
(
name
dirs
)
:
    
if
name
=
=
main_module_name
:
        
path
=
os
.
path
.
join
(
dirs
[
0
]
main_file_name
)
        
f
=
open
(
path
)
        
return
(
f
path
(
'
'
'
r
'
imp
.
PY_SOURCE
)
)
    
return
orig_find_module
(
name
dirs
)
orig_load_module
=
imp
.
load_module
def
my_load_module
(
name
file
path
description
)
:
    
if
name
=
=
'
__parents_main__
'
:
        
old_bytecode
=
sys
.
dont_write_bytecode
        
sys
.
dont_write_bytecode
=
True
        
try
:
            
return
orig_load_module
(
name
file
path
description
)
        
finally
:
            
sys
.
dont_write_bytecode
=
old_bytecode
    
return
orig_load_module
(
name
file
path
description
)
imp
.
find_module
=
my_find_module
imp
.
load_module
=
my_load_module
from
multiprocessing
.
forking
import
main
main
(
)
