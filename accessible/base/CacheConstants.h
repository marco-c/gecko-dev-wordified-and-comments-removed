#
ifndef
_CacheConstants_h_
#
define
_CacheConstants_h_
#
include
"
nsGkAtoms
.
h
"
#
include
"
mozilla
/
a11y
/
RelationType
.
h
"
namespace
mozilla
{
namespace
a11y
{
class
CacheDomain
{
public
:
static
constexpr
uint64_t
None
=
0
;
static
constexpr
uint64_t
NameAndDescription
=
(
(
uint64_t
)
0x1
)
<
<
0
;
static
constexpr
uint64_t
Value
=
(
(
uint64_t
)
0x1
)
<
<
1
;
static
constexpr
uint64_t
Bounds
=
(
(
uint64_t
)
0x1
)
<
<
2
;
static
constexpr
uint64_t
Resolution
=
(
(
uint64_t
)
0x1
)
<
<
3
;
static
constexpr
uint64_t
Text
=
(
(
uint64_t
)
0x1
)
<
<
4
;
static
constexpr
uint64_t
DOMNodeIDAndClass
=
(
(
uint64_t
)
0x1
)
<
<
5
;
static
constexpr
uint64_t
State
=
(
(
uint64_t
)
0x1
)
<
<
6
;
static
constexpr
uint64_t
GroupInfo
=
(
(
uint64_t
)
0x1
)
<
<
7
;
static
constexpr
uint64_t
Actions
=
(
(
uint64_t
)
0x1
)
<
<
8
;
static
constexpr
uint64_t
Style
=
(
(
uint64_t
)
0x1
)
<
<
9
;
static
constexpr
uint64_t
TransformMatrix
=
(
(
uint64_t
)
0x1
)
<
<
10
;
static
constexpr
uint64_t
ScrollPosition
=
(
(
uint64_t
)
0x1
)
<
<
11
;
static
constexpr
uint64_t
Table
=
(
(
uint64_t
)
0x1
)
<
<
12
;
static
constexpr
uint64_t
TextOffsetAttributes
=
(
(
uint64_t
)
0x1
)
<
<
13
;
static
constexpr
uint64_t
Viewport
=
(
(
uint64_t
)
0x1
)
<
<
14
;
static
constexpr
uint64_t
ARIA
=
(
(
uint64_t
)
0x1
)
<
<
15
;
static
constexpr
uint64_t
Relations
=
(
(
uint64_t
)
0x1
)
<
<
16
;
#
ifdef
XP_WIN
static
constexpr
uint64_t
InnerHTML
=
(
(
uint64_t
)
0x1
)
<
<
17
;
#
endif
static
constexpr
uint64_t
TextBounds
=
(
(
uint64_t
)
0x1
)
<
<
18
;
static
constexpr
uint64_t
All
=
~
(
(
uint64_t
)
0x0
)
;
}
;
enum
class
CacheUpdateType
{
Initial
Update
}
;
struct
RelationData
{
nsStaticAtom
*
const
mAtom
;
nsStaticAtom
*
const
mValidTag
;
RelationType
mType
;
RelationType
mReverseType
;
}
;
static
constexpr
RelationData
kRelationTypeAtoms
[
]
=
{
{
nsGkAtoms
:
:
aria_labelledby
nullptr
RelationType
:
:
LABELLED_BY
RelationType
:
:
LABEL_FOR
}
{
nsGkAtoms
:
:
_for
nsGkAtoms
:
:
label
RelationType
:
:
LABEL_FOR
RelationType
:
:
LABELLED_BY
}
{
nsGkAtoms
:
:
aria_controls
nullptr
RelationType
:
:
CONTROLLER_FOR
RelationType
:
:
CONTROLLED_BY
}
{
nsGkAtoms
:
:
_for
nsGkAtoms
:
:
output
RelationType
:
:
CONTROLLED_BY
RelationType
:
:
CONTROLLER_FOR
}
{
nsGkAtoms
:
:
aria_describedby
nullptr
RelationType
:
:
DESCRIBED_BY
RelationType
:
:
DESCRIPTION_FOR
}
{
nsGkAtoms
:
:
aria_flowto
nullptr
RelationType
:
:
FLOWS_TO
RelationType
:
:
FLOWS_FROM
}
{
nsGkAtoms
:
:
aria_details
nullptr
RelationType
:
:
DETAILS
RelationType
:
:
DETAILS_FOR
}
{
nsGkAtoms
:
:
aria_errormessage
nullptr
RelationType
:
:
ERRORMSG
RelationType
:
:
ERRORMSG_FOR
}
}
;
constexpr
int32_t
kNumbersInRect
=
4
;
class
CacheKey
{
public
:
static
constexpr
nsStaticAtom
*
AccessKey
=
nsGkAtoms
:
:
accesskey
;
static
constexpr
nsStaticAtom
*
AppUnitsPerDevPixel
=
nsGkAtoms
:
:
_moz_device_pixel_ratio
;
static
constexpr
nsStaticAtom
*
ARIAAttributes
=
nsGkAtoms
:
:
aria
;
static
constexpr
nsStaticAtom
*
ARIARole
=
nsGkAtoms
:
:
role
;
static
constexpr
nsStaticAtom
*
ARIASelected
=
nsGkAtoms
:
:
aria_selected
;
static
constexpr
nsStaticAtom
*
CellHeaders
=
nsGkAtoms
:
:
headers
;
static
constexpr
nsStaticAtom
*
ColSpan
=
nsGkAtoms
:
:
colspan
;
static
constexpr
nsStaticAtom
*
CrossDocOffset
=
nsGkAtoms
:
:
crossorigin
;
static
constexpr
nsStaticAtom
*
CSSDisplay
=
nsGkAtoms
:
:
display
;
static
constexpr
nsStaticAtom
*
CSSOverflow
=
nsGkAtoms
:
:
overflow
;
static
constexpr
nsStaticAtom
*
CssPosition
=
nsGkAtoms
:
:
position
;
static
constexpr
nsStaticAtom
*
Description
=
nsGkAtoms
:
:
description
;
static
constexpr
nsStaticAtom
*
DOMName
=
nsGkAtoms
:
:
attributeName
;
static
constexpr
nsStaticAtom
*
DOMNodeClass
=
nsGkAtoms
:
:
_class
;
static
constexpr
nsStaticAtom
*
DOMNodeID
=
nsGkAtoms
:
:
id
;
static
constexpr
nsStaticAtom
*
GroupInfo
=
nsGkAtoms
:
:
group
;
static
constexpr
nsStaticAtom
*
HyperTextOffsets
=
nsGkAtoms
:
:
offset
;
static
constexpr
nsStaticAtom
*
HasLongdesc
=
nsGkAtoms
:
:
longdesc
;
static
constexpr
nsStaticAtom
*
HTMLPlaceholder
=
nsGkAtoms
:
:
placeholder
;
#
ifdef
XP_WIN
static
constexpr
nsStaticAtom
*
InnerHTML
=
nsGkAtoms
:
:
html
;
#
endif
static
constexpr
nsStaticAtom
*
InputType
=
nsGkAtoms
:
:
textInputType
;
static
constexpr
nsStaticAtom
*
IsClipped
=
nsGkAtoms
:
:
clip_rule
;
static
constexpr
nsStaticAtom
*
Language
=
nsGkAtoms
:
:
language
;
static
constexpr
nsStaticAtom
*
MimeType
=
nsGkAtoms
:
:
headerContentType
;
static
constexpr
nsStaticAtom
*
MaxValue
=
nsGkAtoms
:
:
max
;
static
constexpr
nsStaticAtom
*
MinValue
=
nsGkAtoms
:
:
min
;
static
constexpr
nsStaticAtom
*
Name
=
nsGkAtoms
:
:
name
;
static
constexpr
nsStaticAtom
*
NameValueFlag
=
nsGkAtoms
:
:
explicit_name
;
static
constexpr
nsStaticAtom
*
NumericValue
=
nsGkAtoms
:
:
value
;
static
constexpr
nsStaticAtom
*
Opacity
=
nsGkAtoms
:
:
opacity
;
static
constexpr
nsStaticAtom
*
ParentRelativeBounds
=
nsGkAtoms
:
:
relativeBounds
;
static
constexpr
nsStaticAtom
*
PopupType
=
nsGkAtoms
:
:
ispopup
;
static
constexpr
nsStaticAtom
*
PrimaryAction
=
nsGkAtoms
:
:
action
;
static
constexpr
nsStaticAtom
*
Resolution
=
nsGkAtoms
:
:
resolution
;
static
constexpr
nsStaticAtom
*
RowSpan
=
nsGkAtoms
:
:
rowspan
;
static
constexpr
nsStaticAtom
*
ScrollPosition
=
nsGkAtoms
:
:
scrollPosition
;
static
constexpr
nsStaticAtom
*
TextOffsetAttributes
=
nsGkAtoms
:
:
spelling
;
static
constexpr
nsStaticAtom
*
SrcURL
=
nsGkAtoms
:
:
src
;
static
constexpr
nsStaticAtom
*
State
=
nsGkAtoms
:
:
state
;
static
constexpr
nsStaticAtom
*
Step
=
nsGkAtoms
:
:
step
;
static
constexpr
nsStaticAtom
*
TagName
=
nsGkAtoms
:
:
tag
;
static
constexpr
nsStaticAtom
*
TableLayoutGuess
=
nsGkAtoms
:
:
layout_guess
;
static
constexpr
nsStaticAtom
*
Text
=
nsGkAtoms
:
:
text
;
static
constexpr
nsStaticAtom
*
TextAttributes
=
nsGkAtoms
:
:
style
;
static
constexpr
nsStaticAtom
*
TextBounds
=
nsGkAtoms
:
:
characterData
;
static
constexpr
nsStaticAtom
*
TextLineStarts
=
nsGkAtoms
:
:
line
;
static
constexpr
nsStaticAtom
*
TextValue
=
nsGkAtoms
:
:
aria_valuetext
;
static
constexpr
nsStaticAtom
*
TransformMatrix
=
nsGkAtoms
:
:
transform
;
static
constexpr
nsStaticAtom
*
ValueRegion
=
nsGkAtoms
:
:
valuetype
;
static
constexpr
nsStaticAtom
*
Viewport
=
nsGkAtoms
:
:
viewport
;
}
;
}
}
#
endif
