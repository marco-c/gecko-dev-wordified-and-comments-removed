#
include
"
nsIAccessibleRelation
.
h
"
#
include
"
nsIAccessibleRole
.
h
"
#
include
"
mozilla
/
a11y
/
RelationType
.
h
"
#
include
"
mozilla
/
a11y
/
Role
.
h
"
using
namespace
mozilla
:
:
a11y
;
#
define
ROLE
(
geckoRole
stringRole
ariaRole
atkRole
macRole
macSubrole
\
msaaRole
ia2Role
androidClass
nameRule
)
\
static_assert
(
\
static_cast
<
uint32_t
>
(
roles
:
:
geckoRole
)
=
=
\
static_cast
<
uint32_t
>
(
nsIAccessibleRole
:
:
ROLE_
#
#
geckoRole
)
\
"
internal
and
xpcom
roles
differ
!
"
)
;
#
include
"
RoleMap
.
h
"
#
undef
ROLE
#
define
RELATIONTYPE
(
geckoType
stringType
atkType
msaaType
ia2Type
)
\
static_assert
(
\
static_cast
<
uint32_t
>
(
RelationType
:
:
geckoType
)
=
=
\
static_cast
<
uint32_t
>
(
nsIAccessibleRelation
:
:
RELATION_
#
#
geckoType
)
\
"
internal
and
xpcom
relations
differ
!
"
)
;
#
include
"
RelationTypeMap
.
h
"
#
undef
RELATIONTYPE
