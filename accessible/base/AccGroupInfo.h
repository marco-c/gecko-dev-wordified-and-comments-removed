#
ifndef
AccGroupInfo_h_
#
define
AccGroupInfo_h_
#
include
"
nsISupportsImpl
.
h
"
#
include
"
mozilla
/
MemoryReporting
.
h
"
#
include
"
Role
.
h
"
namespace
mozilla
{
namespace
a11y
{
class
Accessible
;
class
AccGroupInfo
{
public
:
MOZ_COUNTED_DTOR
(
AccGroupInfo
)
AccGroupInfo
(
)
=
default
;
AccGroupInfo
(
AccGroupInfo
&
&
)
=
default
;
AccGroupInfo
&
operator
=
(
AccGroupInfo
&
&
)
=
default
;
uint32_t
PosInSet
(
)
const
{
return
mPosInSet
;
}
uint32_t
SetSize
(
)
const
{
return
mSetSize
;
}
Accessible
*
ConceptualParent
(
)
const
{
return
mParent
;
}
void
Update
(
)
;
static
AccGroupInfo
*
CreateGroupInfo
(
const
Accessible
*
aAccessible
)
;
static
Accessible
*
FirstItemOf
(
const
Accessible
*
aContainer
)
;
static
uint32_t
TotalItemCount
(
Accessible
*
aContainer
bool
*
aIsHierarchical
)
;
static
Accessible
*
NextItemTo
(
Accessible
*
aItem
)
;
size_t
SizeOfIncludingThis
(
MallocSizeOf
aMallocSizeOf
)
;
protected
:
AccGroupInfo
(
const
Accessible
*
aItem
a11y
:
:
role
aRole
)
;
private
:
AccGroupInfo
(
const
AccGroupInfo
&
)
=
delete
;
AccGroupInfo
&
operator
=
(
const
AccGroupInfo
&
)
=
delete
;
static
bool
ShouldReportRelations
(
a11y
:
:
role
aRole
a11y
:
:
role
aParentRole
)
;
static
int32_t
GetARIAOrDefaultLevel
(
const
Accessible
*
aAccessible
)
;
uint32_t
mPosInSet
;
uint32_t
mSetSize
;
Accessible
*
mParent
;
const
Accessible
*
mItem
;
a11y
:
:
role
mRole
;
}
;
}
}
#
endif
