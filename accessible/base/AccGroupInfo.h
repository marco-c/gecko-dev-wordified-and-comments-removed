#
ifndef
AccGroupInfo_h_
#
define
AccGroupInfo_h_
#
include
"
LocalAccessible
-
inl
.
h
"
namespace
mozilla
{
namespace
a11y
{
class
AccGroupInfo
{
public
:
MOZ_COUNTED_DTOR
(
AccGroupInfo
)
uint32_t
PosInSet
(
)
const
{
return
mPosInSet
;
}
uint32_t
SetSize
(
)
const
{
return
mSetSize
;
}
LocalAccessible
*
ConceptualParent
(
)
const
{
return
mParent
;
}
void
Update
(
)
;
static
AccGroupInfo
*
CreateGroupInfo
(
const
LocalAccessible
*
aAccessible
)
{
mozilla
:
:
a11y
:
:
role
role
=
aAccessible
-
>
Role
(
)
;
if
(
role
!
=
mozilla
:
:
a11y
:
:
roles
:
:
ROW
&
&
role
!
=
mozilla
:
:
a11y
:
:
roles
:
:
OUTLINEITEM
&
&
role
!
=
mozilla
:
:
a11y
:
:
roles
:
:
OPTION
&
&
role
!
=
mozilla
:
:
a11y
:
:
roles
:
:
LISTITEM
&
&
role
!
=
mozilla
:
:
a11y
:
:
roles
:
:
MENUITEM
&
&
role
!
=
mozilla
:
:
a11y
:
:
roles
:
:
COMBOBOX_OPTION
&
&
role
!
=
mozilla
:
:
a11y
:
:
roles
:
:
RICH_OPTION
&
&
role
!
=
mozilla
:
:
a11y
:
:
roles
:
:
CHECK_RICH_OPTION
&
&
role
!
=
mozilla
:
:
a11y
:
:
roles
:
:
PARENT_MENUITEM
&
&
role
!
=
mozilla
:
:
a11y
:
:
roles
:
:
CHECK_MENU_ITEM
&
&
role
!
=
mozilla
:
:
a11y
:
:
roles
:
:
RADIO_MENU_ITEM
&
&
role
!
=
mozilla
:
:
a11y
:
:
roles
:
:
RADIOBUTTON
&
&
role
!
=
mozilla
:
:
a11y
:
:
roles
:
:
PAGETAB
&
&
role
!
=
mozilla
:
:
a11y
:
:
roles
:
:
COMMENT
)
{
return
nullptr
;
}
AccGroupInfo
*
info
=
new
AccGroupInfo
(
aAccessible
BaseRole
(
role
)
)
;
return
info
;
}
static
LocalAccessible
*
FirstItemOf
(
const
LocalAccessible
*
aContainer
)
;
static
uint32_t
TotalItemCount
(
LocalAccessible
*
aContainer
bool
*
aIsHierarchical
)
;
static
LocalAccessible
*
NextItemTo
(
LocalAccessible
*
aItem
)
;
protected
:
AccGroupInfo
(
const
LocalAccessible
*
aItem
a11y
:
:
role
aRole
)
;
private
:
AccGroupInfo
(
)
=
delete
;
AccGroupInfo
(
const
AccGroupInfo
&
)
=
delete
;
AccGroupInfo
&
operator
=
(
const
AccGroupInfo
&
)
=
delete
;
static
mozilla
:
:
a11y
:
:
role
BaseRole
(
mozilla
:
:
a11y
:
:
role
aRole
)
{
if
(
aRole
=
=
mozilla
:
:
a11y
:
:
roles
:
:
CHECK_MENU_ITEM
|
|
aRole
=
=
mozilla
:
:
a11y
:
:
roles
:
:
PARENT_MENUITEM
|
|
aRole
=
=
mozilla
:
:
a11y
:
:
roles
:
:
RADIO_MENU_ITEM
)
{
return
mozilla
:
:
a11y
:
:
roles
:
:
MENUITEM
;
}
if
(
aRole
=
=
mozilla
:
:
a11y
:
:
roles
:
:
CHECK_RICH_OPTION
)
{
return
mozilla
:
:
a11y
:
:
roles
:
:
RICH_OPTION
;
}
return
aRole
;
}
static
bool
ShouldReportRelations
(
a11y
:
:
role
aRole
a11y
:
:
role
aParentRole
)
;
uint32_t
mPosInSet
;
uint32_t
mSetSize
;
LocalAccessible
*
mParent
;
const
LocalAccessible
*
mItem
;
a11y
:
:
role
mRole
;
}
;
}
}
#
endif
