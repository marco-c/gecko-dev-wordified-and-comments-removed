#
ifndef
_mozilla_a11y_style_h_
#
define
_mozilla_a11y_style_h_
#
include
"
mozilla
/
gfx
/
Types
.
h
"
#
include
"
mozilla
/
ComputedStyle
.
h
"
namespace
mozilla
{
namespace
dom
{
class
Element
;
}
namespace
a11y
{
class
StyleInfo
{
public
:
explicit
StyleInfo
(
dom
:
:
Element
*
aElement
)
;
~
StyleInfo
(
)
{
}
already_AddRefed
<
nsAtom
>
Display
(
)
;
already_AddRefed
<
nsAtom
>
TextAlign
(
)
;
mozilla
:
:
LengthPercentage
TextIndent
(
)
;
CSSCoord
MarginLeft
(
)
{
return
Margin
(
eSideLeft
)
;
}
CSSCoord
MarginRight
(
)
{
return
Margin
(
eSideRight
)
;
}
CSSCoord
MarginTop
(
)
{
return
Margin
(
eSideTop
)
;
}
CSSCoord
MarginBottom
(
)
{
return
Margin
(
eSideBottom
)
;
}
static
void
FormatColor
(
const
nscolor
&
aValue
nsAString
&
aFormattedValue
)
;
static
already_AddRefed
<
nsAtom
>
TextDecorationStyleToAtom
(
uint8_t
aValue
)
;
private
:
StyleInfo
(
)
=
delete
;
StyleInfo
(
const
StyleInfo
&
)
=
delete
;
StyleInfo
&
operator
=
(
const
StyleInfo
&
)
=
delete
;
CSSCoord
Margin
(
Side
aSide
)
;
dom
:
:
Element
*
mElement
;
RefPtr
<
const
ComputedStyle
>
mComputedStyle
;
}
;
}
}
#
endif
