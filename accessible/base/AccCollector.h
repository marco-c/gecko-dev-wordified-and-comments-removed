#
ifndef
mozilla_a11y_AccCollector_h__
#
define
mozilla_a11y_AccCollector_h__
#
include
"
Filters
.
h
"
#
include
"
nsTArray
.
h
"
namespace
mozilla
{
namespace
a11y
{
class
Accessible
;
class
AccCollector
{
public
:
AccCollector
(
Accessible
*
aRoot
filters
:
:
FilterFuncPtr
aFilterFunc
)
;
virtual
~
AccCollector
(
)
;
protected
:
int32_t
EnsureNGetIndex
(
Accessible
*
aAccessible
)
;
virtual
void
AppendObject
(
Accessible
*
aAccessible
)
;
filters
:
:
FilterFuncPtr
mFilterFunc
;
Accessible
*
mRoot
;
uint32_t
mRootChildIdx
;
nsTArray
<
Accessible
*
>
mObjects
;
private
:
AccCollector
(
)
;
AccCollector
(
const
AccCollector
&
)
;
AccCollector
&
operator
=
(
const
AccCollector
&
)
;
}
;
class
EmbeddedObjCollector
final
:
public
AccCollector
{
public
:
virtual
~
EmbeddedObjCollector
(
)
{
}
public
:
int32_t
GetIndexAt
(
Accessible
*
aAccessible
)
;
uint32_t
Count
(
)
;
Accessible
*
GetAccessibleAt
(
uint32_t
aIndex
)
;
protected
:
Accessible
*
EnsureNGetObject
(
uint32_t
aIndex
)
;
explicit
EmbeddedObjCollector
(
Accessible
*
aRoot
)
:
AccCollector
(
aRoot
filters
:
:
GetEmbeddedObject
)
{
}
virtual
void
AppendObject
(
Accessible
*
aAccessible
)
override
;
friend
class
Accessible
;
}
;
}
}
#
endif
