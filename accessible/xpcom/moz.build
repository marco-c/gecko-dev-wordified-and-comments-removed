UNIFIED_SOURCES
+
=
[
"
nsAccessibleRelation
.
cpp
"
"
xpcAccessibilityService
.
cpp
"
"
xpcAccessible
.
cpp
"
"
xpcAccessibleApplication
.
cpp
"
"
xpcAccessibleDocument
.
cpp
"
"
xpcAccessibleGeneric
.
cpp
"
"
xpcAccessibleHyperLink
.
cpp
"
"
xpcAccessibleHyperText
.
cpp
"
"
xpcAccessibleImage
.
cpp
"
"
xpcAccessibleSelectable
.
cpp
"
"
xpcAccessibleTable
.
cpp
"
"
xpcAccessibleTableCell
.
cpp
"
"
xpcAccessibleTextRange
.
cpp
"
"
xpcAccessibleValue
.
cpp
"
]
SOURCES
+
=
[
"
!
xpcAccEvents
.
cpp
"
]
EXPORTS
+
=
[
"
!
xpcAccEvents
.
h
"
"
xpcAccessibilityService
.
h
"
]
LOCAL_INCLUDES
+
=
[
"
/
accessible
/
base
"
"
/
accessible
/
basetypes
"
"
/
accessible
/
generic
"
]
if
CONFIG
[
"
MOZ_WIDGET_TOOLKIT
"
]
=
=
"
gtk
"
:
LOCAL_INCLUDES
+
=
[
"
/
accessible
/
atk
"
]
elif
CONFIG
[
"
MOZ_WIDGET_TOOLKIT
"
]
=
=
"
windows
"
:
LOCAL_INCLUDES
+
=
[
"
/
accessible
/
windows
/
msaa
"
]
elif
CONFIG
[
"
MOZ_WIDGET_TOOLKIT
"
]
=
=
"
cocoa
"
:
LOCAL_INCLUDES
+
=
[
"
/
accessible
/
ipc
"
"
/
accessible
/
ipc
/
other
"
"
/
accessible
/
mac
"
]
UNIFIED_SOURCES
+
=
[
"
xpcAccessibleMacInterface
.
mm
"
]
EXPORTS
+
=
[
"
xpcAccessibleMacInterface
.
h
"
]
elif
CONFIG
[
"
MOZ_WIDGET_TOOLKIT
"
]
=
=
"
android
"
:
LOCAL_INCLUDES
+
=
[
"
/
accessible
/
android
"
]
else
:
LOCAL_INCLUDES
+
=
[
"
/
accessible
/
other
"
]
GeneratedFile
(
"
xpcAccEvents
.
h
"
"
xpcAccEvents
.
cpp
"
script
=
"
AccEventGen
.
py
"
entry_point
=
"
gen_files
"
inputs
=
[
"
AccEvents
.
conf
"
]
)
FINAL_LIBRARY
=
"
xul
"
include
(
"
/
ipc
/
chromium
/
chromium
-
config
.
mozbuild
"
)
