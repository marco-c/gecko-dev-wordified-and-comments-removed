#
ifndef
mozilla_a11y_xpcAccessibleHyperLink_h_
#
define
mozilla_a11y_xpcAccessibleHyperLink_h_
#
include
"
nsIAccessibleHyperLink
.
h
"
#
include
"
AccessibleOrProxy
.
h
"
class
nsIAccessible
;
namespace
mozilla
{
namespace
a11y
{
class
LocalAccessible
;
class
xpcAccessibleHyperLink
:
public
nsIAccessibleHyperLink
{
public
:
NS_IMETHOD
GetAnchorCount
(
int32_t
*
aAnchorCount
)
final
;
NS_IMETHOD
GetStartIndex
(
int32_t
*
aStartIndex
)
final
;
NS_IMETHOD
GetEndIndex
(
int32_t
*
aEndIndex
)
final
;
NS_IMETHOD
GetURI
(
int32_t
aIndex
nsIURI
*
*
aURI
)
final
;
NS_IMETHOD
GetAnchor
(
int32_t
aIndex
nsIAccessible
*
*
aAccessible
)
final
;
NS_IMETHOD
GetValid
(
bool
*
aValid
)
final
;
protected
:
xpcAccessibleHyperLink
(
)
{
}
virtual
~
xpcAccessibleHyperLink
(
)
{
}
private
:
xpcAccessibleHyperLink
(
const
xpcAccessibleHyperLink
&
)
=
delete
;
xpcAccessibleHyperLink
&
operator
=
(
const
xpcAccessibleHyperLink
&
)
=
delete
;
AccessibleOrProxy
Intl
(
)
;
}
;
}
}
#
endif
