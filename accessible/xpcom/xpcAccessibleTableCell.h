#
ifndef
mozilla_a11y_xpcom_xpcAccessibletableCell_h_
#
define
mozilla_a11y_xpcom_xpcAccessibletableCell_h_
#
include
"
nsIAccessibleTable
.
h
"
#
include
"
xpcAccessibleHyperText
.
h
"
namespace
mozilla
{
namespace
a11y
{
class
xpcAccessibleTableCell
:
public
xpcAccessibleHyperText
public
nsIAccessibleTableCell
{
public
:
explicit
xpcAccessibleTableCell
(
Accessible
*
aIntl
)
:
xpcAccessibleHyperText
(
aIntl
)
{
}
NS_DECL_ISUPPORTS_INHERITED
NS_IMETHOD
GetTable
(
nsIAccessibleTable
*
*
aTable
)
final
;
NS_IMETHOD
GetColumnIndex
(
int32_t
*
aColIdx
)
final
;
NS_IMETHOD
GetRowIndex
(
int32_t
*
aRowIdx
)
final
;
NS_IMETHOD
GetColumnExtent
(
int32_t
*
aExtent
)
final
;
NS_IMETHOD
GetRowExtent
(
int32_t
*
aExtent
)
final
;
NS_IMETHOD
GetColumnHeaderCells
(
nsIArray
*
*
aHeaderCells
)
final
;
NS_IMETHOD
GetRowHeaderCells
(
nsIArray
*
*
aHeaderCells
)
final
;
NS_IMETHOD
IsSelected
(
bool
*
aSelected
)
final
;
protected
:
virtual
~
xpcAccessibleTableCell
(
)
{
}
private
:
TableCellAccessible
*
Intl
(
)
{
if
(
LocalAccessible
*
acc
=
mIntl
-
>
AsLocal
(
)
)
{
return
acc
-
>
AsTableCell
(
)
;
}
return
nullptr
;
}
xpcAccessibleTableCell
(
const
xpcAccessibleTableCell
&
)
=
delete
;
xpcAccessibleTableCell
&
operator
=
(
const
xpcAccessibleTableCell
&
)
=
delete
;
}
;
}
}
#
endif
