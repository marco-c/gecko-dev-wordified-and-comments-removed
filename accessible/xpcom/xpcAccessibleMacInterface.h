#
ifndef
mozilla_a11y_xpcAccessibleMacInterface_h_
#
define
mozilla_a11y_xpcAccessibleMacInterface_h_
#
include
"
mozilla
/
a11y
/
Accessible
.
h
"
#
include
"
nsIAccessibleMacInterface
.
h
"
class
nsIAccessibleMacInterface
;
namespace
mozilla
{
namespace
a11y
{
class
xpcAccessibleMacNSObjectWrapper
:
public
nsIAccessibleMacNSObjectWrapper
{
public
:
explicit
xpcAccessibleMacNSObjectWrapper
(
id
aTextMarker
)
;
NS_DECL_ISUPPORTS
NS_DECL_NSIACCESSIBLEMACNSOBJECTWRAPPER
protected
:
virtual
~
xpcAccessibleMacNSObjectWrapper
(
)
;
id
mNativeObject
;
}
;
class
xpcAccessibleMacInterface
:
public
xpcAccessibleMacNSObjectWrapper
public
nsIAccessibleMacInterface
{
public
:
explicit
xpcAccessibleMacInterface
(
id
aNativeObj
)
:
xpcAccessibleMacNSObjectWrapper
(
aNativeObj
)
{
}
explicit
xpcAccessibleMacInterface
(
Accessible
*
aObj
)
;
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_NSIACCESSIBLEMACINTERFACE
static
nsresult
NSObjectToJsValue
(
id
aObj
JSContext
*
aCx
JS
:
:
MutableHandleValue
aResult
)
;
protected
:
virtual
~
xpcAccessibleMacInterface
(
)
{
}
bool
SupportsSelector
(
SEL
aSelector
)
;
id
JsValueToNSObject
(
JS
:
:
HandleValue
aValue
JSContext
*
aCx
nsresult
*
aResult
)
;
id
JsValueToNSValue
(
JS
:
:
HandleObject
aObject
JSContext
*
aCx
nsresult
*
aResult
)
;
id
JsValueToSpecifiedNSObject
(
JS
:
:
HandleObject
aObject
JSContext
*
aCx
nsresult
*
aResult
)
;
private
:
xpcAccessibleMacInterface
(
const
xpcAccessibleMacInterface
&
)
=
delete
;
xpcAccessibleMacInterface
&
operator
=
(
const
xpcAccessibleMacInterface
&
)
=
delete
;
}
;
class
xpcAccessibleMacEvent
:
public
nsIAccessibleMacEvent
{
public
:
explicit
xpcAccessibleMacEvent
(
id
aNativeObj
id
aData
)
;
NS_DECL_ISUPPORTS
NS_DECL_NSIACCESSIBLEMACEVENT
;
static
void
FireEvent
(
id
aNativeObj
id
aNotification
id
aUserInfo
)
;
protected
:
virtual
~
xpcAccessibleMacEvent
(
)
;
id
mNativeObject
;
id
mData
;
}
;
}
}
#
endif
