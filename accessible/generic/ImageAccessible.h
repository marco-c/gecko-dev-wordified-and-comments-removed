#
ifndef
mozilla_a11y_ImageAccessible_h__
#
define
mozilla_a11y_ImageAccessible_h__
#
include
"
BaseAccessibles
.
h
"
#
include
"
imgINotificationObserver
.
h
"
namespace
mozilla
{
namespace
a11y
{
class
ImageAccessible
:
public
LinkableAccessible
public
imgINotificationObserver
{
public
:
ImageAccessible
(
nsIContent
*
aContent
DocAccessible
*
aDoc
)
;
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_IMGINOTIFICATIONOBSERVER
virtual
void
Shutdown
(
)
override
;
virtual
a11y
:
:
role
NativeRole
(
)
const
override
;
virtual
uint64_t
NativeState
(
)
const
override
;
virtual
already_AddRefed
<
AccAttributes
>
NativeAttributes
(
)
override
;
virtual
uint8_t
ActionCount
(
)
const
override
;
virtual
void
ActionNameAt
(
uint8_t
aIndex
nsAString
&
aName
)
override
;
virtual
bool
DoAction
(
uint8_t
aIndex
)
const
override
;
LayoutDeviceIntPoint
Position
(
uint32_t
aCoordType
)
;
LayoutDeviceIntSize
Size
(
)
;
bool
HasLongDesc
(
)
const
{
nsCOMPtr
<
nsIURI
>
uri
=
GetLongDescURI
(
)
;
return
uri
;
}
protected
:
virtual
~
ImageAccessible
(
)
;
virtual
ENameValueFlag
NativeName
(
nsString
&
aName
)
const
override
;
virtual
void
DOMAttributeChanged
(
int32_t
aNameSpaceID
nsAtom
*
aAttribute
int32_t
aModType
const
nsAttrValue
*
aOldValue
uint64_t
aOldState
)
override
;
private
:
already_AddRefed
<
nsIURI
>
GetLongDescURI
(
)
const
;
inline
bool
IsLongDescIndex
(
uint8_t
aIndex
)
const
;
uint32_t
mImageRequestStatus
;
}
;
inline
ImageAccessible
*
LocalAccessible
:
:
AsImage
(
)
{
return
IsImage
(
)
?
static_cast
<
ImageAccessible
*
>
(
this
)
:
nullptr
;
}
}
}
#
endif
