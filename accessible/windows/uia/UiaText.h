#
ifndef
mozilla_a11y_UiaText_h__
#
define
mozilla_a11y_UiaText_h__
#
include
"
objbase
.
h
"
#
include
"
uiautomation
.
h
"
#
include
"
IUnknownImpl
.
h
"
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
namespace
mozilla
:
:
a11y
{
class
Accessible
;
class
MsaaAccessible
;
class
UiaText
:
public
ITextProvider
{
public
:
explicit
UiaText
(
MsaaAccessible
*
aMsaa
)
;
DECL_IUNKNOWN
virtual
HRESULT
STDMETHODCALLTYPE
GetSelection
(
__RPC__deref_out_opt
SAFEARRAY
*
*
aRetVal
)
;
virtual
HRESULT
STDMETHODCALLTYPE
GetVisibleRanges
(
__RPC__deref_out_opt
SAFEARRAY
*
*
aRetVal
)
;
virtual
HRESULT
STDMETHODCALLTYPE
RangeFromChild
(
__RPC__in_opt
IRawElementProviderSimple
*
aChildElement
__RPC__deref_out_opt
ITextRangeProvider
*
*
aRetVal
)
;
virtual
HRESULT
STDMETHODCALLTYPE
RangeFromPoint
(
struct
UiaPoint
aPoint
__RPC__deref_out_opt
ITextRangeProvider
*
*
aRetVal
)
;
virtual
HRESULT
STDMETHODCALLTYPE
get_DocumentRange
(
__RPC__deref_out_opt
ITextRangeProvider
*
*
aRetVal
)
;
virtual
HRESULT
STDMETHODCALLTYPE
get_SupportedTextSelection
(
__RPC__out
enum
SupportedTextSelection
*
aRetVal
)
;
private
:
virtual
~
UiaText
(
)
=
default
;
Accessible
*
Acc
(
)
const
;
RefPtr
<
MsaaAccessible
>
mMsaa
;
}
;
}
#
endif
