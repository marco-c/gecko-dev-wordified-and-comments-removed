#
ifndef
mozilla_a11y_MsaaDocAccessible_h__
#
define
mozilla_a11y_MsaaDocAccessible_h__
#
include
"
ia2AccessibleHypertext
.
h
"
namespace
mozilla
{
namespace
a11y
{
class
Accessible
;
class
DocAccessible
;
class
DocAccessibleParent
;
class
MsaaDocAccessible
:
public
ia2AccessibleHypertext
{
public
:
DocAccessible
*
DocAcc
(
)
;
DECL_IUNKNOWN_INHERITED
IMPL_IUNKNOWN_REFCOUNTING_INHERITED
(
ia2AccessibleHypertext
)
virtual
HRESULT
STDMETHODCALLTYPE
get_accParent
(
IDispatch
__RPC_FAR
*
__RPC_FAR
*
ppdispParent
)
override
;
virtual
HRESULT
STDMETHODCALLTYPE
get_accValue
(
VARIANT
varChild
BSTR
__RPC_FAR
*
pszValue
)
override
;
void
AddID
(
uint32_t
aID
Accessible
*
aAcc
)
{
mIDToAccessibleMap
.
InsertOrUpdate
(
aID
aAcc
)
;
}
void
RemoveID
(
uint32_t
aID
)
{
mIDToAccessibleMap
.
Remove
(
aID
)
;
}
Accessible
*
GetAccessibleByID
(
uint32_t
aID
)
const
{
return
mIDToAccessibleMap
.
Get
(
aID
)
;
}
static
MsaaDocAccessible
*
GetFrom
(
DocAccessible
*
aDoc
)
;
static
MsaaDocAccessible
*
GetFrom
(
DocAccessibleParent
*
aDoc
)
;
static
MsaaDocAccessible
*
GetFromOwned
(
Accessible
*
aAcc
)
;
protected
:
using
ia2AccessibleHypertext
:
:
ia2AccessibleHypertext
;
nsTHashMap
<
nsUint32HashKey
Accessible
*
>
mIDToAccessibleMap
;
}
;
}
}
#
endif
