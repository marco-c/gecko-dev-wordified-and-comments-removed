#
ifndef
mozilla_a11y_EnumVariant_h__
#
define
mozilla_a11y_EnumVariant_h__
#
include
"
IUnknownImpl
.
h
"
#
include
"
MsaaAccessible
.
h
"
namespace
mozilla
{
namespace
a11y
{
class
ChildrenEnumVariant
final
:
public
IEnumVARIANT
{
public
:
explicit
ChildrenEnumVariant
(
MsaaAccessible
*
aAnchor
)
:
mAnchorMsaa
(
aAnchor
)
mCurAcc
(
mAnchorMsaa
-
>
Acc
(
)
-
>
ChildAt
(
0
)
)
mCurIndex
(
0
)
{
}
DECL_IUNKNOWN
virtual
HRESULT
STDMETHODCALLTYPE
Next
(
ULONG
aCount
VARIANT
*
aItems
ULONG
*
aCountFetched
)
;
virtual
HRESULT
STDMETHODCALLTYPE
Skip
(
ULONG
aCount
)
;
virtual
HRESULT
STDMETHODCALLTYPE
Reset
(
)
;
virtual
HRESULT
STDMETHODCALLTYPE
Clone
(
IEnumVARIANT
*
*
aEnumVaraint
)
;
private
:
ChildrenEnumVariant
(
)
=
delete
;
ChildrenEnumVariant
&
operator
=
(
const
ChildrenEnumVariant
&
)
=
delete
;
ChildrenEnumVariant
(
const
ChildrenEnumVariant
&
aEnumVariant
)
:
mAnchorMsaa
(
aEnumVariant
.
mAnchorMsaa
)
mCurAcc
(
aEnumVariant
.
mCurAcc
)
mCurIndex
(
aEnumVariant
.
mCurIndex
)
{
}
virtual
~
ChildrenEnumVariant
(
)
{
}
protected
:
RefPtr
<
MsaaAccessible
>
mAnchorMsaa
;
Accessible
*
mCurAcc
;
uint32_t
mCurIndex
;
}
;
}
}
#
endif
