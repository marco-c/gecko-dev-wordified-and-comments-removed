#
include
"
AccessibleWrap
.
h
"
#
include
"
mozilla
/
a11y
/
DocAccessibleParent
.
h
"
#
include
"
AccEvent
.
h
"
#
include
"
nsAccUtils
.
h
"
#
include
"
nsIAccessibleEvent
.
h
"
#
include
"
nsIWidget
.
h
"
#
include
"
nsWindowsHelpers
.
h
"
#
include
"
ServiceProvider
.
h
"
#
include
"
sdnAccessible
.
h
"
#
include
"
LocalAccessible
-
inl
.
h
"
using
namespace
mozilla
;
using
namespace
mozilla
:
:
a11y
;
AccessibleWrap
:
:
AccessibleWrap
(
nsIContent
*
aContent
DocAccessible
*
aDoc
)
:
LocalAccessible
(
aContent
aDoc
)
{
}
AccessibleWrap
:
:
~
AccessibleWrap
(
)
=
default
;
NS_IMPL_ISUPPORTS_INHERITED0
(
AccessibleWrap
LocalAccessible
)
void
AccessibleWrap
:
:
Shutdown
(
)
{
if
(
mMsaa
)
{
mMsaa
-
>
MsaaShutdown
(
)
;
}
LocalAccessible
:
:
Shutdown
(
)
;
}
MsaaAccessible
*
AccessibleWrap
:
:
GetMsaa
(
)
{
if
(
!
mMsaa
)
{
mMsaa
=
MsaaAccessible
:
:
Create
(
this
)
;
}
return
mMsaa
;
}
void
AccessibleWrap
:
:
GetNativeInterface
(
void
*
*
aOutAccessible
)
{
RefPtr
<
IAccessible
>
result
=
GetMsaa
(
)
;
return
result
.
forget
(
aOutAccessible
)
;
}
bool
AccessibleWrap
:
:
IsRootForHWND
(
)
{
if
(
IsRoot
(
)
)
{
return
true
;
}
HWND
thisHwnd
=
MsaaAccessible
:
:
GetHWNDFor
(
this
)
;
AccessibleWrap
*
parent
=
static_cast
<
AccessibleWrap
*
>
(
LocalParent
(
)
)
;
MOZ_ASSERT
(
parent
)
;
HWND
parentHwnd
=
MsaaAccessible
:
:
GetHWNDFor
(
parent
)
;
return
thisHwnd
!
=
parentHwnd
;
}
