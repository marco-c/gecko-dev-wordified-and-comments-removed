#
ifndef
mozilla_NtUndoc_h
#
define
mozilla_NtUndoc_h
#
include
<
winternl
.
h
>
#
if
defined
(
__cplusplus
)
extern
"
C
"
{
#
endif
#
ifndef
STATUS_INFO_LENGTH_MISMATCH
#
define
STATUS_INFO_LENGTH_MISMATCH
(
(
NTSTATUS
)
0xC0000004L
)
#
endif
#
ifndef
STATUS_BUFFER_TOO_SMALL
#
define
STATUS_BUFFER_TOO_SMALL
(
(
NTSTATUS
)
0xC0000023L
)
#
endif
#
ifndef
STATUS_MORE_ENTRIES
#
define
STATUS_MORE_ENTRIES
(
(
NTSTATUS
)
0x00000105L
)
#
endif
enum
UndocSystemInformationClass
{
SystemExtendedHandleInformation
=
64
}
;
struct
SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX
{
PVOID
mObject
;
ULONG_PTR
mPid
;
ULONG_PTR
mHandle
;
ACCESS_MASK
mGrantedAccess
;
USHORT
mCreatorBackTraceIndex
;
USHORT
mObjectTypeIndex
;
ULONG
mAttributes
;
ULONG
mReserved
;
}
;
struct
SYSTEM_HANDLE_INFORMATION_EX
{
ULONG_PTR
mHandleCount
;
ULONG_PTR
mReserved
;
SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX
mHandles
[
1
]
;
}
;
enum
UndocObjectInformationClass
{
ObjectNameInformation
=
1
}
;
struct
OBJECT_NAME_INFORMATION
{
UNICODE_STRING
mName
;
}
;
enum
DirectoryObjectAccessFlags
{
DIRECTORY_QUERY
=
0x0001
DIRECTORY_TRAVERSE
=
0x0002
DIRECTORY_CREATE_OBJECT
=
0x0004
DIRECTORY_CREATE_SUBDIRECTORY
=
0x0008
DIRECTORY_ALL_ACCESS
=
STANDARD_RIGHTS_REQUIRED
|
0x000F
}
;
NTSTATUS
WINAPI
NtOpenDirectoryObject
(
PHANDLE
aDirectoryHandle
ACCESS_MASK
aDesiredAccess
POBJECT_ATTRIBUTES
aObjectAttributes
)
;
struct
OBJECT_DIRECTORY_INFORMATION
{
UNICODE_STRING
mName
;
UNICODE_STRING
mTypeName
;
}
;
NTSTATUS
WINAPI
NtQueryDirectoryObject
(
HANDLE
aDirectoryHandle
PVOID
aOutBuffer
ULONG
aBufferLength
BOOLEAN
aReturnSingleEntry
BOOLEAN
aRestartScan
PULONG
aContext
PULONG
aOutReturnLength
)
;
#
if
defined
(
__cplusplus
)
}
#
endif
#
endif
