#
ifndef
mozilla_a11y_sdnTextAccessible_h_
#
define
mozilla_a11y_sdnTextAccessible_h_
#
include
"
ISimpleDOM
.
h
"
#
include
"
IUnknownImpl
.
h
"
#
include
"
MsaaAccessible
.
h
"
class
nsIFrame
;
struct
nsPoint
;
namespace
mozilla
{
namespace
a11y
{
class
sdnTextAccessible
final
:
public
ISimpleDOMText
{
public
:
explicit
sdnTextAccessible
(
MsaaAccessible
*
aMsaa
)
:
mMsaa
(
aMsaa
)
{
}
;
~
sdnTextAccessible
(
)
{
}
DECL_IUNKNOWN
virtual
HRESULT
STDMETHODCALLTYPE
get_domText
(
BSTR
__RPC_FAR
*
aText
)
;
virtual
HRESULT
STDMETHODCALLTYPE
get_clippedSubstringBounds
(
unsigned
int
startIndex
unsigned
int
endIndex
int
__RPC_FAR
*
aX
int
__RPC_FAR
*
aY
int
__RPC_FAR
*
aWidth
int
__RPC_FAR
*
aHeight
)
;
virtual
HRESULT
STDMETHODCALLTYPE
get_unclippedSubstringBounds
(
unsigned
int
aStartIndex
unsigned
int
aEndIndex
int
__RPC_FAR
*
aX
int
__RPC_FAR
*
aY
int
__RPC_FAR
*
aWidth
int
__RPC_FAR
*
aHeight
)
;
virtual
HRESULT
STDMETHODCALLTYPE
scrollToSubstring
(
unsigned
int
aStartIndex
unsigned
int
aEndIndex
)
;
virtual
HRESULT
STDMETHODCALLTYPE
get_fontFamily
(
BSTR
__RPC_FAR
*
aFontFamily
)
;
private
:
nsIFrame
*
GetPointFromOffset
(
nsIFrame
*
aContainingFrame
int32_t
aOffset
bool
aPreferNext
nsPoint
&
aOutPoint
)
;
RefPtr
<
MsaaAccessible
>
mMsaa
;
}
;
}
}
#
endif
