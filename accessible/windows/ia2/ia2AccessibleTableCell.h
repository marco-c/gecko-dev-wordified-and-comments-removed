#
ifndef
_ACCESSIBLE_TABLECELL_H
#
define
_ACCESSIBLE_TABLECELL_H
#
include
"
AccessibleTableCell
.
h
"
#
include
"
ia2AccessibleHypertext
.
h
"
#
include
"
IUnknownImpl
.
h
"
namespace
mozilla
{
namespace
a11y
{
class
TableCellAccessible
;
class
ia2AccessibleTableCell
:
public
IAccessibleTableCell
public
ia2AccessibleHypertext
{
public
:
DECL_IUNKNOWN_INHERITED
IMPL_IUNKNOWN_REFCOUNTING_INHERITED
(
ia2AccessibleHypertext
)
virtual
HRESULT
STDMETHODCALLTYPE
get_table
(
IUnknown
*
*
table
)
;
virtual
HRESULT
STDMETHODCALLTYPE
get_columnExtent
(
long
*
nColumnsSpanned
)
;
virtual
HRESULT
STDMETHODCALLTYPE
get_columnHeaderCells
(
IUnknown
*
*
*
cellAccessibles
long
*
nColumnHeaderCells
)
;
virtual
HRESULT
STDMETHODCALLTYPE
get_columnIndex
(
long
*
columnIndex
)
;
virtual
HRESULT
STDMETHODCALLTYPE
get_rowExtent
(
long
*
nRowsSpanned
)
;
virtual
HRESULT
STDMETHODCALLTYPE
get_rowHeaderCells
(
IUnknown
*
*
*
cellAccessibles
long
*
nRowHeaderCells
)
;
virtual
HRESULT
STDMETHODCALLTYPE
get_rowIndex
(
long
*
rowIndex
)
;
virtual
HRESULT
STDMETHODCALLTYPE
get_rowColumnExtents
(
long
*
row
long
*
column
long
*
rowExtents
long
*
columnExtents
boolean
*
isSelected
)
;
virtual
HRESULT
STDMETHODCALLTYPE
get_isSelected
(
boolean
*
isSelected
)
;
protected
:
using
ia2AccessibleHypertext
:
:
ia2AccessibleHypertext
;
private
:
TableCellAccessible
*
CellAcc
(
)
;
}
;
}
}
#
endif
