#
include
"
InterfaceInitFuncs
.
h
"
#
include
"
LocalAccessible
-
inl
.
h
"
#
include
"
nsMai
.
h
"
#
include
"
Role
.
h
"
#
include
"
mozilla
/
Likely
.
h
"
#
include
"
RemoteAccessible
.
h
"
#
include
"
nsString
.
h
"
using
namespace
mozilla
:
:
a11y
;
extern
"
C
"
{
static
gboolean
doActionCB
(
AtkAction
*
aAction
gint
aActionIndex
)
{
AccessibleWrap
*
accWrap
=
GetAccessibleWrap
(
ATK_OBJECT
(
aAction
)
)
;
if
(
accWrap
)
{
return
accWrap
-
>
DoAction
(
aActionIndex
)
;
}
RemoteAccessible
*
proxy
=
GetProxy
(
ATK_OBJECT
(
aAction
)
)
;
return
proxy
&
&
proxy
-
>
DoAction
(
aActionIndex
)
;
}
static
gint
getActionCountCB
(
AtkAction
*
aAction
)
{
AccessibleWrap
*
accWrap
=
GetAccessibleWrap
(
ATK_OBJECT
(
aAction
)
)
;
if
(
accWrap
)
{
return
accWrap
-
>
ActionCount
(
)
;
}
RemoteAccessible
*
proxy
=
GetProxy
(
ATK_OBJECT
(
aAction
)
)
;
return
proxy
?
proxy
-
>
ActionCount
(
)
:
0
;
}
static
const
gchar
*
getActionDescriptionCB
(
AtkAction
*
aAction
gint
aActionIndex
)
{
nsAutoString
description
;
AccessibleWrap
*
accWrap
=
GetAccessibleWrap
(
ATK_OBJECT
(
aAction
)
)
;
if
(
accWrap
)
{
accWrap
-
>
ActionDescriptionAt
(
aActionIndex
description
)
;
}
else
if
(
RemoteAccessible
*
proxy
=
GetProxy
(
ATK_OBJECT
(
aAction
)
)
)
{
proxy
-
>
ActionDescriptionAt
(
aActionIndex
description
)
;
}
else
{
return
nullptr
;
}
return
AccessibleWrap
:
:
ReturnString
(
description
)
;
}
static
const
gchar
*
getActionNameCB
(
AtkAction
*
aAction
gint
aActionIndex
)
{
nsAutoString
autoStr
;
AccessibleWrap
*
accWrap
=
GetAccessibleWrap
(
ATK_OBJECT
(
aAction
)
)
;
if
(
accWrap
)
{
accWrap
-
>
ActionNameAt
(
aActionIndex
autoStr
)
;
}
else
if
(
RemoteAccessible
*
proxy
=
GetProxy
(
ATK_OBJECT
(
aAction
)
)
)
{
proxy
-
>
ActionNameAt
(
aActionIndex
autoStr
)
;
}
else
{
return
nullptr
;
}
return
AccessibleWrap
:
:
ReturnString
(
autoStr
)
;
}
static
const
gchar
*
getKeyBindingCB
(
AtkAction
*
aAction
gint
aActionIndex
)
{
nsAutoString
keyBindingsStr
;
AccessibleWrap
*
acc
=
GetAccessibleWrap
(
ATK_OBJECT
(
aAction
)
)
;
if
(
acc
)
{
AccessibleWrap
:
:
GetKeyBinding
(
acc
keyBindingsStr
)
;
}
else
if
(
RemoteAccessible
*
proxy
=
GetProxy
(
ATK_OBJECT
(
aAction
)
)
)
{
proxy
-
>
AtkKeyBinding
(
keyBindingsStr
)
;
}
else
{
return
nullptr
;
}
return
AccessibleWrap
:
:
ReturnString
(
keyBindingsStr
)
;
}
}
void
actionInterfaceInitCB
(
AtkActionIface
*
aIface
)
{
NS_ASSERTION
(
aIface
"
Invalid
aIface
"
)
;
if
(
MOZ_UNLIKELY
(
!
aIface
)
)
return
;
aIface
-
>
do_action
=
doActionCB
;
aIface
-
>
get_n_actions
=
getActionCountCB
;
aIface
-
>
get_description
=
getActionDescriptionCB
;
aIface
-
>
get_keybinding
=
getKeyBindingCB
;
aIface
-
>
get_name
=
getActionNameCB
;
}
