#
ifndef
_AccessibleWrap_H_
#
define
_AccessibleWrap_H_
#
include
<
objc
/
objc
.
h
>
#
include
"
LocalAccessible
.
h
"
#
include
"
PlatformExtTypes
.
h
"
#
include
"
States
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsTArray
.
h
"
#
if
defined
(
__OBJC__
)
class
mozAccessible
;
#
endif
namespace
mozilla
{
namespace
a11y
{
class
AccessibleWrap
:
public
LocalAccessible
{
public
:
AccessibleWrap
(
nsIContent
*
aContent
DocAccessible
*
aDoc
)
;
virtual
~
AccessibleWrap
(
)
;
virtual
void
GetNativeInterface
(
void
*
*
aOutAccessible
)
override
;
virtual
Class
GetNativeType
(
)
;
virtual
void
Shutdown
(
)
override
;
virtual
nsresult
HandleAccEvent
(
AccEvent
*
aEvent
)
override
;
static
bool
IsLiveRegion
(
nsIContent
*
aContent
)
;
protected
:
friend
class
xpcAccessibleMacInterface
;
#
if
defined
(
__OBJC__
)
mozAccessible
*
GetNativeObject
(
)
;
#
else
id
GetNativeObject
(
)
;
#
endif
private
:
#
if
defined
(
__OBJC__
)
mozAccessible
*
mNativeObject
;
#
else
id
mNativeObject
;
#
endif
bool
mNativeInited
;
}
;
Class
GetTypeFromRole
(
roles
:
:
Role
aRole
)
;
}
}
#
endif
