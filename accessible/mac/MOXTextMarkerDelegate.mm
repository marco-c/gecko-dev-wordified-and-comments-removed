#
import
<
Cocoa
/
Cocoa
.
h
>
#
import
"
MOXTextMarkerDelegate
.
h
"
using
namespace
mozilla
:
:
a11y
;
static
nsDataHashtable
<
nsUint64HashKey
MOXTextMarkerDelegate
*
>
sDelegates
;
implementation
MOXTextMarkerDelegate
+
(
id
)
getOrCreateForDoc
:
(
mozilla
:
:
a11y
:
:
AccessibleOrProxy
)
aDoc
{
MOZ_ASSERT
(
!
aDoc
.
IsNull
(
)
)
;
MOXTextMarkerDelegate
*
delegate
=
sDelegates
.
Get
(
aDoc
.
Bits
(
)
)
;
if
(
!
delegate
)
{
delegate
=
[
[
MOXTextMarkerDelegate
alloc
]
initWithDoc
:
aDoc
]
;
sDelegates
.
Put
(
aDoc
.
Bits
(
)
delegate
)
;
[
delegate
retain
]
;
}
return
delegate
;
}
+
(
void
)
destroyForDoc
:
(
mozilla
:
:
a11y
:
:
AccessibleOrProxy
)
aDoc
{
MOZ_ASSERT
(
!
aDoc
.
IsNull
(
)
)
;
MOXTextMarkerDelegate
*
delegate
=
sDelegates
.
Get
(
aDoc
.
Bits
(
)
)
;
if
(
delegate
)
{
sDelegates
.
Remove
(
aDoc
.
Bits
(
)
)
;
[
delegate
release
]
;
}
}
-
(
id
)
initWithDoc
:
(
AccessibleOrProxy
)
aDoc
{
MOZ_ASSERT
(
!
aDoc
.
IsNull
(
)
"
Cannot
init
MOXTextDelegate
with
null
"
)
;
if
(
(
self
=
[
super
init
]
)
)
{
mGeckoDocAccessible
=
aDoc
;
}
return
self
;
}
-
(
id
)
moxStartTextMarker
{
return
nil
;
}
-
(
id
)
moxEndTextMarker
{
return
nil
;
}
-
(
NSString
*
)
moxStringForTextMarkerRange
:
(
id
)
textMarkerRange
{
return
nil
;
}
-
(
NSNumber
*
)
moxLengthForTextMarkerRange
:
(
id
)
textMarkerRange
{
return
nil
;
}
-
(
id
)
moxTextMarkerRangeForUnorderedTextMarkers
:
(
NSArray
*
)
textMarkers
{
return
nil
;
}
end
