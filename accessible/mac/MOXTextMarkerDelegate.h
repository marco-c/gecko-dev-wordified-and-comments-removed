#
import
<
Cocoa
/
Cocoa
.
h
>
#
import
"
MOXAccessibleProtocol
.
h
"
#
include
"
AccessibleOrProxy
.
h
"
interface
MOXTextMarkerDelegate
:
NSObject
<
MOXTextMarkerSupport
>
{
mozilla
:
:
a11y
:
:
AccessibleOrProxy
mGeckoDocAccessible
;
id
mSelection
;
}
+
(
id
)
getOrCreateForDoc
:
(
mozilla
:
:
a11y
:
:
AccessibleOrProxy
)
aDoc
;
+
(
void
)
destroyForDoc
:
(
mozilla
:
:
a11y
:
:
AccessibleOrProxy
)
aDoc
;
-
(
id
)
initWithDoc
:
(
mozilla
:
:
a11y
:
:
AccessibleOrProxy
)
aDoc
;
-
(
void
)
dealloc
;
-
(
void
)
setSelectionFrom
:
(
mozilla
:
:
a11y
:
:
AccessibleOrProxy
)
startContainer
at
:
(
int32_t
)
startOffset
to
:
(
mozilla
:
:
a11y
:
:
AccessibleOrProxy
)
endContainer
at
:
(
int32_t
)
endOffset
;
-
(
void
)
invalidateSelection
;
-
(
id
)
moxStartTextMarker
;
-
(
id
)
moxEndTextMarker
;
-
(
id
)
moxSelectedTextMarkerRange
;
-
(
NSNumber
*
)
moxLengthForTextMarkerRange
:
(
id
)
textMarkerRange
;
-
(
NSString
*
)
moxStringForTextMarkerRange
:
(
id
)
textMarkerRange
;
-
(
id
)
moxTextMarkerRangeForUnorderedTextMarkers
:
(
NSArray
*
)
textMarkers
;
-
(
id
)
moxStartTextMarkerForTextMarkerRange
:
(
id
)
textMarkerRange
;
-
(
id
)
moxEndTextMarkerForTextMarkerRange
:
(
id
)
textMarkerRange
;
-
(
id
)
moxLeftWordTextMarkerRangeForTextMarker
:
(
id
)
textMarker
;
-
(
id
)
moxRightWordTextMarkerRangeForTextMarker
:
(
id
)
textMarker
;
-
(
id
)
moxNextTextMarkerForTextMarker
:
(
id
)
textMarker
;
-
(
id
)
moxPreviousTextMarkerForTextMarker
:
(
id
)
textMarker
;
-
(
NSAttributedString
*
)
moxAttributedStringForTextMarkerRange
:
(
id
)
textMarkerRange
;
-
(
NSValue
*
)
moxBoundsForTextMarkerRange
:
(
id
)
textMarkerRange
;
-
(
id
)
moxUIElementForTextMarker
:
(
id
)
textMarker
;
-
(
id
)
moxTextMarkerRangeForUIElement
:
(
id
)
element
;
-
(
void
)
moxSetSelectedTextMarkerRange
:
(
id
)
textMarkerRange
;
end
