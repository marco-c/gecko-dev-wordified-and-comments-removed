#
import
<
Cocoa
/
Cocoa
.
h
>
#
import
"
mozAccessibleProtocol
.
h
"
#
import
"
MOXAccessibleProtocol
.
h
"
#
include
"
Platform
.
h
"
inline
id
<
mozAccessible
>
GetObjectOrRepresentedView
(
id
<
mozAccessible
>
aObject
)
{
if
(
!
mozilla
:
:
a11y
:
:
ShouldA11yBeEnabled
(
)
)
{
return
aObject
;
}
return
[
aObject
hasRepresentedView
]
?
[
aObject
representedView
]
:
aObject
;
}
interface
MOXAccessibleBase
:
NSObject
<
mozAccessible
MOXAccessible
>
{
BOOL
mIsExpired
;
}
#
pragma
mark
-
mozAccessible
/
widget
-
(
BOOL
)
hasRepresentedView
;
-
(
id
)
representedView
;
-
(
BOOL
)
isRoot
;
#
pragma
mark
-
mozAccessible
/
NSAccessibility
-
(
NSArray
*
)
accessibilityAttributeNames
;
-
(
id
)
accessibilityAttributeValue
:
(
NSString
*
)
attribute
;
-
(
BOOL
)
accessibilityIsAttributeSettable
:
(
NSString
*
)
attribute
;
-
(
void
)
accessibilitySetValue
:
(
id
)
value
forAttribute
:
(
NSString
*
)
attribute
;
-
(
NSArray
*
)
accessibilityActionNames
;
-
(
void
)
accessibilityPerformAction
:
(
NSString
*
)
action
;
-
(
NSString
*
)
accessibilityActionDescription
:
(
NSString
*
)
action
;
-
(
NSArray
*
)
accessibilityParameterizedAttributeNames
;
-
(
id
)
accessibilityAttributeValue
:
(
NSString
*
)
attribute
forParameter
:
(
id
)
parameter
;
-
(
id
)
accessibilityHitTest
:
(
NSPoint
)
point
;
-
(
id
)
accessibilityFocusedUIElement
;
-
(
BOOL
)
isAccessibilityElement
;
-
(
BOOL
)
accessibilityNotifiesWhenDestroyed
;
#
pragma
mark
-
MOXAccessible
protocol
-
(
id
)
moxHitTest
:
(
NSPoint
)
point
;
-
(
id
)
moxFocusedUIElement
;
-
(
void
)
moxPostNotification
:
(
NSString
*
)
notification
;
-
(
void
)
moxPostNotification
:
(
NSString
*
)
notification
withUserInfo
:
(
NSDictionary
*
)
userInfo
;
-
(
BOOL
)
moxBlockSelector
:
(
SEL
)
selector
;
-
(
NSArray
*
)
moxUnignoredChildren
;
-
(
NSArray
*
)
moxChildren
;
-
(
id
<
mozAccessible
>
)
moxUnignoredParent
;
-
(
id
<
mozAccessible
>
)
moxParent
;
-
(
id
<
MOXTextMarkerSupport
>
)
moxTextMarkerDelegate
;
#
pragma
mark
-
-
(
BOOL
)
isExpired
;
-
(
void
)
expire
;
end
