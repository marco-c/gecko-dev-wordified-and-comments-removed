#
include
"
RootAccessibleWrap
.
h
"
#
import
"
MUIRootAccessible
.
h
"
#
import
<
UIKit
/
UIScreen
.
h
>
using
namespace
mozilla
:
:
a11y
;
static
id
<
MUIRootAccessibleProtocol
>
getNativeViewFromRootAccessible
(
LocalAccessible
*
aAccessible
)
{
RootAccessibleWrap
*
root
=
static_cast
<
RootAccessibleWrap
*
>
(
aAccessible
-
>
AsRoot
(
)
)
;
id
<
MUIRootAccessibleProtocol
>
nativeView
=
nil
;
root
-
>
GetNativeWidget
(
(
void
*
*
)
&
nativeView
)
;
return
nativeView
;
}
#
pragma
mark
-
implementation
MUIRootAccessible
-
(
id
)
initWithAccessible
:
(
mozilla
:
:
a11y
:
:
Accessible
*
)
aAcc
{
MOZ_ASSERT
(
!
aAcc
-
>
IsRemote
(
)
"
MUIRootAccessible
is
never
remote
"
)
;
mParallelView
=
getNativeViewFromRootAccessible
(
aAcc
-
>
AsLocal
(
)
)
;
return
[
super
initWithAccessible
:
aAcc
]
;
}
-
(
BOOL
)
hasRepresentedView
{
return
YES
;
}
-
(
id
)
representedView
{
return
mParallelView
;
}
end
