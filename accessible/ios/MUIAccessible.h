#
ifndef
_MUIAccessible_H_
#
define
_MUIAccessible_H_
#
import
<
Foundation
/
Foundation
.
h
>
#
import
<
UIKit
/
UIAccessibility
.
h
>
#
include
"
AccessibleWrap
.
h
"
#
include
"
RemoteAccessible
.
h
"
class
MUIAccessible
;
namespace
mozilla
{
namespace
a11y
{
inline
MUIAccessible
*
_Nullable
GetNativeFromGeckoAccessible
(
mozilla
:
:
a11y
:
:
Accessible
*
_Nullable
aAcc
)
{
if
(
!
aAcc
)
{
return
nil
;
}
if
(
LocalAccessible
*
localAcc
=
aAcc
-
>
AsLocal
(
)
)
{
MUIAccessible
*
native
=
nil
;
localAcc
-
>
GetNativeInterface
(
(
void
*
*
)
&
native
)
;
return
native
;
}
RemoteAccessible
*
remoteAcc
=
aAcc
-
>
AsRemote
(
)
;
return
reinterpret_cast
<
MUIAccessible
*
>
(
remoteAcc
-
>
GetWrapper
(
)
)
;
}
}
}
interface
MUIAccessible
:
NSObject
{
mozilla
:
:
a11y
:
:
Accessible
*
mGeckoAccessible
;
}
-
(
nonnull
id
)
initWithAccessible
:
(
nonnull
mozilla
:
:
a11y
:
:
Accessible
*
)
aAcc
;
-
(
mozilla
:
:
a11y
:
:
Accessible
*
_Nullable
)
geckoAccessible
;
-
(
void
)
expire
;
-
(
void
)
dealloc
;
-
(
BOOL
)
isAccessibilityElement
;
-
(
nullable
NSString
*
)
accessibilityLabel
;
-
(
nullable
NSString
*
)
accessibilityHint
;
-
(
CGRect
)
accessibilityFrame
;
-
(
nullable
NSString
*
)
accessibilityValue
;
-
(
uint64_t
)
accessibilityTraits
;
-
(
NSInteger
)
accessibilityElementCount
;
-
(
nullable
id
)
accessibilityElementAtIndex
:
(
NSInteger
)
index
;
-
(
NSInteger
)
indexOfAccessibilityElement
:
(
nonnull
id
)
element
;
-
(
nullable
NSArray
*
)
accessibilityElements
;
-
(
UIAccessibilityContainerType
)
accessibilityContainerType
;
end
#
endif
