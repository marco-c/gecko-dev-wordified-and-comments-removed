#
ifndef
mozilla_a11y_XULMenuAccessible_h__
#
define
mozilla_a11y_XULMenuAccessible_h__
#
include
"
AccessibleWrap
.
h
"
#
include
"
XULSelectControlAccessible
.
h
"
namespace
mozilla
{
namespace
a11y
{
class
XULMenuitemAccessible
:
public
AccessibleWrap
{
public
:
enum
{
eAction_Click
=
0
}
;
XULMenuitemAccessible
(
nsIContent
*
aContent
DocAccessible
*
aDoc
)
;
virtual
ENameValueFlag
Name
(
nsString
&
aName
)
const
override
;
virtual
EDescriptionValueFlag
Description
(
nsString
&
aDescription
)
const
override
;
virtual
a11y
:
:
role
NativeRole
(
)
const
override
;
virtual
uint64_t
NativeState
(
)
const
override
;
virtual
uint64_t
NativeInteractiveState
(
)
const
override
;
virtual
int32_t
GetLevel
(
bool
aFast
)
const
override
;
virtual
bool
HasPrimaryAction
(
)
const
override
;
virtual
void
ActionNameAt
(
uint8_t
aIndex
nsAString
&
aName
)
override
;
virtual
KeyBinding
AccessKey
(
)
const
override
;
virtual
KeyBinding
KeyboardShortcut
(
)
const
override
;
virtual
bool
IsActiveWidget
(
)
const
override
;
virtual
bool
AreItemsOperable
(
)
const
override
;
virtual
LocalAccessible
*
ContainerWidget
(
)
const
override
;
protected
:
virtual
ENameValueFlag
NativeName
(
nsString
&
aName
)
const
override
;
}
;
class
XULMenuSeparatorAccessible
:
public
XULMenuitemAccessible
{
public
:
XULMenuSeparatorAccessible
(
nsIContent
*
aContent
DocAccessible
*
aDoc
)
;
virtual
a11y
:
:
role
NativeRole
(
)
const
override
;
virtual
uint64_t
NativeState
(
)
const
override
;
virtual
bool
HasPrimaryAction
(
)
const
override
;
protected
:
virtual
ENameValueFlag
NativeName
(
nsString
&
aName
)
const
override
;
}
;
class
XULMenupopupAccessible
:
public
XULSelectControlAccessible
{
public
:
XULMenupopupAccessible
(
nsIContent
*
aContent
DocAccessible
*
aDoc
)
;
virtual
a11y
:
:
role
NativeRole
(
)
const
override
;
virtual
uint64_t
NativeState
(
)
const
override
;
virtual
bool
IsWidget
(
)
const
override
;
virtual
bool
IsActiveWidget
(
)
const
override
;
virtual
bool
AreItemsOperable
(
)
const
override
;
virtual
LocalAccessible
*
ContainerWidget
(
)
const
override
;
protected
:
virtual
ENameValueFlag
NativeName
(
nsString
&
aName
)
const
override
;
}
;
class
XULMenubarAccessible
:
public
AccessibleWrap
{
public
:
XULMenubarAccessible
(
nsIContent
*
aContent
DocAccessible
*
aDoc
)
;
virtual
a11y
:
:
role
NativeRole
(
)
const
override
;
virtual
bool
IsActiveWidget
(
)
const
override
;
virtual
bool
AreItemsOperable
(
)
const
override
;
virtual
LocalAccessible
*
CurrentItem
(
)
const
override
;
virtual
void
SetCurrentItem
(
const
LocalAccessible
*
aItem
)
override
;
protected
:
virtual
ENameValueFlag
NativeName
(
nsString
&
aName
)
const
override
;
}
;
}
}
#
endif
