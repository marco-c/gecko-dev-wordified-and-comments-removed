#
ifndef
mozilla_a11y_XULTabAccessible_h__
#
define
mozilla_a11y_XULTabAccessible_h__
#
include
"
HyperTextAccessibleWrap
.
h
"
#
include
"
XULMenuAccessible
.
h
"
#
include
"
XULSelectControlAccessible
.
h
"
namespace
mozilla
{
namespace
a11y
{
class
XULTabAccessible
:
public
HyperTextAccessibleWrap
{
public
:
enum
{
eAction_Switch
=
0
}
;
XULTabAccessible
(
nsIContent
*
aContent
DocAccessible
*
aDoc
)
;
virtual
a11y
:
:
role
NativeRole
(
)
const
override
;
virtual
uint64_t
NativeState
(
)
const
override
;
virtual
uint64_t
NativeInteractiveState
(
)
const
override
;
virtual
Relation
RelationByType
(
RelationType
aType
)
const
override
;
virtual
void
ApplyARIAState
(
uint64_t
*
aState
)
const
override
;
virtual
uint8_t
ActionCount
(
)
const
override
;
virtual
void
ActionNameAt
(
uint8_t
aIndex
nsAString
&
aName
)
override
;
virtual
bool
DoAction
(
uint8_t
aIndex
)
const
override
;
}
;
class
XULTabsAccessible
:
public
XULSelectControlAccessible
{
public
:
XULTabsAccessible
(
nsIContent
*
aContent
DocAccessible
*
aDoc
)
;
virtual
void
Value
(
nsString
&
aValue
)
const
override
;
virtual
a11y
:
:
role
NativeRole
(
)
const
override
;
virtual
void
ApplyARIAState
(
uint64_t
*
aState
)
const
override
;
virtual
uint8_t
ActionCount
(
)
const
override
;
virtual
void
SelectedItems
(
nsTArray
<
LocalAccessible
*
>
*
aItems
)
override
;
virtual
uint32_t
SelectedItemCount
(
)
override
;
virtual
LocalAccessible
*
GetSelectedItem
(
uint32_t
aIndex
)
override
;
virtual
bool
IsItemSelected
(
uint32_t
aIndex
)
override
;
protected
:
virtual
ENameValueFlag
NativeName
(
nsString
&
aName
)
const
override
;
}
;
class
XULTabpanelsAccessible
:
public
AccessibleWrap
{
public
:
XULTabpanelsAccessible
(
nsIContent
*
aContent
DocAccessible
*
aDoc
)
:
AccessibleWrap
(
aContent
aDoc
)
{
mType
=
eXULTabpanelsType
;
}
virtual
a11y
:
:
role
NativeRole
(
)
const
override
;
}
;
class
XULTabpanelAccessible
:
public
AccessibleWrap
{
public
:
XULTabpanelAccessible
(
nsIContent
*
aContent
DocAccessible
*
aDoc
)
;
virtual
a11y
:
:
role
NativeRole
(
)
const
override
;
virtual
Relation
RelationByType
(
RelationType
aType
)
const
override
;
}
;
}
}
#
endif
