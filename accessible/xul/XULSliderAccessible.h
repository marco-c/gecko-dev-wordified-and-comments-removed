#
ifndef
mozilla_a11y_XULSliderAccessible_h__
#
define
mozilla_a11y_XULSliderAccessible_h__
#
include
"
AccessibleWrap
.
h
"
namespace
mozilla
{
namespace
a11y
{
class
XULSliderAccessible
:
public
AccessibleWrap
{
public
:
XULSliderAccessible
(
nsIContent
*
aContent
DocAccessible
*
aDoc
)
;
virtual
void
Value
(
nsString
&
aValue
)
const
override
;
virtual
a11y
:
:
role
NativeRole
(
)
const
override
;
virtual
uint64_t
NativeInteractiveState
(
)
const
override
;
virtual
bool
NativelyUnavailable
(
)
const
override
;
virtual
double
MaxValue
(
)
const
override
;
virtual
double
MinValue
(
)
const
override
;
virtual
double
CurValue
(
)
const
override
;
virtual
double
Step
(
)
const
override
;
virtual
bool
SetCurValue
(
double
aValue
)
override
;
virtual
uint8_t
ActionCount
(
)
override
;
virtual
void
ActionNameAt
(
uint8_t
aIndex
nsAString
&
aName
)
override
;
virtual
bool
DoAction
(
uint8_t
aIndex
)
override
;
protected
:
dom
:
:
Element
*
GetSliderElement
(
)
const
;
nsresult
GetSliderAttr
(
nsAtom
*
aName
nsAString
&
aValue
)
const
;
nsresult
SetSliderAttr
(
nsAtom
*
aName
const
nsAString
&
aValue
)
;
double
GetSliderAttr
(
nsAtom
*
aName
)
const
;
bool
SetSliderAttr
(
nsAtom
*
aName
double
aValue
)
;
private
:
mutable
RefPtr
<
dom
:
:
Element
>
mSliderElement
;
}
;
class
XULThumbAccessible
:
public
AccessibleWrap
{
public
:
XULThumbAccessible
(
nsIContent
*
aContent
DocAccessible
*
aDoc
)
;
virtual
a11y
:
:
role
NativeRole
(
)
const
override
;
}
;
}
}
#
endif
