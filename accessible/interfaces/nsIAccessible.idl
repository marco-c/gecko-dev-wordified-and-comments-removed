#
include
"
nsISupports
.
idl
"
#
include
"
nsIArray
.
idl
"
interface
nsIPersistentProperties
;
interface
nsIAccessibleDocument
;
interface
nsIAccessibleRelation
;
webidl
Node
;
%
{
C
+
+
#
define
NS_ACCESSIBLE_CACHE_TOPIC
"
accessible
-
cache
"
namespace
mozilla
{
namespace
a11y
{
class
Accessible
;
class
LocalAccessible
;
}
}
%
}
[
ptr
]
native
InternalAccessible
(
mozilla
:
:
a11y
:
:
Accessible
)
;
[
ptr
]
native
InternalLocalAccessible
(
mozilla
:
:
a11y
:
:
LocalAccessible
)
;
[
scriptable
builtinclass
uuid
(
de2869d9
-
563c
-
4943
-
996b
-
31a4daa4d097
)
]
interface
nsIAccessible
:
nsISupports
{
readonly
attribute
nsIAccessible
parent
;
readonly
attribute
nsIAccessible
nextSibling
;
readonly
attribute
nsIAccessible
previousSibling
;
readonly
attribute
nsIAccessible
firstChild
;
readonly
attribute
nsIAccessible
lastChild
;
readonly
attribute
nsIArray
children
;
readonly
attribute
long
childCount
;
readonly
attribute
long
indexInParent
;
readonly
attribute
long
long
uniqueID
;
readonly
attribute
Node
DOMNode
;
readonly
attribute
AString
id
;
readonly
attribute
nsIAccessibleDocument
document
;
readonly
attribute
nsIAccessibleDocument
rootDocument
;
readonly
attribute
AString
language
;
readonly
attribute
AString
name
;
readonly
attribute
AString
value
;
readonly
attribute
AString
description
;
readonly
attribute
AString
accessKey
;
readonly
attribute
AString
keyboardShortcut
;
readonly
attribute
unsigned
long
role
;
void
getState
(
out
unsigned
long
aState
out
unsigned
long
aExtraState
)
;
readonly
attribute
AString
help
;
readonly
attribute
nsIAccessible
focusedChild
;
readonly
attribute
nsIPersistentProperties
attributes
;
readonly
attribute
nsIPersistentProperties
cache
;
readonly
attribute
nsISupports
nativeInterface
;
void
groupPosition
(
out
long
aGroupLevel
out
long
aSimilarItemsInGroup
out
long
aPositionInGroup
)
;
nsIAccessible
getChildAtPoint
(
in
long
x
in
long
y
)
;
nsIAccessible
getDeepestChildAtPoint
(
in
long
x
in
long
y
)
;
nsIAccessible
getDeepestChildAtPointInProcess
(
in
long
x
in
long
y
)
;
nsIAccessible
getChildAt
(
in
long
aChildIndex
)
;
nsIAccessibleRelation
getRelationByType
(
in
unsigned
long
aRelationType
)
;
nsIArray
getRelations
(
)
;
void
getBounds
(
out
long
x
out
long
y
out
long
width
out
long
height
)
;
void
getBoundsInCSSPixels
(
out
long
aX
out
long
aY
out
long
aWidth
out
long
aHeight
)
;
void
setSelected
(
in
boolean
isSelected
)
;
void
takeSelection
(
)
;
void
takeFocus
(
)
;
readonly
attribute
uint8_t
actionCount
;
AString
getActionName
(
in
uint8_t
index
)
;
AString
getActionDescription
(
in
uint8_t
aIndex
)
;
void
doAction
(
in
uint8_t
index
)
;
[
can_run_script
]
void
scrollTo
(
in
unsigned
long
aScrollType
)
;
void
scrollToPoint
(
in
unsigned
long
coordinateType
in
long
x
in
long
y
)
;
void
announce
(
in
AString
announcement
in
unsigned
short
priority
)
;
readonly
attribute
AString
computedARIARole
;
[
notxpcom
nostdcall
]
InternalLocalAccessible
toInternalAccessible
(
)
;
[
notxpcom
nostdcall
]
InternalAccessible
toInternalGeneric
(
)
;
}
;
