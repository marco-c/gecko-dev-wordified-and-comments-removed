#
include
"
nsISupports
.
idl
"
typedef
long
AccessibleTextBoundary
;
interface
nsIAccessible
;
interface
nsIArray
;
interface
nsIPersistentProperties
;
interface
nsIAccessibleTextRange
;
[
scriptable
builtinclass
uuid
(
a4cc7576
-
45bb
-
44c5
-
b347
-
d9cb3ca4de9f
)
]
interface
nsIAccessibleText
:
nsISupports
{
const
int32_t
TEXT_OFFSET_END_OF_TEXT
=
-
1
;
const
int32_t
TEXT_OFFSET_CARET
=
-
2
;
const
AccessibleTextBoundary
BOUNDARY_CHAR
=
0
;
const
AccessibleTextBoundary
BOUNDARY_WORD_START
=
1
;
const
AccessibleTextBoundary
BOUNDARY_WORD_END
=
2
;
const
AccessibleTextBoundary
BOUNDARY_SENTENCE_START
=
3
;
const
AccessibleTextBoundary
BOUNDARY_SENTENCE_END
=
4
;
const
AccessibleTextBoundary
BOUNDARY_LINE_START
=
5
;
const
AccessibleTextBoundary
BOUNDARY_LINE_END
=
6
;
const
AccessibleTextBoundary
BOUNDARY_PARAGRAPH
=
7
;
const
AccessibleTextBoundary
BOUNDARY_CLUSTER
=
8
;
attribute
long
caretOffset
;
void
getCaretRect
(
out
long
x
out
long
y
out
long
width
out
long
height
)
;
readonly
attribute
long
characterCount
;
readonly
attribute
long
selectionCount
;
AString
getText
(
in
long
startOffset
in
long
endOffset
)
;
AString
getTextAfterOffset
(
in
long
offset
in
AccessibleTextBoundary
boundaryType
out
long
startOffset
out
long
endOffset
)
;
AString
getTextAtOffset
(
in
long
offset
in
AccessibleTextBoundary
boundaryType
out
long
startOffset
out
long
endOffset
)
;
AString
getTextBeforeOffset
(
in
long
offset
in
AccessibleTextBoundary
boundaryType
out
long
startOffset
out
long
endOffset
)
;
wchar
getCharacterAtOffset
(
in
long
offset
)
;
nsIPersistentProperties
getTextAttributes
(
in
boolean
includeDefAttrs
in
long
offset
out
long
rangeStartOffset
out
long
rangeEndOffset
)
;
readonly
attribute
nsIPersistentProperties
defaultTextAttributes
;
void
getCharacterExtents
(
in
long
offset
out
long
x
out
long
y
out
long
width
out
long
height
in
unsigned
long
coordType
)
;
void
getRangeExtents
(
in
long
startOffset
in
long
endOffset
out
long
x
out
long
y
out
long
width
out
long
height
in
unsigned
long
coordType
)
;
long
getOffsetAtPoint
(
in
long
x
in
long
y
in
unsigned
long
coordType
)
;
void
getSelectionBounds
(
in
long
selectionNum
out
long
startOffset
out
long
endOffset
)
;
void
setSelectionBounds
(
in
long
selectionNum
in
long
startOffset
in
long
endOffset
)
;
void
addSelection
(
in
long
startOffset
in
long
endOffset
)
;
void
removeSelection
(
in
long
selectionNum
)
;
void
scrollSubstringTo
(
in
long
startIndex
in
long
endIndex
in
unsigned
long
scrollType
)
;
void
scrollSubstringToPoint
(
in
long
startIndex
in
long
endIndex
in
unsigned
long
coordinateType
in
long
x
in
long
y
)
;
readonly
attribute
nsIArray
selectionRanges
;
}
;
