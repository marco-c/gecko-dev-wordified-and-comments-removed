const
IMG_BYTES
=
atob
(
"
iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12
"
+
"
P4
/
/
8
/
w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg
=
=
"
)
;
function
setGlobalState
(
data
key
)
{
let
x
=
{
data
QueryInterface
:
ChromeUtils
.
generateQI
(
[
]
)
}
;
x
.
wrappedJSObject
=
x
;
setObjectState
(
key
x
)
;
}
function
getGlobalState
(
key
)
{
var
data
;
getObjectState
(
key
function
(
x
)
{
data
=
x
&
&
x
.
wrappedJSObject
.
data
;
}
)
;
return
data
;
}
function
handleRequest
(
request
response
)
{
if
(
request
.
queryString
=
=
"
complete
"
)
{
response
.
setStatusLine
(
request
.
httpVersion
200
"
OK
"
)
;
response
.
setHeader
(
"
Cache
-
Control
"
"
no
-
cache
"
false
)
;
response
.
setHeader
(
"
Content
-
Type
"
"
application
/
json
"
false
)
;
response
.
write
(
"
true
"
)
;
let
blockedResponse
=
getGlobalState
(
"
a11y
-
image
"
)
;
if
(
blockedResponse
)
{
blockedResponse
.
setStatusLine
(
request
.
httpVersion
200
"
OK
"
)
;
blockedResponse
.
setHeader
(
"
Cache
-
Control
"
"
no
-
cache
"
false
)
;
blockedResponse
.
setHeader
(
"
Content
-
Type
"
"
image
/
png
"
false
)
;
blockedResponse
.
write
(
IMG_BYTES
)
;
blockedResponse
.
finish
(
)
;
setGlobalState
(
undefined
"
a11y
-
image
"
)
;
}
}
else
{
response
.
processAsync
(
)
;
setGlobalState
(
response
"
a11y
-
image
"
)
;
}
}
