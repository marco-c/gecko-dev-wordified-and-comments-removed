"
use
strict
"
;
loadScripts
(
{
name
:
"
role
.
js
"
dir
:
MOCHITESTS_DIR
}
)
;
addAccessibleTask
(
<
style
>
:
:
view
-
transition
-
group
(
*
)
:
:
view
-
transition
-
image
-
pair
(
*
)
:
:
view
-
transition
-
old
(
*
)
:
:
view
-
transition
-
new
(
*
)
{
animation
-
play
-
state
:
paused
;
}
:
:
view
-
transition
{
background
-
color
:
blue
;
}
<
/
style
>
<
div
style
=
"
view
-
transition
-
name
:
target
"
>
target
<
/
div
>
async
function
(
browser
docAcc
)
{
const
originalTree
=
{
DOCUMENT
:
[
{
SECTION
:
[
{
TEXT_LEAF
:
[
]
}
]
}
]
}
;
testAccessibleTree
(
docAcc
originalTree
)
;
info
(
"
Starting
view
transition
"
)
;
await
invokeContentTask
(
browser
[
]
async
(
)
=
>
{
let
vt
=
content
.
document
.
startViewTransition
(
)
;
await
vt
.
ready
;
}
)
;
info
(
"
Checking
the
existence
of
the
view
transition
"
)
;
await
invokeContentTask
(
browser
[
]
async
(
)
=
>
{
is
(
content
.
getComputedStyle
(
content
.
document
.
documentElement
"
:
:
view
-
transition
"
)
.
backgroundColor
"
rgb
(
0
0
255
)
"
"
The
active
view
transition
is
animating
"
)
;
}
)
;
testAccessibleTree
(
docAcc
originalTree
)
;
}
{
topLevel
:
true
iframe
:
true
remoteIframe
:
true
chrome
:
true
}
)
;
