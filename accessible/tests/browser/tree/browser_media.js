"
use
strict
"
;
loadScripts
(
{
name
:
"
role
.
js
"
dir
:
MOCHITESTS_DIR
}
)
;
addAccessibleTask
(
<
video
id
=
"
video
"
controls
>
<
/
video
>
async
function
testVideoCaptions
(
browser
docAcc
)
{
const
videoAcc
=
findAccessibleChildByID
(
docAcc
"
video
"
)
;
let
ready
=
waitForEvent
(
EVENT_SHOW
evt
=
>
evt
.
accessible
.
name
=
=
"
test
caption
"
)
;
await
invokeContentTask
(
browser
[
]
(
)
=
>
{
const
video
=
content
.
document
.
getElementById
(
"
video
"
)
;
video
.
src
=
"
https
:
/
/
example
.
com
/
tests
/
dom
/
media
/
test
/
shorter_audio_than_video_3s
.
webm
"
;
const
track
=
video
.
addTextTrack
(
"
captions
"
)
;
track
.
mode
=
"
showing
"
;
track
.
addCue
(
new
content
.
VTTCue
(
0
3
"
test
caption
"
)
)
;
video
.
currentTime
=
1
;
}
)
;
await
ready
;
testAccessibleTree
(
videoAcc
{
role
:
ROLE_GROUPING
interfaces
:
[
nsIAccessibleHyperText
]
children
:
[
{
role
:
ROLE_PUSHBUTTON
name
:
"
Play
"
children
:
[
]
}
{
role
:
ROLE_STATUSBAR
children
:
[
{
role
:
ROLE_TEXT_LEAF
name
:
"
Loading
:
"
}
{
role
:
ROLE_TEXT_LEAF
name
:
"
"
}
{
role
:
ROLE_TEXT_LEAF
}
]
}
{
role
:
ROLE_SLIDER
name
:
"
Position
"
value
:
"
0
:
01
/
0
:
03
"
children
:
[
]
}
{
role
:
ROLE_PUSHBUTTON
name
:
"
Mute
"
children
:
[
]
}
{
role
:
ROLE_SLIDER
children
:
[
]
name
:
"
Volume
"
}
{
role
:
ROLE_PUSHBUTTON
name
:
"
Closed
Captions
"
children
:
[
]
}
{
role
:
ROLE_PUSHBUTTON
name
:
"
Full
Screen
"
children
:
[
]
}
{
role
:
ROLE_GRAPHIC
children
:
[
]
}
{
role
:
ROLE_TEXT_LEAF
name
:
"
test
caption
"
}
]
}
)
;
}
)
;
