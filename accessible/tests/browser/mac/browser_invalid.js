"
use
strict
"
;
loadScripts
(
{
name
:
"
states
.
js
"
dir
:
MOCHITESTS_DIR
}
)
;
addAccessibleTask
(
<
form
>
<
input
type
=
"
checkbox
"
required
id
=
"
box
"
>
<
label
for
=
"
box
"
>
I
am
required
<
/
form
>
async
(
browser
accDoc
)
=
>
{
let
box
=
getNativeInterface
(
accDoc
"
box
"
)
;
await
untilCacheOk
(
(
)
=
>
{
return
box
.
getAttributeValue
(
"
AXInvalid
"
)
=
=
"
true
"
;
}
"
Correct
invalid
value
for
box
"
)
;
let
stateChanged
=
waitForEvent
(
EVENT_STATE_CHANGE
"
box
"
)
;
await
SpecialPowers
.
spawn
(
browser
[
]
(
)
=
>
{
content
.
document
.
getElementById
(
"
box
"
)
.
removeAttribute
(
"
required
"
)
;
}
)
;
await
stateChanged
;
await
untilCacheOk
(
(
)
=
>
{
return
box
.
getAttributeValue
(
"
AXInvalid
"
)
=
=
"
false
"
;
}
"
Correct
invalid
value
after
required
attr
removed
"
)
;
stateChanged
=
waitForEvent
(
EVENT_STATE_CHANGE
"
box
"
)
;
await
SpecialPowers
.
spawn
(
browser
[
]
(
)
=
>
{
content
.
document
.
getElementById
(
"
box
"
)
.
setAttribute
(
"
aria
-
invalid
"
"
true
"
)
;
}
)
;
await
stateChanged
;
await
untilCacheOk
(
(
)
=
>
{
return
box
.
getAttributeValue
(
"
AXInvalid
"
)
=
=
"
true
"
;
}
"
Correct
invalid
value
after
aria
-
invalid
attr
set
to
true
"
)
;
}
)
;
