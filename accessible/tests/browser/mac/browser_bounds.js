"
use
strict
"
;
addAccessibleTask
(
I
am
some
extra
content
<
br
>
<
div
id
=
"
hello
"
style
=
"
display
:
inline
;
"
>
hello
<
/
div
>
<
br
>
<
div
id
=
"
world
"
style
=
"
display
:
inline
;
"
>
hello
world
<
br
>
I
am
some
text
<
/
div
>
async
(
browser
accDoc
)
=
>
{
const
hello
=
getNativeInterface
(
accDoc
"
hello
"
)
;
const
world
=
getNativeInterface
(
accDoc
"
world
"
)
;
ok
(
hello
.
getAttributeValue
(
"
AXFrame
"
)
"
Hello
'
s
frame
attr
is
not
null
"
)
;
ok
(
world
.
getAttributeValue
(
"
AXFrame
"
)
"
World
'
s
frame
attr
is
not
null
"
)
;
const
[
helloWidth
helloHeight
]
=
hello
.
getAttributeValue
(
"
AXSize
"
)
;
const
[
worldWidth
worldHeight
]
=
world
.
getAttributeValue
(
"
AXSize
"
)
;
Assert
.
greater
(
helloWidth
0
"
Hello
has
a
positive
width
"
)
;
Assert
.
greater
(
helloHeight
0
"
Hello
has
a
positive
height
"
)
;
Assert
.
greater
(
worldWidth
0
"
World
has
a
positive
width
"
)
;
Assert
.
greater
(
worldHeight
0
"
World
has
a
positive
height
"
)
;
Assert
.
less
(
helloHeight
worldHeight
"
Hello
has
a
smaller
height
than
world
"
)
;
Assert
.
less
(
helloWidth
worldWidth
"
Hello
has
a
smaller
width
than
world
"
)
;
const
[
helloX
helloY
]
=
hello
.
getAttributeValue
(
"
AXPosition
"
)
;
const
[
worldX
worldY
]
=
world
.
getAttributeValue
(
"
AXPosition
"
)
;
Assert
.
greater
(
helloX
0
"
Hello
has
a
positive
X
"
)
;
Assert
.
greater
(
helloY
0
"
Hello
has
a
positive
Y
"
)
;
Assert
.
greater
(
worldX
0
"
World
has
a
positive
X
"
)
;
Assert
.
greater
(
worldY
0
"
World
has
a
positive
Y
"
)
;
Assert
.
greater
(
helloY
worldY
"
Hello
has
a
larger
Y
than
world
"
)
;
Assert
.
equal
(
helloX
worldX
"
Hello
and
world
have
the
same
X
"
)
;
}
)
;
addAccessibleTask
(
I
am
some
extra
content
<
br
>
<
div
id
=
"
hello
"
style
=
"
display
:
inline
;
position
:
absolute
;
left
:
-
2000px
;
"
>
hello
<
/
div
>
<
br
>
<
div
id
=
"
world
"
style
=
"
display
:
inline
;
position
:
absolute
;
left
:
-
2000px
;
"
>
hello
world
<
br
>
I
am
some
text
<
/
div
>
async
(
browser
accDoc
)
=
>
{
const
hello
=
getNativeInterface
(
accDoc
"
hello
"
)
;
const
world
=
getNativeInterface
(
accDoc
"
world
"
)
;
ok
(
hello
.
getAttributeValue
(
"
AXFrame
"
)
"
Hello
'
s
frame
attr
is
not
null
"
)
;
ok
(
world
.
getAttributeValue
(
"
AXFrame
"
)
"
World
'
s
frame
attr
is
not
null
"
)
;
const
[
helloWidth
helloHeight
]
=
hello
.
getAttributeValue
(
"
AXSize
"
)
;
const
[
worldWidth
worldHeight
]
=
world
.
getAttributeValue
(
"
AXSize
"
)
;
Assert
.
greater
(
helloWidth
0
"
Hello
has
a
positive
width
"
)
;
Assert
.
greater
(
helloHeight
0
"
Hello
has
a
positive
height
"
)
;
Assert
.
greater
(
worldWidth
0
"
World
has
a
positive
width
"
)
;
Assert
.
greater
(
worldHeight
0
"
World
has
a
positive
height
"
)
;
Assert
.
less
(
helloHeight
worldHeight
"
Hello
has
a
smaller
height
than
world
"
)
;
Assert
.
less
(
helloWidth
worldWidth
"
Hello
has
a
smaller
width
than
world
"
)
;
const
[
helloX
helloY
]
=
hello
.
getAttributeValue
(
"
AXPosition
"
)
;
const
[
worldX
worldY
]
=
world
.
getAttributeValue
(
"
AXPosition
"
)
;
Assert
.
less
(
helloX
0
"
Hello
has
a
negative
X
"
)
;
Assert
.
greater
(
helloY
0
"
Hello
has
a
positive
Y
"
)
;
Assert
.
less
(
worldX
0
"
World
has
a
negative
X
"
)
;
Assert
.
greater
(
worldY
0
"
World
has
a
positive
Y
"
)
;
Assert
.
greater
(
helloY
worldY
"
Hello
has
a
larger
Y
than
world
"
)
;
Assert
.
equal
(
helloX
worldX
"
Hello
and
world
have
the
same
X
"
)
;
}
)
;
