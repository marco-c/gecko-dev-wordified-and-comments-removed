"
use
strict
"
;
async
function
testScaledBounds
(
browser
accDoc
scale
id
type
=
"
object
"
)
{
let
acc
=
findAccessibleChildByID
(
accDoc
id
)
;
let
[
docX
docY
]
=
getBounds
(
accDoc
)
;
let
[
x
y
width
height
]
=
type
=
=
"
text
"
?
getRangeExtents
(
acc
0
-
1
COORDTYPE_SCREEN_RELATIVE
)
:
getBounds
(
acc
)
;
await
SpecialPowers
.
spawn
(
browser
[
scale
]
_scale
=
>
{
content
.
Layout
.
setResolution
(
content
.
document
_scale
)
;
}
)
;
let
[
scaledX
scaledY
scaledWidth
scaledHeight
]
=
type
=
=
"
text
"
?
getRangeExtents
(
acc
0
-
1
COORDTYPE_SCREEN_RELATIVE
)
:
getBounds
(
acc
)
;
let
name
=
prettyName
(
acc
)
;
isWithin
(
scaledWidth
width
*
scale
2
"
Wrong
scaled
width
of
"
+
name
)
;
isWithin
(
scaledHeight
height
*
scale
2
"
Wrong
scaled
height
of
"
+
name
)
;
isWithin
(
scaledX
-
docX
(
x
-
docX
)
*
scale
2
"
Wrong
scaled
x
of
"
+
name
)
;
isWithin
(
scaledY
-
docY
(
y
-
docY
)
*
scale
2
"
Wrong
scaled
y
of
"
+
name
)
;
await
SpecialPowers
.
spawn
(
browser
[
]
(
)
=
>
{
content
.
Layout
.
setResolution
(
content
.
document
1
.
0
)
;
}
)
;
}
async
function
runTests
(
browser
accDoc
)
{
await
loadContentScripts
(
browser
"
Layout
.
jsm
"
)
;
await
testScaledBounds
(
browser
accDoc
2
.
0
"
p1
"
)
;
await
testScaledBounds
(
browser
accDoc
0
.
5
"
p2
"
)
;
await
testScaledBounds
(
browser
accDoc
3
.
5
"
b1
"
)
;
await
testScaledBounds
(
browser
accDoc
2
.
0
"
p1
"
"
text
"
)
;
await
testScaledBounds
(
browser
accDoc
0
.
75
"
p2
"
"
text
"
)
;
}
addAccessibleTask
(
<
p
id
=
'
p1
'
style
=
'
font
-
family
:
monospace
;
'
>
Tilimilitryamdiya
<
/
p
>
<
p
id
=
"
p2
"
>
para
2
<
/
p
>
<
button
id
=
"
b1
"
>
Hello
<
/
button
>
runTests
)
;
