"
use
strict
"
;
addAccessibleTask
(
<
main
id
=
"
main
"
hidden
>
<
/
main
>
async
function
(
browser
)
{
let
shown
=
waitForEvent
(
EVENT_SHOW
"
main
"
)
;
await
invokeContentTask
(
browser
[
]
(
)
=
>
{
let
text
=
"
"
;
for
(
let
i
=
0
;
i
<
100
;
+
+
i
)
{
text
+
=
"
a
"
;
}
const
contMain
=
content
.
document
.
getElementById
(
"
main
"
)
;
for
(
let
w
=
0
;
w
<
15000
;
+
+
w
)
{
let
parent
=
contMain
;
for
(
let
d
=
0
;
d
<
10
;
+
+
d
)
{
const
div
=
content
.
document
.
createElement
(
"
div
"
)
;
div
.
setAttribute
(
"
aria
-
label
"
{
w
}
{
d
}
{
text
}
)
;
parent
.
append
(
div
)
;
parent
=
div
;
}
}
contMain
.
hidden
=
false
;
}
)
;
const
main
=
(
await
shown
)
.
accessible
;
is
(
main
.
childCount
15000
"
main
has
correct
number
of
children
"
)
;
let
treeOk
=
true
;
function
check
(
val
msg
)
{
if
(
!
val
)
{
ok
(
false
msg
)
;
treeOk
=
false
;
}
}
info
(
"
Checking
tree
"
)
;
for
(
let
w
=
0
;
w
<
15000
;
+
+
w
)
{
let
acc
=
main
.
getChildAt
(
w
)
;
let
parent
=
main
;
for
(
let
d
=
0
;
d
<
10
;
+
+
d
)
{
check
(
acc
Got
child
{
w
}
depth
{
d
}
)
;
const
name
=
{
w
}
{
d
}
;
check
(
acc
.
name
.
startsWith
(
name
+
"
"
)
{
name
}
:
correct
name
)
;
check
(
acc
.
parent
=
=
parent
{
name
}
:
correct
parent
)
;
parent
=
acc
;
acc
=
acc
.
firstChild
;
}
}
ok
(
treeOk
"
Tree
is
correct
"
)
;
}
)
;
