'
use
strict
'
;
loadScripts
(
{
name
:
'
role
.
js
'
dir
:
MOCHITESTS_DIR
}
)
;
function
*
removeTextData
(
browser
accessible
id
role
)
{
let
tree
=
{
role
:
role
children
:
[
{
role
:
ROLE_TEXT_LEAF
name
:
"
text
"
}
]
}
;
testAccessibleTree
(
accessible
tree
)
;
let
onReorder
=
waitForEvent
(
EVENT_REORDER
id
)
;
yield
ContentTask
.
spawn
(
browser
id
contentId
=
>
{
content
.
document
.
getElementById
(
contentId
)
.
firstChild
.
textContent
=
'
'
;
}
)
;
yield
onReorder
;
tree
=
{
role
:
role
children
:
[
]
}
;
testAccessibleTree
(
accessible
tree
)
;
}
addAccessibleTask
(
<
p
id
=
"
p
"
>
text
<
/
p
>
<
pre
id
=
"
pre
"
>
text
<
/
pre
>
function
*
(
browser
accDoc
)
{
let
p
=
findAccessibleChildByID
(
accDoc
'
p
'
)
;
let
pre
=
findAccessibleChildByID
(
accDoc
'
pre
'
)
;
yield
removeTextData
(
browser
p
'
p
'
ROLE_PARAGRAPH
)
;
yield
removeTextData
(
browser
pre
'
pre
'
ROLE_TEXT_CONTAINER
)
;
}
)
;
