"
use
strict
"
;
function
testLinkIndexAtOffset
(
id
offset
index
)
{
let
htAcc
=
getAccessible
(
id
[
nsIAccessibleHyperText
]
)
;
is
(
htAcc
.
getLinkIndexAtOffset
(
offset
)
index
"
Wrong
link
index
at
offset
"
+
offset
+
"
for
ID
"
+
id
+
"
!
"
)
;
}
function
testThis
(
paragraph
id
charIndex
expectedLinkIndex
expectedAnchors
valid
=
true
)
{
testLinkIndexAtOffset
(
paragraph
charIndex
expectedLinkIndex
)
;
let
linkAcc
=
paragraph
.
getLinkAt
(
expectedLinkIndex
)
;
ok
(
linkAcc
"
No
accessible
for
link
"
+
id
+
"
!
"
)
;
is
(
linkAcc
.
valid
valid
{
id
}
is
valid
.
)
;
let
linkIndex
=
paragraph
.
getLinkIndex
(
linkAcc
)
;
is
(
linkIndex
expectedLinkIndex
"
Wrong
link
index
for
"
+
id
+
"
!
"
)
;
is
(
linkAcc
.
anchorCount
expectedAnchors
.
length
"
Correct
number
of
anchors
"
)
;
for
(
let
i
=
0
;
i
<
expectedAnchors
.
length
;
i
+
+
)
{
is
(
getAccessibleDOMNodeID
(
linkAcc
.
getAnchor
(
i
)
)
expectedAnchors
[
i
]
Wrong
anchor
at
{
i
}
for
"
{
id
}
"
)
;
}
}
addAccessibleTask
(
<
p
id
=
"
testParagraph
"
>
<
br
>
Simple
link
:
<
br
>
<
a
id
=
"
NormalHyperlink
"
href
=
"
http
:
/
/
www
.
mozilla
.
org
"
>
Mozilla
Foundation
<
/
a
>
<
br
>
ARIA
link
:
<
br
>
<
span
id
=
"
AriaHyperlink
"
role
=
"
link
"
onclick
=
"
window
.
open
(
'
http
:
/
/
www
.
mozilla
.
org
/
'
)
;
"
tabindex
=
"
0
"
>
Mozilla
Foundation
Home
<
/
span
>
<
br
>
Invalid
non
-
focusable
hyperlink
:
<
br
>
<
span
id
=
"
InvalidAriaHyperlink
"
role
=
"
link
"
aria
-
invalid
=
"
true
"
onclick
=
"
window
.
open
(
'
http
:
/
www
.
mozilla
.
org
/
'
)
;
"
>
Invalid
link
<
/
span
>
<
br
>
Image
map
:
<
br
>
<
map
name
=
"
atoz_map
"
>
<
area
href
=
"
http
:
/
/
www
.
bbc
.
co
.
uk
/
radio4
/
atoz
/
index
.
shtml
#
b
"
coords
=
"
17
0
30
14
"
id
=
"
b
"
shape
=
"
rect
"
>
<
/
area
>
<
area
href
=
"
http
:
/
/
www
.
bbc
.
co
.
uk
/
radio4
/
atoz
/
index
.
shtml
#
a
"
coords
=
"
0
0
13
14
"
id
=
"
a
"
shape
=
"
rect
"
>
<
/
area
>
<
/
map
>
<
img
width
=
"
447
"
id
=
"
imgmap
"
height
=
"
15
"
usemap
=
"
#
atoz_map
"
src
=
"
.
.
/
letters
.
gif
"
>
<
/
img
>
<
br
>
Empty
link
:
<
br
>
<
a
id
=
"
emptyLink
"
href
=
"
"
>
<
img
src
=
"
"
>
<
/
img
>
<
/
a
>
<
br
>
Link
with
embedded
span
<
br
>
<
a
id
=
"
LinkWithSpan
"
href
=
"
http
:
/
/
www
.
heise
.
de
/
"
>
<
span
lang
=
"
de
"
>
Heise
Online
<
/
span
>
<
/
a
>
<
br
>
Named
anchor
must
not
have
"
linked
"
state
for
it
to
be
exposed
correctly
:
<
br
>
<
a
id
=
"
namedAnchor
"
name
=
"
named_anchor
"
>
This
should
never
be
of
state_linked
<
/
a
>
<
/
p
>
function
(
browser
accDoc
)
{
const
paragraph
=
findAccessibleChildByID
(
accDoc
"
testParagraph
"
[
nsIAccessibleHyperText
]
)
;
is
(
paragraph
.
linkCount
7
"
Wrong
link
count
for
paragraph
!
"
)
;
testThis
(
paragraph
"
NormalHyperlink
"
14
0
[
"
NormalHyperlink
"
]
)
;
testThis
(
paragraph
"
AriaHyperlink
"
27
1
[
"
AriaHyperlink
"
]
)
;
testThis
(
paragraph
"
InvalidAriaHyperlink
"
63
2
[
"
InvalidAriaHyperlink
"
]
false
)
;
testThis
(
paragraph
"
imgmap
"
76
3
[
"
b
"
"
a
"
]
)
;
testThis
(
paragraph
"
emptyLink
"
90
4
[
"
emptyLink
"
]
)
;
testThis
(
paragraph
"
LinkWithSpan
"
116
5
[
"
LinkWithSpan
"
]
)
;
testThis
(
paragraph
"
namedAnchor
"
193
6
[
"
namedAnchor
"
]
)
;
}
{
chrome
:
true
topLevel
:
!
isWinNoCache
iframe
:
!
isWinNoCache
remoteIframe
:
!
isWinNoCache
}
)
;
addAccessibleTask
(
<
p
id
=
"
p
"
>
<
a
href
=
"
http
:
/
/
mozilla
.
org
"
>
mozilla
.
org
<
/
a
>
<
/
p
>
function
(
browser
accDoc
)
{
const
p
=
findAccessibleChildByID
(
accDoc
"
p
"
[
nsIAccessibleHyperText
]
)
;
const
link
=
p
.
getLinkAt
(
0
)
;
is
(
link
p
.
getChildAt
(
0
)
"
Wrong
link
for
p2
"
)
;
is
(
p
.
linkCount
1
"
Wrong
link
count
for
p2
"
)
;
}
{
chrome
:
true
topLevel
:
!
isWinNoCache
iframe
:
!
isWinNoCache
remoteIframe
:
!
isWinNoCache
}
)
;
addAccessibleTask
(
<
p
id
=
"
p
"
>
<
a
href
=
"
www
"
>
mozilla
<
/
a
>
<
a
href
=
"
www
"
>
mozilla
<
/
a
>
<
span
>
te
<
/
span
>
<
span
>
xt
<
/
span
>
<
a
href
=
"
www
"
>
mozilla
<
/
a
>
<
/
p
>
function
(
browser
accDoc
)
{
const
p
=
findAccessibleChildByID
(
accDoc
"
p
"
[
nsIAccessibleHyperText
]
)
;
testLinkIndexAtOffset
(
p
0
0
)
;
testLinkIndexAtOffset
(
p
1
1
)
;
testLinkIndexAtOffset
(
p
2
-
1
)
;
testLinkIndexAtOffset
(
p
3
-
1
)
;
testLinkIndexAtOffset
(
p
5
-
1
)
;
testLinkIndexAtOffset
(
p
7
-
1
)
;
testLinkIndexAtOffset
(
p
8
2
)
;
testLinkIndexAtOffset
(
p
9
2
)
;
testLinkIndexAtOffset
(
p
0
0
)
;
testLinkIndexAtOffset
(
p
1
1
)
;
testLinkIndexAtOffset
(
p
2
-
1
)
;
testLinkIndexAtOffset
(
p
3
-
1
)
;
testLinkIndexAtOffset
(
p
5
-
1
)
;
testLinkIndexAtOffset
(
p
7
-
1
)
;
testLinkIndexAtOffset
(
p
8
2
)
;
testLinkIndexAtOffset
(
p
9
2
)
;
}
{
chrome
:
true
topLevel
:
!
isWinNoCache
iframe
:
!
isWinNoCache
remoteIframe
:
!
isWinNoCache
}
)
;
