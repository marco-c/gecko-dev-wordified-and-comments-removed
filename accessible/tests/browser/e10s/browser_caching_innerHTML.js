"
use
strict
"
;
addAccessibleTask
(
<
p
id
=
"
p
"
>
test
<
/
p
>
<
math
id
=
"
math
"
>
<
mfrac
>
<
mi
>
x
<
/
mi
>
<
mi
>
y
<
/
mi
>
<
/
mfrac
>
<
/
math
>
async
function
(
browser
docAcc
)
{
if
(
!
isCacheEnabled
)
{
todo
(
false
"
Cache
disabled
for
a
cache
only
test
"
)
;
return
;
}
const
p
=
findAccessibleChildByID
(
docAcc
"
p
"
)
;
let
hasHtml
;
try
{
p
.
cache
.
getStringProperty
(
"
html
"
)
;
hasHtml
=
true
;
}
catch
(
e
)
{
hasHtml
=
false
;
}
ok
(
!
hasHtml
"
p
doesn
'
t
have
cached
html
"
)
;
const
math
=
findAccessibleChildByID
(
docAcc
"
math
"
)
;
is
(
math
.
cache
.
getStringProperty
(
"
html
"
)
"
<
mfrac
>
<
mi
>
x
<
/
mi
>
<
mi
>
y
<
/
mi
>
<
/
mfrac
>
"
"
math
cached
html
is
correct
"
)
;
info
(
"
Mutating
math
"
)
;
await
invokeContentTask
(
browser
[
]
(
)
=
>
{
content
.
document
.
querySelectorAll
(
"
mi
"
)
[
1
]
.
textContent
=
"
z
"
;
}
)
;
await
untilCacheIs
(
(
)
=
>
math
.
cache
.
getStringProperty
(
"
html
"
)
"
<
mfrac
>
<
mi
>
x
<
/
mi
>
<
mi
>
z
<
/
mi
>
<
/
mfrac
>
"
"
math
cached
html
is
correct
after
mutation
"
)
;
}
{
topLevel
:
true
iframe
:
isCacheEnabled
remoteIframe
:
isCacheEnabled
}
)
;
