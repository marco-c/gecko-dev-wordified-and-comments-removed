"
use
strict
"
;
loadScripts
(
{
name
:
"
role
.
js
"
dir
:
MOCHITESTS_DIR
}
)
;
const
IMG_ID
=
"
img
"
;
const
ALT_TEXT
=
"
some
-
text
"
;
const
ARIA_LABEL
=
"
some
-
label
"
;
addAccessibleTask
(
<
img
id
=
"
{
IMG_ID
}
"
src
=
"
{
MOCHITESTS_DIR
}
/
moz
.
png
"
alt
=
"
"
/
>
async
function
(
browser
accDoc
)
{
const
acc
=
findAccessibleChildByID
(
accDoc
IMG_ID
)
;
ok
(
!
acc
"
Image
has
no
Accessible
"
)
;
info
(
Adding
alt
text
"
{
ALT_TEXT
}
"
to
img
id
'
{
IMG_ID
}
'
)
;
const
shown
=
waitForEvent
(
EVENT_SHOW
IMG_ID
)
;
await
invokeSetAttribute
(
browser
IMG_ID
"
alt
"
ALT_TEXT
)
;
await
shown
;
let
tree
=
{
role
:
ROLE_GRAPHIC
name
:
ALT_TEXT
children
:
[
]
}
;
testAccessibleTree
(
acc
tree
)
;
}
{
chrome
:
true
iframe
:
true
remoteIframe
:
true
}
)
;
addAccessibleTask
(
<
img
id
=
"
{
IMG_ID
}
"
src
=
"
{
MOCHITESTS_DIR
}
/
moz
.
png
"
/
>
async
function
(
browser
accDoc
)
{
const
acc
=
findAccessibleChildByID
(
accDoc
IMG_ID
)
;
let
tree
=
{
role
:
ROLE_GRAPHIC
name
:
null
children
:
[
]
}
;
testAccessibleTree
(
acc
tree
)
;
info
(
Adding
alt
attribute
with
text
"
{
ALT_TEXT
}
"
to
id
{
IMG_ID
}
)
;
const
shown
=
waitForEvent
(
EVENT_NAME_CHANGE
IMG_ID
)
;
await
invokeSetAttribute
(
browser
IMG_ID
"
alt
"
ALT_TEXT
)
;
await
shown
;
tree
=
{
role
:
ROLE_GRAPHIC
name
:
ALT_TEXT
children
:
[
]
}
;
testAccessibleTree
(
acc
tree
)
;
}
{
chrome
:
true
iframe
:
true
remoteIframe
:
true
}
)
;
addAccessibleTask
(
<
img
id
=
"
{
IMG_ID
}
"
src
=
"
{
MOCHITESTS_DIR
}
/
moz
.
png
"
alt
=
"
{
ALT_TEXT
}
"
/
>
async
function
(
browser
accDoc
)
{
let
acc
=
findAccessibleChildByID
(
accDoc
IMG_ID
)
;
let
tree
=
{
role
:
ROLE_GRAPHIC
name
:
ALT_TEXT
children
:
[
]
}
;
testAccessibleTree
(
acc
tree
)
;
info
(
Setting
empty
alt
text
for
img
id
{
IMG_ID
}
)
;
const
hidden
=
waitForEvent
(
EVENT_HIDE
acc
)
;
await
invokeContentTask
(
browser
[
IMG_ID
"
alt
"
"
"
]
(
id
attr
value
)
=
>
{
let
elm
=
content
.
document
.
getElementById
(
id
)
;
elm
.
setAttribute
(
attr
value
)
;
}
)
;
await
hidden
;
acc
=
findAccessibleChildByID
(
accDoc
IMG_ID
)
;
ok
(
!
acc
"
Image
has
no
Accessible
"
)
;
}
{
chrome
:
true
iframe
:
true
remoteIframe
:
true
}
)
;
addAccessibleTask
(
<
img
id
=
"
{
IMG_ID
}
"
src
=
"
{
MOCHITESTS_DIR
}
/
moz
.
png
"
aria
-
label
=
"
{
ARIA_LABEL
}
"
alt
=
"
"
/
>
async
function
(
browser
accDoc
)
{
const
acc
=
findAccessibleChildByID
(
accDoc
IMG_ID
)
;
let
tree
=
{
role
:
ROLE_GRAPHIC
name
:
ARIA_LABEL
children
:
[
]
}
;
testAccessibleTree
(
acc
tree
)
;
info
(
Adding
alt
text
"
{
ALT_TEXT
}
"
to
img
id
'
{
IMG_ID
}
'
)
;
await
invokeSetAttribute
(
browser
IMG_ID
"
alt
"
ALT_TEXT
)
;
tree
=
{
role
:
ROLE_GRAPHIC
name
:
ARIA_LABEL
children
:
[
]
}
;
testAccessibleTree
(
acc
tree
)
;
}
{
chrome
:
true
iframe
:
true
remoteIframe
:
true
}
)
;
addAccessibleTask
(
<
img
id
=
"
{
IMG_ID
}
"
src
=
"
{
MOCHITESTS_DIR
}
/
moz
.
png
"
alt
=
"
"
/
>
async
function
(
browser
accDoc
)
{
info
(
Adding
click
listener
to
img
id
'
{
IMG_ID
}
'
)
;
const
shown
=
waitForEvent
(
EVENT_SHOW
IMG_ID
)
;
await
invokeContentTask
(
browser
[
IMG_ID
]
id
=
>
{
content
.
document
.
getElementById
(
id
)
.
addEventListener
(
"
click
"
(
)
=
>
{
}
)
;
}
)
;
await
shown
;
let
acc
=
findAccessibleChildByID
(
accDoc
IMG_ID
)
;
let
tree
=
{
role
:
ROLE_GRAPHIC
name
:
null
children
:
[
]
}
;
testAccessibleTree
(
acc
tree
)
;
}
{
chrome
:
true
iframe
:
true
remoteIframe
:
true
}
)
;
addAccessibleTask
(
<
img
id
=
"
{
IMG_ID
}
"
src
=
"
{
MOCHITESTS_DIR
}
/
moz
.
png
"
role
=
"
presentation
"
/
>
async
function
(
browser
accDoc
)
{
const
acc
=
findAccessibleChildByID
(
accDoc
IMG_ID
)
;
ok
(
!
acc
"
Image
has
no
Accessible
"
)
;
info
(
Adding
alt
attribute
with
text
"
{
ALT_TEXT
}
"
to
id
{
IMG_ID
}
)
;
await
invokeSetAttribute
(
browser
IMG_ID
"
alt
"
ALT_TEXT
)
;
ok
(
!
acc
"
Image
has
no
Accessible
"
)
;
info
(
Removing
presentation
role
from
img
id
{
IMG_ID
}
)
;
const
shown
=
waitForEvent
(
EVENT_SHOW
IMG_ID
)
;
await
invokeSetAttribute
(
browser
IMG_ID
"
role
"
"
"
)
;
await
shown
;
let
tree
=
{
role
:
ROLE_GRAPHIC
name
:
ALT_TEXT
children
:
[
]
}
;
testAccessibleTree
(
acc
tree
)
;
}
{
chrome
:
true
iframe
:
true
remoteIframe
:
true
}
)
;
