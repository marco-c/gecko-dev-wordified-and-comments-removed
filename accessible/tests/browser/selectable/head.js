"
use
strict
"
;
Services
.
scriptloader
.
loadSubScript
(
"
chrome
:
/
/
mochitests
/
content
/
browser
/
accessible
/
tests
/
browser
/
shared
-
head
.
js
"
this
)
;
loadScripts
(
{
name
:
"
common
.
js
"
dir
:
MOCHITESTS_DIR
}
{
name
:
"
promisified
-
events
.
js
"
dir
:
MOCHITESTS_DIR
}
{
name
:
"
selectable
.
js
"
dir
:
MOCHITESTS_DIR
}
{
name
:
"
states
.
js
"
dir
:
MOCHITESTS_DIR
}
{
name
:
"
role
.
js
"
dir
:
MOCHITESTS_DIR
}
)
;
function
multipleSelectionChanged
(
widget
changedChildren
selected
)
{
return
Promise
.
race
(
[
Promise
.
all
(
changedChildren
.
map
(
id
=
>
waitForStateChange
(
id
STATE_SELECTED
selected
)
)
)
.
then
(
(
)
=
>
false
)
waitForEvent
(
EVENT_SELECTION_WITHIN
widget
)
.
then
(
(
)
=
>
true
)
]
)
;
}
async
function
testMultiSelectable
(
widget
selectableChildren
msg
=
"
"
)
{
let
isRemote
=
false
;
try
{
widget
.
DOMNode
;
}
catch
(
e
)
{
isRemote
=
true
;
}
testSelectableSelection
(
widget
[
]
{
msg
}
:
initial
)
;
let
promise
=
waitForStateChange
(
selectableChildren
[
0
]
STATE_SELECTED
true
)
;
widget
.
addItemToSelection
(
0
)
;
await
promise
;
testSelectableSelection
(
widget
[
selectableChildren
[
0
]
]
{
msg
}
:
addItemToSelection
(
0
)
)
;
promise
=
waitForStateChange
(
selectableChildren
[
0
]
STATE_SELECTED
false
)
;
widget
.
removeItemFromSelection
(
0
)
;
await
promise
;
testSelectableSelection
(
widget
[
]
{
msg
}
:
removeItemFromSelection
(
0
)
)
;
promise
=
multipleSelectionChanged
(
widget
selectableChildren
true
)
;
let
success
=
widget
.
selectAll
(
)
;
ok
(
success
{
msg
}
:
selectAll
success
)
;
let
coalesced
=
await
promise
;
if
(
isRemote
&
&
coalesced
&
&
isCacheEnabled
)
{
todo_is
(
widget
.
selectedItemCount
selectableChildren
.
length
"
Bug
1755377
:
Coalesced
SELECTION_WITHIN
doesn
'
t
update
cache
"
)
;
return
;
}
testSelectableSelection
(
widget
selectableChildren
{
msg
}
:
selectAll
)
;
promise
=
multipleSelectionChanged
(
widget
selectableChildren
false
)
;
widget
.
unselectAll
(
)
;
coalesced
=
await
promise
;
if
(
isRemote
&
&
coalesced
&
&
isCacheEnabled
)
{
todo_is
(
widget
.
selectedItemCount
0
"
Coalesced
SELECTION_WITHIN
doesn
'
t
update
cache
"
)
;
return
;
}
testSelectableSelection
(
widget
[
]
{
msg
}
:
selectAll
)
;
}
