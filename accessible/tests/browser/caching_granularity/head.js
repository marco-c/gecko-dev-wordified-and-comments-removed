"
use
strict
"
;
Services
.
scriptloader
.
loadSubScript
(
"
chrome
:
/
/
mochitests
/
content
/
browser
/
accessible
/
tests
/
browser
/
shared
-
head
.
js
"
this
)
;
loadScripts
(
{
name
:
"
common
.
js
"
dir
:
MOCHITESTS_DIR
}
{
name
:
"
layout
.
js
"
dir
:
MOCHITESTS_DIR
}
{
name
:
"
promisified
-
events
.
js
"
dir
:
MOCHITESTS_DIR
}
)
;
async
function
verifyAttributeCached
(
accessible
attribute
)
{
await
untilCacheOk
(
(
)
=
>
{
try
{
accessible
.
cache
.
getStringProperty
(
attribute
)
;
return
true
;
}
catch
(
e
)
{
return
false
;
}
}
{
attribute
}
is
present
in
the
cache
)
;
}
function
verifyAttributeCachedNoRetry
(
accessible
attribute
)
{
try
{
accessible
.
cache
.
getStringProperty
(
attribute
)
;
ok
(
true
{
attribute
}
is
present
in
the
cache
)
;
}
catch
(
e
)
{
ok
(
false
{
attribute
}
is
not
present
in
the
cache
)
;
}
}
async
function
testAttributeCachePresence
(
accessible
attribute
queryCb
)
{
let
hasAttribute
;
try
{
accessible
.
cache
.
getStringProperty
(
attribute
)
;
hasAttribute
=
true
;
}
catch
(
e
)
{
hasAttribute
=
false
;
}
ok
(
!
hasAttribute
{
attribute
}
is
not
present
in
cache
)
;
info
(
Querying
{
attribute
}
in
cache
)
;
queryCb
(
)
;
await
verifyAttributeCached
(
accessible
attribute
)
;
}
async
function
testCachingPerPlatform
(
accessible
attribute
queryCb
)
{
if
(
AppConstants
.
platform
=
=
"
linux
"
&
&
(
attribute
=
=
"
language
"
|
|
attribute
=
=
"
text
"
|
|
attribute
=
=
"
style
"
|
|
attribute
=
=
"
viewport
"
)
)
{
await
verifyAttributeCached
(
accessible
attribute
)
;
}
else
if
(
AppConstants
.
platform
=
=
"
macosx
"
&
&
(
attribute
=
=
"
headers
"
|
|
attribute
=
=
"
colspan
"
|
|
attribute
=
=
"
rowspan
"
|
|
attribute
=
=
"
layout
-
guess
"
|
|
attribute
=
=
"
language
"
|
|
attribute
=
=
"
text
"
|
|
attribute
=
=
"
style
"
|
|
attribute
=
=
"
viewport
"
)
)
{
queryCb
(
)
;
await
verifyAttributeCached
(
accessible
attribute
)
;
}
else
{
await
testAttributeCachePresence
(
accessible
attribute
queryCb
)
;
}
}
