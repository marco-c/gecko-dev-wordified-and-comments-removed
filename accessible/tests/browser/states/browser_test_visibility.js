"
use
strict
"
;
loadScripts
(
{
name
:
"
role
.
js
"
dir
:
MOCHITESTS_DIR
}
{
name
:
"
states
.
js
"
dir
:
MOCHITESTS_DIR
}
)
;
async
function
runTest
(
browser
accDoc
)
{
let
getAcc
=
id
=
>
findAccessibleChildByID
(
accDoc
id
)
;
testStates
(
getAcc
(
"
div
"
)
0
0
STATE_INVISIBLE
|
STATE_OFFSCREEN
)
;
let
input
=
getAcc
(
"
input_scrolledoff
"
)
;
testStates
(
input
STATE_OFFSCREEN
0
STATE_INVISIBLE
)
;
let
lastLi
=
getAcc
(
"
li_last
"
)
;
testStates
(
lastLi
STATE_OFFSCREEN
0
STATE_INVISIBLE
)
;
await
ContentTask
.
spawn
(
browser
{
}
(
)
=
>
{
content
.
document
.
getElementById
(
"
li_last
"
)
.
scrollIntoView
(
true
)
;
}
)
;
testStates
(
lastLi
0
0
STATE_OFFSCREEN
|
STATE_INVISIBLE
)
;
let
firstLi
=
getAcc
(
"
li_first
"
)
;
testStates
(
firstLi
STATE_OFFSCREEN
0
STATE_INVISIBLE
)
;
let
newTab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
)
;
testStates
(
getAcc
(
"
div
"
)
STATE_OFFSCREEN
0
STATE_INVISIBLE
)
;
await
BrowserTestUtils
.
removeTab
(
newTab
)
;
}
addAccessibleTask
(
<
div
id
=
"
div
"
style
=
"
border
:
2px
solid
blue
;
width
:
500px
;
height
:
110vh
;
"
>
<
/
div
>
<
input
id
=
"
input_scrolledoff
"
>
<
ul
style
=
"
border
:
2px
solid
red
;
width
:
100px
;
height
:
50px
;
overflow
:
auto
;
"
>
<
li
id
=
"
li_first
"
>
item1
<
/
li
>
<
li
>
item2
<
/
li
>
<
li
>
item3
<
/
li
>
<
li
>
item4
<
/
li
>
<
li
>
item5
<
/
li
>
<
li
id
=
"
li_last
"
>
item6
<
/
li
>
<
/
ul
>
runTest
)
;
