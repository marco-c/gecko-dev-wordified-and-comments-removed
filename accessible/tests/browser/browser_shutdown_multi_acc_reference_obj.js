"
use
strict
"
;
add_task
(
async
function
(
)
{
let
a11yInit
=
initPromise
(
)
;
let
accService
=
Cc
[
"
mozilla
.
org
/
accessibilityService
;
1
"
]
.
getService
(
Ci
.
nsIAccessibilityService
)
;
await
a11yInit
;
ok
(
accService
"
Service
initialized
"
)
;
let
docAcc
=
accService
.
getAccessibleFor
(
document
)
;
ok
(
docAcc
"
Accessible
document
is
created
"
)
;
let
acc
=
await
new
Promise
(
resolve
=
>
{
let
intervalId
=
setInterval
(
(
)
=
>
{
let
tabAcc
=
accService
.
getAccessibleFor
(
gBrowser
.
mCurrentTab
)
;
if
(
tabAcc
)
{
clearInterval
(
intervalId
)
;
resolve
(
tabAcc
)
;
}
}
10
)
;
}
)
;
ok
(
acc
"
Accessible
object
is
created
"
)
;
let
canShutdown
=
false
;
let
a11yShutdown
=
new
Promise
(
(
resolve
reject
)
=
>
shutdownPromise
(
)
.
then
(
flag
=
>
canShutdown
?
resolve
(
)
:
reject
(
"
Accessible
service
was
shut
down
incorrectly
"
)
)
)
;
accService
=
null
;
ok
(
!
accService
"
Service
is
removed
"
)
;
forceGC
(
)
;
await
new
Promise
(
resolve
=
>
executeSoon
(
resolve
)
)
;
docAcc
=
null
;
ok
(
!
docAcc
"
Accessible
document
is
removed
"
)
;
forceGC
(
)
;
await
new
Promise
(
resolve
=
>
executeSoon
(
resolve
)
)
;
canShutdown
=
true
;
acc
=
null
;
ok
(
!
acc
"
Accessible
object
is
removed
"
)
;
forceGC
(
)
;
await
a11yShutdown
;
}
)
;
