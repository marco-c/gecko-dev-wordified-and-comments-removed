"
use
strict
"
;
add_task
(
async
function
(
)
{
await
setE10sPrefs
(
)
;
let
a11yInit
=
initPromise
(
)
;
let
accService
=
Cc
[
"
mozilla
.
org
/
accessibilityService
;
1
"
]
.
getService
(
Ci
.
nsIAccessibilityService
)
;
ok
(
accService
"
Service
initialized
"
)
;
await
a11yInit
;
await
BrowserTestUtils
.
withNewTab
(
{
gBrowser
url
:
data
:
text
/
html
<
html
>
<
head
>
<
meta
charset
=
"
utf
-
8
"
/
>
<
title
>
Accessibility
Test
<
/
title
>
<
/
head
>
<
body
>
<
div
id
=
"
div
"
style
=
"
visibility
:
hidden
;
"
>
<
/
div
>
<
/
body
>
<
/
html
>
}
async
function
(
browser
)
{
let
onShow
=
waitForEvent
(
Ci
.
nsIAccessibleEvent
.
EVENT_SHOW
"
div
"
)
;
await
invokeSetStyle
(
browser
"
div
"
"
visibility
"
"
visible
"
)
;
let
showEvent
=
await
onShow
;
let
divAcc
=
showEvent
.
accessible
;
ok
(
divAcc
"
Accessible
proxy
is
created
"
)
;
onShow
=
null
;
showEvent
=
null
;
forceGC
(
)
;
let
canShutdown
=
false
;
let
a11yShutdown
=
new
Promise
(
(
resolve
reject
)
=
>
shutdownPromise
(
)
.
then
(
flag
=
>
canShutdown
?
resolve
(
)
:
reject
(
"
Accessible
service
was
shut
down
incorrectly
"
)
)
)
;
accService
=
null
;
ok
(
!
accService
"
Service
is
removed
"
)
;
forceGC
(
)
;
await
new
Promise
(
resolve
=
>
executeSoon
(
resolve
)
)
;
canShutdown
=
true
;
divAcc
=
null
;
ok
(
!
divAcc
"
Accessible
proxy
is
removed
"
)
;
forceGC
(
)
;
await
a11yShutdown
;
}
)
;
await
unsetE10sPrefs
(
)
;
}
)
;
