"
use
strict
"
;
addUiaTask
(
<
button
id
=
"
button
"
>
button
<
/
button
>
<
p
id
=
"
p
"
>
p
<
/
p
>
async
function
testInvoke
(
)
{
await
definePyVar
(
"
doc
"
getDocUia
(
)
)
;
await
assignPyVarToUiaWithId
(
"
button
"
)
;
await
definePyVar
(
"
pattern
"
getUiaPattern
(
button
"
Invoke
"
)
)
;
ok
(
await
runPython
(
bool
(
pattern
)
)
"
button
has
Invoke
pattern
"
)
;
info
(
"
Calling
Invoke
on
button
"
)
;
let
focused
=
waitForEvent
(
EVENT_FOCUS
"
button
"
)
;
if
(
gIsUiaEnabled
)
{
await
setUpWaitForUiaEvent
(
"
Invoke_Invoked
"
"
button
"
)
;
}
await
runPython
(
pattern
.
Invoke
(
)
)
;
await
focused
;
ok
(
true
"
button
got
focus
"
)
;
if
(
gIsUiaEnabled
)
{
await
waitForUiaEvent
(
)
;
ok
(
true
"
button
got
Invoked
event
"
)
;
}
let
hasPattern
=
await
runPython
(
p
=
findUiaByDomId
(
doc
"
p
"
)
return
bool
(
getUiaPattern
(
p
"
Invoke
"
)
)
)
;
ok
(
!
hasPattern
"
p
doesn
'
t
have
Invoke
pattern
"
)
;
}
)
;
