#
include
"
DocAccessiblePlatformExtChild
.
h
"
#
include
"
DocAccessibleChild
.
h
"
#
include
"
AccessibleWrap
.
h
"
namespace
mozilla
{
namespace
a11y
{
mozilla
:
:
ipc
:
:
IPCResult
DocAccessiblePlatformExtChild
:
:
RecvPivot
(
uint64_t
aID
int32_t
aGranularity
bool
aForward
bool
aInclusive
)
{
if
(
auto
acc
=
IdToAccessibleWrap
(
aID
)
)
{
}
return
IPC_OK
(
)
;
}
mozilla
:
:
ipc
:
:
IPCResult
DocAccessiblePlatformExtChild
:
:
RecvNavigateText
(
int32_t
aID
int32_t
aGranularity
int32_t
aStartOffset
int32_t
aEndOffset
bool
aForward
bool
aSelect
)
{
if
(
auto
acc
=
IdToAccessibleWrap
(
aID
)
)
{
}
return
IPC_OK
(
)
;
}
mozilla
:
:
ipc
:
:
IPCResult
DocAccessiblePlatformExtChild
:
:
RecvSetSelection
(
uint64_t
aID
int32_t
aStart
int32_t
aEnd
)
{
if
(
auto
acc
=
IdToAccessibleWrap
(
aID
)
)
{
}
return
IPC_OK
(
)
;
}
mozilla
:
:
ipc
:
:
IPCResult
DocAccessiblePlatformExtChild
:
:
RecvCut
(
uint64_t
aID
)
{
if
(
auto
acc
=
IdToAccessibleWrap
(
aID
)
)
{
}
return
IPC_OK
(
)
;
}
mozilla
:
:
ipc
:
:
IPCResult
DocAccessiblePlatformExtChild
:
:
RecvCopy
(
uint64_t
aID
)
{
if
(
auto
acc
=
IdToAccessibleWrap
(
aID
)
)
{
}
return
IPC_OK
(
)
;
}
mozilla
:
:
ipc
:
:
IPCResult
DocAccessiblePlatformExtChild
:
:
RecvPaste
(
uint64_t
aID
)
{
if
(
auto
acc
=
IdToAccessibleWrap
(
aID
)
)
{
}
return
IPC_OK
(
)
;
}
mozilla
:
:
ipc
:
:
IPCResult
DocAccessiblePlatformExtChild
:
:
RecvExploreByTouch
(
uint64_t
aID
float
aX
float
aY
)
{
return
IPC_OK
(
)
;
}
AccessibleWrap
*
DocAccessiblePlatformExtChild
:
:
IdToAccessibleWrap
(
const
uint64_t
&
aID
)
const
{
return
static_cast
<
AccessibleWrap
*
>
(
static_cast
<
DocAccessibleChild
*
>
(
Manager
(
)
)
-
>
IdToAccessible
(
aID
)
)
;
}
}
}
