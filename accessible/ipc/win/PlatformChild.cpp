#
include
"
mozilla
/
a11y
/
PlatformChild
.
h
"
#
include
"
mozilla
/
mscom
/
EnsureMTA
.
h
"
#
include
"
mozilla
/
mscom
/
InterceptorLog
.
h
"
#
include
"
Accessible2
.
h
"
#
include
"
Accessible2_2
.
h
"
#
include
"
AccessibleHypertext2
.
h
"
#
include
"
AccessibleTableCell
.
h
"
#
include
"
AccessibleHypertext2_i
.
c
"
namespace
mozilla
{
namespace
a11y
{
static
const
mozilla
:
:
mscom
:
:
ArrayData
sPlatformChildArrayData
[
]
=
{
{
IID_IEnumVARIANT
3
1
VT_DISPATCH
IID_IDispatch
2
}
{
IID_IAccessible2
30
1
VT_UNKNOWN
|
VT_BYREF
IID_IAccessibleRelation
2
}
{
IID_IAccessibleRelation
7
1
VT_UNKNOWN
|
VT_BYREF
IID_IUnknown
2
}
{
IID_IAccessible2_2
48
2
VT_UNKNOWN
|
VT_BYREF
IID_IUnknown
3
mozilla
:
:
mscom
:
:
ArrayData
:
:
Flag
:
:
eAllocatedByServer
}
{
IID_IAccessibleTableCell
4
0
VT_UNKNOWN
|
VT_BYREF
IID_IUnknown
1
mozilla
:
:
mscom
:
:
ArrayData
:
:
Flag
:
:
eAllocatedByServer
}
{
IID_IAccessibleTableCell
7
0
VT_UNKNOWN
|
VT_BYREF
IID_IUnknown
1
mozilla
:
:
mscom
:
:
ArrayData
:
:
Flag
:
:
eAllocatedByServer
}
{
IID_IAccessibleHypertext2
25
0
VT_UNKNOWN
|
VT_BYREF
IID_IUnknown
1
mozilla
:
:
mscom
:
:
ArrayData
:
:
Flag
:
:
eAllocatedByServer
}
}
;
PlatformChild
:
:
PlatformChild
(
)
:
mAccTypelib
(
mozilla
:
:
mscom
:
:
RegisterTypelib
(
L
"
oleacc
.
dll
"
mozilla
:
:
mscom
:
:
RegistrationFlags
:
:
eUseSystemDirectory
)
)
mMiscTypelib
(
mozilla
:
:
mscom
:
:
RegisterTypelib
(
L
"
Accessible
.
tlb
"
)
)
{
mozilla
:
:
mscom
:
:
InterceptorLog
:
:
Init
(
)
;
mozilla
:
:
mscom
:
:
RegisterArrayData
(
sPlatformChildArrayData
)
;
UniquePtr
<
mozilla
:
:
mscom
:
:
RegisteredProxy
>
customProxy
;
mozilla
:
:
mscom
:
:
EnsureMTA
(
[
&
customProxy
]
(
)
-
>
void
{
customProxy
=
Move
(
mozilla
:
:
mscom
:
:
RegisterProxy
(
)
)
;
}
)
;
mCustomProxy
=
Move
(
customProxy
)
;
UniquePtr
<
mozilla
:
:
mscom
:
:
RegisteredProxy
>
ia2Proxy
;
mozilla
:
:
mscom
:
:
EnsureMTA
(
[
&
ia2Proxy
]
(
)
-
>
void
{
ia2Proxy
=
Move
(
mozilla
:
:
mscom
:
:
RegisterProxy
(
L
"
ia2marshal
.
dll
"
)
)
;
}
)
;
mIA2Proxy
=
Move
(
ia2Proxy
)
;
}
}
}
