if
CONFIG
[
"
COMPILE_ENVIRONMENT
"
]
and
CONFIG
[
"
ACCESSIBILITY
"
]
:
DIRS
+
=
[
"
handler
"
"
typelib
"
]
if
CONFIG
[
"
ACCESSIBILITY
"
]
:
IPDL_SOURCES
+
=
[
"
PDocAccessible
.
ipdl
"
]
EXPORTS
.
mozilla
.
a11y
+
=
[
"
COMPtrTypes
.
h
"
"
DocAccessibleChild
.
h
"
"
HandlerProvider
.
h
"
"
PlatformChild
.
h
"
"
RemoteAccessible
.
h
"
]
SOURCES
+
=
[
"
!
.
/
handler
/
HandlerData_c
.
c
"
"
COMPtrTypes
.
cpp
"
"
DocAccessibleChild
.
cpp
"
"
HandlerProvider
.
cpp
"
"
PlatformChild
.
cpp
"
"
RemoteAccessible
.
cpp
"
]
if
CONFIG
[
"
CC_TYPE
"
]
=
=
"
clang
-
cl
"
:
SOURCES
[
"
!
.
/
handler
/
HandlerData_c
.
c
"
]
.
flags
+
=
[
"
-
DUserMarshalRoutines
=
UserMarshalRoutines__HandlerData_c
"
]
LOCAL_INCLUDES
+
=
[
"
/
accessible
/
base
"
"
/
accessible
/
generic
"
"
/
accessible
/
windows
/
ia2
"
"
/
accessible
/
windows
/
msaa
"
"
/
accessible
/
xpcom
"
]
if
CONFIG
[
"
CC_TYPE
"
]
=
=
"
clang
-
cl
"
:
CFLAGS
+
=
[
"
-
Wno
-
extern
-
initializer
"
"
-
Wno
-
incompatible
-
pointer
-
types
"
"
-
Wno
-
missing
-
braces
"
"
-
Wno
-
unused
-
const
-
variable
"
]
CXXFLAGS
+
=
[
"
-
Wno
-
missing
-
braces
"
]
include
(
"
/
ipc
/
chromium
/
chromium
-
config
.
mozbuild
"
)
FINAL_LIBRARY
=
"
xul
"
