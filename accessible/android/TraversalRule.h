#
ifndef
_TraversalRule_H_
#
define
_TraversalRule_H_
#
include
"
Pivot
.
h
"
namespace
mozilla
{
namespace
a11y
{
class
Accessible
;
class
TraversalRule
final
:
public
PivotRule
{
public
:
TraversalRule
(
)
;
explicit
TraversalRule
(
int32_t
aGranularity
)
;
~
TraversalRule
(
)
=
default
;
virtual
uint16_t
Match
(
Accessible
*
aAccessible
)
override
;
private
:
bool
IsSingleLineage
(
Accessible
*
aAccessible
)
;
bool
IsFlatSubtree
(
const
Accessible
*
aAccessible
)
;
bool
IsListItemBullet
(
const
Accessible
*
aAccessible
)
;
bool
HasName
(
const
Accessible
*
aAccessible
)
;
uint16_t
DefaultMatch
(
Accessible
*
aAccessible
)
;
uint16_t
LinkMatch
(
Accessible
*
aAccessible
)
;
uint16_t
HeadingMatch
(
Accessible
*
aAccessible
)
;
uint16_t
ControlMatch
(
Accessible
*
aAccessible
)
;
uint16_t
SectionMatch
(
Accessible
*
aAccessible
)
;
uint16_t
LandmarkMatch
(
Accessible
*
aAccessible
)
;
int32_t
mGranularity
;
}
;
}
}
#
endif
