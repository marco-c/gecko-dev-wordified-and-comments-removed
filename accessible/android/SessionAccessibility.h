#
ifndef
mozilla_a11y_SessionAccessibility_h_
#
define
mozilla_a11y_SessionAccessibility_h_
#
include
"
GeneratedJNINatives
.
h
"
#
include
"
nsWindow
.
h
"
namespace
mozilla
{
namespace
a11y
{
class
SessionAccessibility
final
:
public
java
:
:
SessionAccessibility
:
:
NativeProvider
:
:
Natives
<
SessionAccessibility
>
{
public
:
typedef
java
:
:
SessionAccessibility
:
:
NativeProvider
:
:
Natives
<
SessionAccessibility
>
Base
;
SessionAccessibility
(
nsWindow
:
:
NativePtr
<
SessionAccessibility
>
*
aPtr
nsWindow
*
aWindow
java
:
:
SessionAccessibility
:
:
NativeProvider
:
:
Param
aSessionAccessibility
)
:
mWindow
(
aPtr
aWindow
)
mSessionAccessibility
(
aSessionAccessibility
)
{
SetAttached
(
true
nullptr
)
;
}
void
OnDetach
(
already_AddRefed
<
Runnable
>
aDisposer
)
{
SetAttached
(
false
std
:
:
move
(
aDisposer
)
)
;
}
const
java
:
:
SessionAccessibility
:
:
NativeProvider
:
:
Ref
&
GetJavaAccessibility
(
)
{
return
mSessionAccessibility
;
}
using
Base
:
:
AttachNative
;
using
Base
:
:
DisposeNative
;
NS_INLINE_DECL_REFCOUNTING
(
SessionAccessibility
)
private
:
~
SessionAccessibility
(
)
{
}
void
SetAttached
(
bool
aAttached
already_AddRefed
<
Runnable
>
aRunnable
)
;
nsWindow
:
:
WindowPtr
<
SessionAccessibility
>
mWindow
;
java
:
:
SessionAccessibility
:
:
NativeProvider
:
:
GlobalRef
mSessionAccessibility
;
}
;
}
}
#
endif
