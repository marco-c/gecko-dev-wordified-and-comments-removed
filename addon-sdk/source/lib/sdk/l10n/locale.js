"
use
strict
"
;
module
.
metadata
=
{
"
stability
"
:
"
unstable
"
}
;
const
prefs
=
require
(
"
.
.
/
preferences
/
service
"
)
;
const
{
Cu
Cc
Ci
}
=
require
(
"
chrome
"
)
;
const
{
Services
}
=
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
function
getPreferedLocales
(
caseSensitve
)
{
const
locales
=
Services
.
locale
.
getRequestedLocales
(
)
;
if
(
!
locales
.
includes
(
'
en
-
US
'
)
)
{
locales
.
push
(
'
en
-
US
'
)
;
}
return
locales
;
}
exports
.
getPreferedLocales
=
getPreferedLocales
;
exports
.
findClosestLocale
=
function
findClosestLocale
(
aLocales
aMatchLocales
)
{
aMatchLocales
=
aMatchLocales
|
|
getPreferedLocales
(
)
;
let
bestmatch
=
null
;
let
bestmatchcount
=
0
;
let
bestpartcount
=
0
;
for
(
let
locale
of
aMatchLocales
)
{
let
lparts
=
locale
.
split
(
"
-
"
)
;
for
(
let
localized
of
aLocales
)
{
let
found
=
localized
.
toLowerCase
(
)
;
if
(
locale
=
=
found
)
return
localized
;
let
fparts
=
found
.
split
(
"
-
"
)
;
if
(
bestmatch
&
&
fparts
.
length
<
bestmatchcount
)
continue
;
let
maxmatchcount
=
Math
.
min
(
fparts
.
length
lparts
.
length
)
;
let
matchcount
=
0
;
while
(
matchcount
<
maxmatchcount
&
&
fparts
[
matchcount
]
=
=
lparts
[
matchcount
]
)
matchcount
+
+
;
if
(
matchcount
>
bestmatchcount
|
|
(
matchcount
=
=
bestmatchcount
&
&
fparts
.
length
<
bestpartcount
)
)
{
bestmatch
=
localized
;
bestmatchcount
=
matchcount
;
bestpartcount
=
fparts
.
length
;
}
}
if
(
bestmatch
)
return
bestmatch
;
}
return
null
;
}
