"
use
strict
"
;
module
.
metadata
=
{
"
stability
"
:
"
experimental
"
}
;
const
events
=
require
(
"
.
.
/
system
/
events
"
)
;
lazyRequire
(
this
"
.
.
/
event
/
core
"
"
emit
"
)
;
var
channel
=
{
}
;
function
forward
(
{
subject
type
data
}
)
{
return
emit
(
channel
"
data
"
{
target
:
subject
type
:
type
data
:
data
}
)
;
}
[
"
popupshowing
"
"
popuphiding
"
"
popupshown
"
"
popuphidden
"
"
document
-
element
-
inserted
"
"
DOMContentLoaded
"
"
load
"
]
.
forEach
(
type
=
>
events
.
on
(
type
forward
)
)
;
exports
.
events
=
channel
;
