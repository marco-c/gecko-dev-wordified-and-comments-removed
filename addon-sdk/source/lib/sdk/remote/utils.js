"
use
strict
"
;
const
{
Class
}
=
require
(
'
.
.
/
core
/
heritage
'
)
;
const
{
List
addListItem
removeListItem
}
=
require
(
'
.
.
/
util
/
list
'
)
;
lazyRequire
(
this
'
.
.
/
event
/
core
'
'
emit
'
)
;
lazyRequire
(
this
'
.
.
/
event
/
utils
'
'
pipe
'
)
;
const
EventParent
=
Class
(
{
implements
:
[
List
]
attachItem
:
function
(
item
)
{
addListItem
(
this
item
)
;
pipe
(
item
.
port
this
.
port
)
;
pipe
(
item
this
)
;
item
.
once
(
'
detach
'
(
)
=
>
{
removeListItem
(
this
item
)
;
}
)
emit
(
this
'
attach
'
item
)
;
}
forEvery
:
function
(
listener
)
{
for
(
let
item
of
this
)
listener
(
item
)
;
this
.
on
(
'
attach
'
listener
)
;
}
}
)
;
exports
.
EventParent
=
EventParent
;
