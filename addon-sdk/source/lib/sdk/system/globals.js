"
use
strict
"
;
module
.
metadata
=
{
"
stability
"
:
"
unstable
"
}
;
defineLazyGetter
(
this
"
console
"
(
)
=
>
new
(
require
(
'
.
.
/
console
/
plain
-
text
'
)
.
PlainTextConsole
)
(
)
)
;
exports
=
module
.
exports
=
{
}
;
defineLazyGetter
(
exports
"
console
"
(
)
=
>
console
)
;
defineLazyGetter
(
exports
'
define
'
function
(
)
{
return
(
.
.
.
args
)
=
>
{
let
factory
=
args
.
pop
(
)
;
factory
.
call
(
this
this
.
require
this
.
exports
this
.
module
)
;
}
;
}
)
;
function
defineLazyGetter
(
object
prop
getter
)
{
let
redefine
=
(
obj
value
)
=
>
{
Object
.
defineProperty
(
obj
prop
{
configurable
:
true
writable
:
true
value
}
)
;
return
value
;
}
;
Object
.
defineProperty
(
object
prop
{
configurable
:
true
get
(
)
{
return
redefine
(
this
getter
.
call
(
this
)
)
;
}
set
(
value
)
{
redefine
(
this
value
)
;
}
}
)
;
}
