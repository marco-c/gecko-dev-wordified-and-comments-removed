"
use
strict
"
;
module
.
metadata
=
{
"
stability
"
:
"
unstable
"
}
;
var
{
Cc
Ci
CC
}
=
require
(
'
chrome
'
)
;
var
{
PlainTextConsole
}
=
require
(
'
.
.
/
console
/
plain
-
text
'
)
;
var
{
stdout
}
=
require
(
'
.
.
/
system
'
)
;
var
ScriptError
=
CC
(
'
mozilla
.
org
/
scripterror
;
1
'
'
nsIScriptError
'
)
;
var
consoleService
=
Cc
[
'
mozilla
.
org
/
consoleservice
;
1
'
]
.
getService
(
Ci
.
nsIConsoleService
)
;
exports
.
dump
=
stdout
.
write
;
exports
.
console
=
new
PlainTextConsole
(
)
;
Object
.
defineProperty
(
exports
'
define
'
{
configurable
:
true
get
:
function
(
)
{
let
sandbox
=
this
;
return
function
define
(
factory
)
{
factory
=
Array
.
slice
(
arguments
)
.
pop
(
)
;
factory
.
call
(
sandbox
sandbox
.
require
sandbox
.
exports
sandbox
.
module
)
;
}
}
set
:
function
(
value
)
{
Object
.
defineProperty
(
this
'
define
'
{
configurable
:
true
enumerable
:
true
value
}
)
;
}
}
)
;
