#
ifndef
MOZILLA_PAINTING_MATRIXSTACK_H
#
define
MOZILLA_PAINTING_MATRIXSTACK_H
#
include
"
nsTArray
.
h
"
#
include
"
mozilla
/
gfx
/
MatrixFwd
.
h
"
namespace
mozilla
{
template
<
typename
T
>
class
MatrixStack
{
public
:
MatrixStack
(
)
=
default
;
~
MatrixStack
(
)
{
MOZ_ASSERT
(
mMatrices
.
IsEmpty
(
)
)
;
}
const
T
&
CurrentMatrix
(
)
const
{
return
mCurrentMatrix
;
}
bool
HasTransform
(
)
const
{
return
mMatrices
.
Length
(
)
>
0
;
}
void
Push
(
const
T
&
aMatrix
)
{
mMatrices
.
AppendElement
(
mCurrentMatrix
)
;
mCurrentMatrix
=
aMatrix
*
mCurrentMatrix
;
}
void
Pop
(
)
{
MOZ_ASSERT
(
mMatrices
.
Length
(
)
>
0
)
;
mCurrentMatrix
=
mMatrices
.
PopLastElement
(
)
;
}
private
:
T
mCurrentMatrix
;
AutoTArray
<
T
2
>
mMatrices
;
}
;
typedef
MatrixStack
<
gfx
:
:
Matrix4x4Flagged
>
MatrixStack4x4
;
}
#
endif
