#
include
"
nsSVGGFrame
.
h
"
#
include
"
mozilla
/
PresShell
.
h
"
#
include
"
nsGkAtoms
.
h
"
#
include
"
nsIFrame
.
h
"
#
include
"
nsSVGIntegrationUtils
.
h
"
#
include
"
nsSVGUtils
.
h
"
#
include
"
SVGGraphicsElement
.
h
"
#
include
"
SVGTransformableElement
.
h
"
using
namespace
mozilla
;
using
namespace
mozilla
:
:
dom
;
nsIFrame
*
NS_NewSVGGFrame
(
PresShell
*
aPresShell
ComputedStyle
*
aStyle
)
{
return
new
(
aPresShell
)
nsSVGGFrame
(
aStyle
aPresShell
-
>
GetPresContext
(
)
)
;
}
NS_IMPL_FRAMEARENA_HELPERS
(
nsSVGGFrame
)
#
ifdef
DEBUG
void
nsSVGGFrame
:
:
Init
(
nsIContent
*
aContent
nsContainerFrame
*
aParent
nsIFrame
*
aPrevInFlow
)
{
NS_ASSERTION
(
aContent
-
>
IsSVGElement
(
)
&
&
static_cast
<
SVGElement
*
>
(
aContent
)
-
>
IsTransformable
(
)
"
The
element
doesn
'
t
support
nsIDOMSVGTransformable
"
)
;
nsSVGDisplayContainerFrame
:
:
Init
(
aContent
aParent
aPrevInFlow
)
;
}
#
endif
nsresult
nsSVGGFrame
:
:
AttributeChanged
(
int32_t
aNameSpaceID
nsAtom
*
aAttribute
int32_t
aModType
)
{
if
(
aNameSpaceID
=
=
kNameSpaceID_None
&
&
aAttribute
=
=
nsGkAtoms
:
:
transform
)
{
NotifySVGChanged
(
TRANSFORM_CHANGED
)
;
}
return
NS_OK
;
}
