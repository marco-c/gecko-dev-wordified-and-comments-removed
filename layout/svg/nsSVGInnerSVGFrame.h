#
ifndef
__NS_SVGINNERSVGFRAME_H__
#
define
__NS_SVGINNERSVGFRAME_H__
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsAutoPtr
.
h
"
#
include
"
nsSVGContainerFrame
.
h
"
#
include
"
nsISVGSVGFrame
.
h
"
class
gfxContext
;
class
nsSVGInnerSVGFrame
final
:
public
nsSVGDisplayContainerFrame
public
nsISVGSVGFrame
{
friend
nsIFrame
*
NS_NewSVGInnerSVGFrame
(
nsIPresShell
*
aPresShell
nsStyleContext
*
aContext
)
;
protected
:
explicit
nsSVGInnerSVGFrame
(
nsStyleContext
*
aContext
)
:
nsSVGDisplayContainerFrame
(
aContext
kClassID
mozilla
:
:
LayoutFrameType
:
:
SVGInnerSVG
)
{
}
public
:
NS_DECL_QUERYFRAME
NS_DECL_FRAMEARENA_HELPERS
(
nsSVGInnerSVGFrame
)
#
ifdef
DEBUG
virtual
void
Init
(
nsIContent
*
aContent
nsContainerFrame
*
aParent
nsIFrame
*
aPrevInFlow
)
override
;
#
endif
#
ifdef
DEBUG_FRAME_DUMP
virtual
nsresult
GetFrameName
(
nsAString
&
aResult
)
const
override
{
return
MakeFrameName
(
NS_LITERAL_STRING
(
"
SVGInnerSVG
"
)
aResult
)
;
}
#
endif
virtual
nsresult
AttributeChanged
(
int32_t
aNameSpaceID
nsIAtom
*
aAttribute
int32_t
aModType
)
override
;
virtual
void
PaintSVG
(
gfxContext
&
aContext
const
gfxMatrix
&
aTransform
imgDrawingParams
&
aImgParams
const
nsIntRect
*
aDirtyRect
=
nullptr
)
override
;
virtual
void
ReflowSVG
(
)
override
;
virtual
void
NotifySVGChanged
(
uint32_t
aFlags
)
override
;
SVGBBox
GetBBoxContribution
(
const
Matrix
&
aToBBoxUserspace
uint32_t
aFlags
)
override
;
virtual
nsIFrame
*
GetFrameForPoint
(
const
gfxPoint
&
aPoint
)
override
;
virtual
gfxMatrix
GetCanvasTM
(
)
override
;
virtual
bool
HasChildrenOnlyTransform
(
Matrix
*
aTransform
)
const
override
;
virtual
void
NotifyViewportOrTransformChanged
(
uint32_t
aFlags
)
override
;
protected
:
nsAutoPtr
<
gfxMatrix
>
mCanvasTM
;
}
;
#
endif
