#
include
"
SVGImageContext
.
h
"
#
include
"
gfxUtils
.
h
"
#
include
"
mozilla
/
Preferences
.
h
"
#
include
"
nsContentUtils
.
h
"
#
include
"
nsIFrame
.
h
"
#
include
"
nsPresContext
.
h
"
#
include
"
nsStyleStruct
.
h
"
namespace
mozilla
{
void
SVGImageContext
:
:
MaybeStoreContextPaint
(
Maybe
<
SVGImageContext
>
&
aContext
nsIFrame
*
aFromFrame
imgIContainer
*
aImgContainer
)
{
static
bool
sEnabledForContent
=
false
;
static
bool
sEnabledForContentCached
=
false
;
if
(
!
sEnabledForContentCached
)
{
Preferences
:
:
AddBoolVarCache
(
&
sEnabledForContent
"
svg
.
context
-
properties
.
content
.
enabled
"
false
)
;
sEnabledForContentCached
=
true
;
}
const
nsStyleSVG
*
style
=
aFromFrame
-
>
StyleSVG
(
)
;
if
(
!
style
-
>
ExposesContextProperties
(
)
)
{
return
;
}
if
(
!
sEnabledForContent
&
&
!
nsContentUtils
:
:
IsChromeDoc
(
aFromFrame
-
>
PresContext
(
)
-
>
Document
(
)
)
)
{
return
;
}
if
(
aImgContainer
-
>
GetType
(
)
!
=
imgIContainer
:
:
TYPE_VECTOR
)
{
return
;
}
bool
haveContextPaint
=
false
;
RefPtr
<
SVGEmbeddingContextPaint
>
contextPaint
=
new
SVGEmbeddingContextPaint
(
)
;
if
(
(
style
-
>
mContextPropsBits
&
NS_STYLE_CONTEXT_PROPERTY_FILL
)
&
&
style
-
>
mFill
.
Type
(
)
=
=
eStyleSVGPaintType_Color
)
{
haveContextPaint
=
true
;
contextPaint
-
>
SetFill
(
style
-
>
mFill
.
GetColor
(
)
)
;
}
if
(
(
style
-
>
mContextPropsBits
&
NS_STYLE_CONTEXT_PROPERTY_STROKE
)
&
&
style
-
>
mStroke
.
Type
(
)
=
=
eStyleSVGPaintType_Color
)
{
haveContextPaint
=
true
;
contextPaint
-
>
SetStroke
(
style
-
>
mStroke
.
GetColor
(
)
)
;
}
if
(
haveContextPaint
)
{
if
(
!
aContext
)
{
aContext
.
emplace
(
)
;
}
aContext
-
>
mContextPaint
=
contextPaint
.
forget
(
)
;
}
}
}
