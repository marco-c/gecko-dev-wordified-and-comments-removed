#
include
"
SVGImageContext
.
h
"
#
include
"
gfxUtils
.
h
"
#
include
"
mozilla
/
Preferences
.
h
"
#
include
"
nsContentUtils
.
h
"
#
include
"
nsIFrame
.
h
"
#
include
"
nsPresContext
.
h
"
#
include
"
nsStyleStruct
.
h
"
namespace
mozilla
{
void
SVGImageContext
:
:
MaybeStoreContextPaint
(
Maybe
<
SVGImageContext
>
&
aContext
nsIFrame
*
aFromFrame
imgIContainer
*
aImgContainer
)
{
return
MaybeStoreContextPaint
(
aContext
aFromFrame
-
>
Style
(
)
aImgContainer
)
;
}
void
SVGImageContext
:
:
MaybeStoreContextPaint
(
Maybe
<
SVGImageContext
>
&
aContext
ComputedStyle
*
aFromComputedStyle
imgIContainer
*
aImgContainer
)
{
const
nsStyleSVG
*
style
=
aFromComputedStyle
-
>
StyleSVG
(
)
;
if
(
!
style
-
>
ExposesContextProperties
(
)
)
{
return
;
}
if
(
aImgContainer
-
>
GetType
(
)
!
=
imgIContainer
:
:
TYPE_VECTOR
)
{
return
;
}
bool
haveContextPaint
=
false
;
RefPtr
<
SVGEmbeddingContextPaint
>
contextPaint
=
new
SVGEmbeddingContextPaint
(
)
;
if
(
(
style
-
>
mContextPropsBits
&
NS_STYLE_CONTEXT_PROPERTY_FILL
)
&
&
style
-
>
mFill
.
Type
(
)
=
=
eStyleSVGPaintType_Color
)
{
haveContextPaint
=
true
;
contextPaint
-
>
SetFill
(
style
-
>
mFill
.
GetColor
(
aFromComputedStyle
)
)
;
}
if
(
(
style
-
>
mContextPropsBits
&
NS_STYLE_CONTEXT_PROPERTY_STROKE
)
&
&
style
-
>
mStroke
.
Type
(
)
=
=
eStyleSVGPaintType_Color
)
{
haveContextPaint
=
true
;
contextPaint
-
>
SetStroke
(
style
-
>
mStroke
.
GetColor
(
aFromComputedStyle
)
)
;
}
if
(
style
-
>
mContextPropsBits
&
NS_STYLE_CONTEXT_PROPERTY_FILL_OPACITY
)
{
haveContextPaint
=
true
;
contextPaint
-
>
SetFillOpacity
(
style
-
>
mFillOpacity
)
;
}
if
(
style
-
>
mContextPropsBits
&
NS_STYLE_CONTEXT_PROPERTY_STROKE_OPACITY
)
{
haveContextPaint
=
true
;
contextPaint
-
>
SetStrokeOpacity
(
style
-
>
mStrokeOpacity
)
;
}
if
(
haveContextPaint
)
{
if
(
!
aContext
)
{
aContext
.
emplace
(
)
;
}
aContext
-
>
mContextPaint
=
contextPaint
.
forget
(
)
;
}
}
}
