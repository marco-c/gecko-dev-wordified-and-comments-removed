#
include
"
SVGContextPaint
.
h
"
#
include
"
gfxContext
.
h
"
#
include
"
nsIDocument
.
h
"
namespace
mozilla
{
void
SVGContextPaint
:
:
InitStrokeGeometry
(
gfxContext
*
aContext
float
devUnitsPerSVGUnit
)
{
mStrokeWidth
=
aContext
-
>
CurrentLineWidth
(
)
/
devUnitsPerSVGUnit
;
aContext
-
>
CurrentDash
(
mDashes
&
mDashOffset
)
;
for
(
uint32_t
i
=
0
;
i
<
mDashes
.
Length
(
)
;
i
+
+
)
{
mDashes
[
i
]
/
=
devUnitsPerSVGUnit
;
}
mDashOffset
/
=
devUnitsPerSVGUnit
;
}
AutoSetRestoreSVGContextPaint
:
:
AutoSetRestoreSVGContextPaint
(
SVGContextPaint
*
aContextPaint
nsIDocument
*
aSVGDocument
)
:
mSVGDocument
(
aSVGDocument
)
mOuterContextPaint
(
aSVGDocument
-
>
GetProperty
(
nsGkAtoms
:
:
svgContextPaint
)
)
{
MOZ_ASSERT
(
aContextPaint
)
;
MOZ_ASSERT
(
aSVGDocument
-
>
IsBeingUsedAsImage
(
)
"
nsSVGUtils
:
:
GetContextPaint
assumes
this
"
)
;
if
(
mOuterContextPaint
)
{
mSVGDocument
-
>
UnsetProperty
(
nsGkAtoms
:
:
svgContextPaint
)
;
}
DebugOnly
<
nsresult
>
res
=
mSVGDocument
-
>
SetProperty
(
nsGkAtoms
:
:
svgContextPaint
aContextPaint
)
;
NS_WARN_IF_FALSE
(
NS_SUCCEEDED
(
res
)
"
Failed
to
set
context
paint
"
)
;
}
AutoSetRestoreSVGContextPaint
:
:
~
AutoSetRestoreSVGContextPaint
(
)
{
mSVGDocument
-
>
UnsetProperty
(
nsGkAtoms
:
:
svgContextPaint
)
;
if
(
mOuterContextPaint
)
{
DebugOnly
<
nsresult
>
res
=
mSVGDocument
-
>
SetProperty
(
nsGkAtoms
:
:
svgContextPaint
mOuterContextPaint
)
;
NS_WARN_IF_FALSE
(
NS_SUCCEEDED
(
res
)
"
Failed
to
restore
context
paint
"
)
;
}
}
}
