#
ifndef
LAYOUT_SVG_SVGFILTERINSTANCE_H_
#
define
LAYOUT_SVG_SVGFILTERINSTANCE_H_
#
include
"
gfxMatrix
.
h
"
#
include
"
gfxRect
.
h
"
#
include
"
SVGAnimatedNumber
.
h
"
#
include
"
SVGAnimatedNumberPair
.
h
"
#
include
"
SVGFilters
.
h
"
#
include
"
mozilla
/
ServoStyleConsts
.
h
"
namespace
mozilla
{
class
SVGFilterFrame
;
namespace
dom
{
class
SVGFilterElement
;
}
class
SVGFilterInstance
{
using
Point3D
=
gfx
:
:
Point3D
;
using
IntRect
=
gfx
:
:
IntRect
;
using
SourceSurface
=
gfx
:
:
SourceSurface
;
using
FilterPrimitiveDescription
=
gfx
:
:
FilterPrimitiveDescription
;
using
SVGFilterPrimitiveElement
=
dom
:
:
SVGFilterPrimitiveElement
;
using
UserSpaceMetrics
=
dom
:
:
UserSpaceMetrics
;
public
:
SVGFilterInstance
(
const
StyleFilter
&
aFilter
SVGFilterFrame
*
aFilterFrame
nsIContent
*
aTargetContent
const
UserSpaceMetrics
&
aMetrics
const
gfxRect
&
aTargetBBox
const
gfx
:
:
MatrixScalesDouble
&
aUserSpaceToFilterSpaceScale
gfxRect
&
aFilterSpaceBoundsNotSnapped
)
;
bool
IsInitialized
(
)
const
{
return
mInitialized
;
}
nsresult
BuildPrimitives
(
nsTArray
<
FilterPrimitiveDescription
>
&
aPrimitiveDescrs
nsTArray
<
RefPtr
<
SourceSurface
>
>
&
aInputImages
bool
aInputIsTainted
)
;
float
GetPrimitiveNumber
(
uint8_t
aCtxType
const
SVGAnimatedNumber
*
aNumber
)
const
{
return
GetPrimitiveNumber
(
aCtxType
aNumber
-
>
GetAnimValue
(
)
)
;
}
float
GetPrimitiveNumber
(
uint8_t
aCtxType
const
SVGAnimatedNumberPair
*
aNumberPair
SVGAnimatedNumberPair
:
:
PairIndex
aIndex
)
const
{
return
GetPrimitiveNumber
(
aCtxType
aNumberPair
-
>
GetAnimValue
(
aIndex
)
)
;
}
Point3D
ConvertLocation
(
const
Point3D
&
aPoint
)
const
;
gfxRect
UserSpaceToFilterSpace
(
const
gfxRect
&
aUserSpaceRect
)
const
;
private
:
IntRect
ComputeFilterPrimitiveSubregion
(
SVGFilterPrimitiveElement
*
aFilterElement
const
nsTArray
<
FilterPrimitiveDescription
>
&
aPrimitiveDescrs
const
nsTArray
<
int32_t
>
&
aInputIndices
)
;
void
GetInputsAreTainted
(
const
nsTArray
<
FilterPrimitiveDescription
>
&
aPrimitiveDescrs
const
nsTArray
<
int32_t
>
&
aInputIndices
bool
aFilterInputIsTainted
nsTArray
<
bool
>
&
aOutInputsAreTainted
)
;
float
GetPrimitiveNumber
(
uint8_t
aCtxType
float
aValue
)
const
;
gfxMatrix
GetUserSpaceToFrameSpaceInCSSPxTransform
(
)
const
;
int32_t
GetOrCreateSourceAlphaIndex
(
nsTArray
<
FilterPrimitiveDescription
>
&
aPrimitiveDescrs
)
;
nsresult
GetSourceIndices
(
SVGFilterPrimitiveElement
*
aPrimitiveElement
nsTArray
<
FilterPrimitiveDescription
>
&
aPrimitiveDescrs
const
nsTHashMap
<
nsStringHashKey
int32_t
>
&
aImageTable
nsTArray
<
int32_t
>
&
aSourceIndices
)
;
bool
ComputeBounds
(
)
;
const
StyleFilter
&
mFilter
;
nsIContent
*
mTargetContent
;
const
UserSpaceMetrics
&
mMetrics
;
const
dom
:
:
SVGFilterElement
*
mFilterElement
;
SVGFilterFrame
*
mFilterFrame
;
gfxRect
mTargetBBox
;
nsIntRect
mFilterSpaceBounds
;
gfxRect
mFilterSpaceBoundsNotSnapped
;
gfx
:
:
MatrixScalesDouble
mUserSpaceToFilterSpaceScale
;
uint16_t
mPrimitiveUnits
;
MOZ_INIT_OUTSIDE_CTOR
int32_t
mSourceGraphicIndex
;
MOZ_INIT_OUTSIDE_CTOR
int32_t
mSourceAlphaIndex
;
int32_t
mSourceAlphaAvailable
;
bool
mInitialized
;
}
;
}
#
endif
