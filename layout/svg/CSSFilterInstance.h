#
ifndef
LAYOUT_SVG_CSSFILTERINSTANCE_H_
#
define
LAYOUT_SVG_CSSFILTERINSTANCE_H_
#
include
"
FilterSupport
.
h
"
#
include
"
gfxMatrix
.
h
"
#
include
"
gfxRect
.
h
"
#
include
"
mozilla
/
gfx
/
Point
.
h
"
#
include
"
mozilla
/
gfx
/
Types
.
h
"
#
include
"
nsColor
.
h
"
#
include
"
mozilla
/
ServoStyleConsts
.
h
"
namespace
mozilla
{
class
CSSFilterInstance
{
typedef
gfx
:
:
sRGBColor
sRGBColor
;
typedef
gfx
:
:
FilterPrimitiveDescription
FilterPrimitiveDescription
;
typedef
gfx
:
:
IntPoint
IntPoint
;
typedef
gfx
:
:
Size
Size
;
public
:
CSSFilterInstance
(
const
StyleFilter
&
aFilter
nscolor
aShadowFallbackColor
const
nsIntRect
&
aTargetBoundsInFilterSpace
const
gfxMatrix
&
aFrameSpaceInCSSPxToFilterSpaceTransform
)
;
nsresult
BuildPrimitives
(
nsTArray
<
FilterPrimitiveDescription
>
&
aPrimitiveDescrs
bool
aInputIsTainted
)
;
private
:
FilterPrimitiveDescription
CreatePrimitiveDescription
(
const
nsTArray
<
FilterPrimitiveDescription
>
&
aPrimitiveDescrs
bool
aInputIsTainted
)
;
nsresult
SetAttributesForBlur
(
FilterPrimitiveDescription
&
aDescr
)
;
nsresult
SetAttributesForBrightness
(
FilterPrimitiveDescription
&
aDescr
)
;
nsresult
SetAttributesForContrast
(
FilterPrimitiveDescription
&
aDescr
)
;
nsresult
SetAttributesForDropShadow
(
FilterPrimitiveDescription
&
aDescr
)
;
nsresult
SetAttributesForGrayscale
(
FilterPrimitiveDescription
&
aDescr
)
;
nsresult
SetAttributesForHueRotate
(
FilterPrimitiveDescription
&
aDescr
)
;
nsresult
SetAttributesForInvert
(
FilterPrimitiveDescription
&
aDescr
)
;
nsresult
SetAttributesForOpacity
(
FilterPrimitiveDescription
&
aDescr
)
;
nsresult
SetAttributesForSaturate
(
FilterPrimitiveDescription
&
aDescr
)
;
nsresult
SetAttributesForSepia
(
FilterPrimitiveDescription
&
aDescr
)
;
int32_t
GetLastResultIndex
(
const
nsTArray
<
FilterPrimitiveDescription
>
&
aPrimitiveDescrs
)
;
void
SetBounds
(
FilterPrimitiveDescription
&
aDescr
const
nsTArray
<
FilterPrimitiveDescription
>
&
aPrimitiveDescrs
)
;
sRGBColor
ToAttributeColor
(
nscolor
aColor
)
;
Size
BlurRadiusToFilterSpace
(
nscoord
aRadiusInFrameSpace
)
;
IntPoint
OffsetToFilterSpace
(
nscoord
aXOffsetInFrameSpace
nscoord
aYOffsetInFrameSpace
)
;
const
StyleFilter
&
mFilter
;
nscolor
mShadowFallbackColor
;
nsIntRect
mTargetBoundsInFilterSpace
;
gfxMatrix
mFrameSpaceInCSSPxToFilterSpaceTransform
;
}
;
}
#
endif
