#
ifndef
NSSVGGFRAME_H
#
define
NSSVGGFRAME_H
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
gfxMatrix
.
h
"
#
include
"
nsAutoPtr
.
h
"
#
include
"
nsSVGContainerFrame
.
h
"
class
nsSVGGFrame
:
public
nsSVGDisplayContainerFrame
{
friend
nsIFrame
*
NS_NewSVGGFrame
(
nsIPresShell
*
aPresShell
nsStyleContext
*
aContext
)
;
protected
:
nsSVGGFrame
(
nsStyleContext
*
aContext
mozilla
:
:
LayoutFrameType
aType
)
:
nsSVGDisplayContainerFrame
(
aContext
aType
)
{
}
explicit
nsSVGGFrame
(
nsStyleContext
*
aContext
)
:
nsSVGGFrame
(
aContext
mozilla
:
:
LayoutFrameType
:
:
SVGG
)
{
}
public
:
NS_DECL_FRAMEARENA_HELPERS
#
ifdef
DEBUG
virtual
void
Init
(
nsIContent
*
aContent
nsContainerFrame
*
aParent
nsIFrame
*
aPrevInFlow
)
override
;
#
endif
#
ifdef
DEBUG_FRAME_DUMP
virtual
nsresult
GetFrameName
(
nsAString
&
aResult
)
const
override
{
return
MakeFrameName
(
NS_LITERAL_STRING
(
"
SVGG
"
)
aResult
)
;
}
#
endif
virtual
nsresult
AttributeChanged
(
int32_t
aNameSpaceID
nsIAtom
*
aAttribute
int32_t
aModType
)
override
;
virtual
void
NotifySVGChanged
(
uint32_t
aFlags
)
override
;
virtual
gfxMatrix
GetCanvasTM
(
)
override
;
nsAutoPtr
<
gfxMatrix
>
mCanvasTM
;
}
;
#
endif
