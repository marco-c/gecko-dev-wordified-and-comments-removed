#
ifndef
LAYOUT_SVG_ISVGDISPLAYABLEFRAME_H_
#
define
LAYOUT_SVG_ISVGDISPLAYABLEFRAME_H_
#
include
"
gfxMatrix
.
h
"
#
include
"
gfxPoint
.
h
"
#
include
"
gfxRect
.
h
"
#
include
"
nsQueryFrame
.
h
"
#
include
"
nsRect
.
h
"
#
include
"
mozilla
/
gfx
/
MatrixFwd
.
h
"
class
gfxContext
;
class
nsIFrame
;
namespace
mozilla
{
class
SVGAnimatedLengthList
;
class
SVGAnimatedNumberList
;
class
SVGBBox
;
class
SVGLengthList
;
class
SVGNumberList
;
class
SVGUserUnitList
;
namespace
image
{
struct
imgDrawingParams
;
}
class
ISVGDisplayableFrame
:
public
nsQueryFrame
{
public
:
using
imgDrawingParams
=
image
:
:
imgDrawingParams
;
NS_DECL_QUERYFRAME_TARGET
(
ISVGDisplayableFrame
)
virtual
void
PaintSVG
(
gfxContext
&
aContext
const
gfxMatrix
&
aTransform
imgDrawingParams
&
aImgParams
)
=
0
;
virtual
nsIFrame
*
GetFrameForPoint
(
const
gfxPoint
&
aPoint
)
=
0
;
virtual
void
ReflowSVG
(
)
=
0
;
enum
SVGChangedFlags
{
TRANSFORM_CHANGED
=
0x01
COORD_CONTEXT_CHANGED
=
0x02
FULL_ZOOM_CHANGED
=
0x04
}
;
virtual
void
NotifySVGChanged
(
uint32_t
aFlags
)
=
0
;
virtual
SVGBBox
GetBBoxContribution
(
const
gfx
:
:
Matrix
&
aToBBoxUserspace
uint32_t
aFlags
)
=
0
;
virtual
bool
IsDisplayContainer
(
)
=
0
;
}
;
}
#
endif
