#
ifndef
NS_AUTOREFERENCELIMITER_H
#
define
NS_AUTOREFERENCELIMITER_H
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
ReentrancyGuard
.
h
"
#
include
"
nsDebug
.
h
"
namespace
mozilla
{
class
MOZ_RAII
AutoReferenceLimiter
{
public
:
static
const
int16_t
notReferencing
=
-
2
;
AutoReferenceLimiter
(
int16_t
*
aRefCounter
int16_t
aMaxReferenceCount
)
{
MOZ_ASSERT
(
aMaxReferenceCount
>
0
&
&
aRefCounter
&
&
(
*
aRefCounter
=
=
notReferencing
|
|
(
*
aRefCounter
>
=
0
&
&
*
aRefCounter
<
aMaxReferenceCount
)
)
)
;
if
(
*
aRefCounter
=
=
notReferencing
)
{
*
aRefCounter
=
aMaxReferenceCount
;
}
mRefCounter
=
aRefCounter
;
mMaxReferenceCount
=
aMaxReferenceCount
;
}
~
AutoReferenceLimiter
(
)
{
MOZ_ASSERT
(
*
mRefCounter
<
mMaxReferenceCount
)
;
(
*
mRefCounter
)
+
+
;
if
(
*
mRefCounter
=
=
mMaxReferenceCount
)
{
*
mRefCounter
=
notReferencing
;
}
}
MOZ_MUST_USE
bool
Reference
(
)
{
MOZ_ASSERT
(
*
mRefCounter
>
=
0
)
;
(
*
mRefCounter
)
-
-
;
if
(
*
mRefCounter
<
0
)
{
if
(
mMaxReferenceCount
=
=
1
)
{
NS_WARNING
(
"
Reference
loop
detected
!
"
)
;
}
else
{
NS_WARNING
(
"
Reference
chain
length
limit
exceeded
!
"
)
;
}
return
false
;
}
return
true
;
}
private
:
int16_t
*
mRefCounter
;
int16_t
mMaxReferenceCount
;
}
;
}
#
endif
