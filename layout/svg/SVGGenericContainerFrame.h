#
ifndef
__NS_SVGGENERICCONTAINERFRAME_H__
#
define
__NS_SVGGENERICCONTAINERFRAME_H__
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
SVGContainerFrame
.
h
"
#
include
"
gfxMatrix
.
h
"
#
include
"
nsIFrame
.
h
"
#
include
"
nsLiteralString
.
h
"
#
include
"
nsQueryFrame
.
h
"
class
nsAtom
;
class
nsIFrame
;
namespace
mozilla
{
class
PresShell
;
}
nsIFrame
*
NS_NewSVGGenericContainerFrame
(
mozilla
:
:
PresShell
*
aPresShell
mozilla
:
:
ComputedStyle
*
aStyle
)
;
namespace
mozilla
{
class
SVGGenericContainerFrame
final
:
public
SVGDisplayContainerFrame
{
friend
nsIFrame
*
:
:
NS_NewSVGGenericContainerFrame
(
mozilla
:
:
PresShell
*
aPresShell
ComputedStyle
*
aStyle
)
;
protected
:
explicit
SVGGenericContainerFrame
(
ComputedStyle
*
aStyle
nsPresContext
*
aPresContext
)
:
SVGDisplayContainerFrame
(
aStyle
aPresContext
kClassID
)
{
}
public
:
NS_DECL_FRAMEARENA_HELPERS
(
SVGGenericContainerFrame
)
virtual
nsresult
AttributeChanged
(
int32_t
aNameSpaceID
nsAtom
*
aAttribute
int32_t
aModType
)
override
;
#
ifdef
DEBUG_FRAME_DUMP
virtual
nsresult
GetFrameName
(
nsAString
&
aResult
)
const
override
{
return
MakeFrameName
(
u
"
SVGGenericContainer
"
_ns
aResult
)
;
}
#
endif
virtual
gfxMatrix
GetCanvasTM
(
)
override
;
}
;
}
#
endif
