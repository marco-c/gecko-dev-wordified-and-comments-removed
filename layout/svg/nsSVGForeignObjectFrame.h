#
ifndef
NSSVGFOREIGNOBJECTFRAME_H__
#
define
NSSVGFOREIGNOBJECTFRAME_H__
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
PresShellForwards
.
h
"
#
include
"
nsAutoPtr
.
h
"
#
include
"
nsContainerFrame
.
h
"
#
include
"
nsSVGDisplayableFrame
.
h
"
#
include
"
nsRegion
.
h
"
#
include
"
nsSVGUtils
.
h
"
class
gfxContext
;
class
nsSVGForeignObjectFrame
final
:
public
nsContainerFrame
public
nsSVGDisplayableFrame
{
friend
nsContainerFrame
*
NS_NewSVGForeignObjectFrame
(
mozilla
:
:
PresShell
*
aPresShell
ComputedStyle
*
aStyle
)
;
protected
:
explicit
nsSVGForeignObjectFrame
(
ComputedStyle
*
aStyle
nsPresContext
*
aPresContext
)
;
public
:
NS_DECL_QUERYFRAME
NS_DECL_FRAMEARENA_HELPERS
(
nsSVGForeignObjectFrame
)
virtual
void
Init
(
nsIContent
*
aContent
nsContainerFrame
*
aParent
nsIFrame
*
aPrevInFlow
)
override
;
virtual
void
DestroyFrom
(
nsIFrame
*
aDestructRoot
PostDestroyData
&
aPostDestroyData
)
override
;
virtual
nsresult
AttributeChanged
(
int32_t
aNameSpaceID
nsAtom
*
aAttribute
int32_t
aModType
)
override
;
virtual
nsContainerFrame
*
GetContentInsertionFrame
(
)
override
{
return
PrincipalChildList
(
)
.
FirstChild
(
)
-
>
GetContentInsertionFrame
(
)
;
}
virtual
void
Reflow
(
nsPresContext
*
aPresContext
ReflowOutput
&
aDesiredSize
const
ReflowInput
&
aReflowInput
nsReflowStatus
&
aStatus
)
override
;
virtual
void
BuildDisplayList
(
nsDisplayListBuilder
*
aBuilder
const
nsDisplayListSet
&
aLists
)
override
;
virtual
bool
IsFrameOfType
(
uint32_t
aFlags
)
const
override
{
if
(
aFlags
&
eSupportsContainLayoutAndPaint
)
{
return
false
;
}
return
nsContainerFrame
:
:
IsFrameOfType
(
aFlags
&
~
nsIFrame
:
:
eSVG
)
;
}
virtual
bool
IsSVGTransformed
(
Matrix
*
aOwnTransform
Matrix
*
aFromParentTransform
)
const
override
;
#
ifdef
DEBUG_FRAME_DUMP
virtual
nsresult
GetFrameName
(
nsAString
&
aResult
)
const
override
{
return
MakeFrameName
(
NS_LITERAL_STRING
(
"
SVGForeignObject
"
)
aResult
)
;
}
#
endif
virtual
void
PaintSVG
(
gfxContext
&
aContext
const
gfxMatrix
&
aTransform
imgDrawingParams
&
aImgParams
const
nsIntRect
*
aDirtyRect
=
nullptr
)
override
;
virtual
nsIFrame
*
GetFrameForPoint
(
const
gfxPoint
&
aPoint
)
override
;
virtual
void
ReflowSVG
(
)
override
;
virtual
void
NotifySVGChanged
(
uint32_t
aFlags
)
override
;
virtual
SVGBBox
GetBBoxContribution
(
const
Matrix
&
aToBBoxUserspace
uint32_t
aFlags
)
override
;
virtual
bool
IsDisplayContainer
(
)
override
{
return
true
;
}
gfxMatrix
GetCanvasTM
(
)
;
nsRect
GetInvalidRegion
(
)
;
void
AppendDirectlyOwnedAnonBoxes
(
nsTArray
<
OwnedAnonBox
>
&
aResult
)
override
;
virtual
void
DidSetComputedStyle
(
ComputedStyle
*
aOldComputedStyle
)
override
;
protected
:
void
DoReflow
(
)
;
void
RequestReflow
(
mozilla
:
:
IntrinsicDirty
aType
)
;
bool
IsDisabled
(
)
const
{
return
mRect
.
width
<
=
0
|
|
mRect
.
height
<
=
0
;
}
nsAutoPtr
<
gfxMatrix
>
mCanvasTM
;
bool
mInReflow
;
}
;
#
endif
