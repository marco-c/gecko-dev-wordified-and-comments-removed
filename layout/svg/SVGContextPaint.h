#
ifndef
MOZILLA_SVGCONTEXTPAINT_H_
#
define
MOZILLA_SVGCONTEXTPAINT_H_
#
include
"
gfxMatrix
.
h
"
#
include
"
gfxPattern
.
h
"
#
include
"
gfxTypes
.
h
"
#
include
"
mozilla
/
AlreadyAddRefed
.
h
"
#
include
"
mozilla
/
gfx
/
2D
.
h
"
#
include
"
nsTArray
.
h
"
class
gfxContext
;
class
nsIDocument
;
namespace
mozilla
{
class
SVGContextPaint
{
protected
:
typedef
mozilla
:
:
gfx
:
:
DrawTarget
DrawTarget
;
SVGContextPaint
(
)
{
}
public
:
virtual
~
SVGContextPaint
(
)
{
}
virtual
already_AddRefed
<
gfxPattern
>
GetFillPattern
(
const
DrawTarget
*
aDrawTarget
float
aOpacity
const
gfxMatrix
&
aCTM
)
=
0
;
virtual
already_AddRefed
<
gfxPattern
>
GetStrokePattern
(
const
DrawTarget
*
aDrawTarget
float
aOpacity
const
gfxMatrix
&
aCTM
)
=
0
;
virtual
float
GetFillOpacity
(
)
const
=
0
;
virtual
float
GetStrokeOpacity
(
)
const
=
0
;
already_AddRefed
<
gfxPattern
>
GetFillPattern
(
const
DrawTarget
*
aDrawTarget
const
gfxMatrix
&
aCTM
)
{
return
GetFillPattern
(
aDrawTarget
GetFillOpacity
(
)
aCTM
)
;
}
already_AddRefed
<
gfxPattern
>
GetStrokePattern
(
const
DrawTarget
*
aDrawTarget
const
gfxMatrix
&
aCTM
)
{
return
GetStrokePattern
(
aDrawTarget
GetStrokeOpacity
(
)
aCTM
)
;
}
void
InitStrokeGeometry
(
gfxContext
*
aContext
float
devUnitsPerSVGUnit
)
;
FallibleTArray
<
gfxFloat
>
&
GetStrokeDashArray
(
)
{
return
mDashes
;
}
gfxFloat
GetStrokeDashOffset
(
)
{
return
mDashOffset
;
}
gfxFloat
GetStrokeWidth
(
)
{
return
mStrokeWidth
;
}
private
:
FallibleTArray
<
gfxFloat
>
mDashes
;
gfxFloat
mDashOffset
;
gfxFloat
mStrokeWidth
;
}
;
class
MOZ_RAII
AutoSetRestoreSVGContextPaint
{
public
:
AutoSetRestoreSVGContextPaint
(
SVGContextPaint
*
aContextPaint
nsIDocument
*
aSVGDocument
)
;
~
AutoSetRestoreSVGContextPaint
(
)
;
private
:
nsIDocument
*
mSVGDocument
;
void
*
mOuterContextPaint
;
}
;
}
#
endif
