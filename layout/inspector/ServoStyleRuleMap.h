#
ifndef
mozilla_ServoStyleRuleMap_h
#
define
mozilla_ServoStyleRuleMap_h
#
include
"
mozilla
/
ServoStyleRule
.
h
"
#
include
"
nsDataHashtable
.
h
"
#
include
"
nsICSSLoaderObserver
.
h
"
#
include
"
nsStubDocumentObserver
.
h
"
struct
RawServoStyleRule
;
namespace
mozilla
{
class
ServoCSSRuleList
;
class
ServoStyleSet
;
namespace
css
{
class
Rule
;
}
class
ServoStyleRuleMap
final
:
public
nsStubDocumentObserver
public
nsICSSLoaderObserver
{
public
:
NS_DECL_ISUPPORTS
explicit
ServoStyleRuleMap
(
ServoStyleSet
*
aStyleSet
)
;
void
EnsureTable
(
)
;
ServoStyleRule
*
Lookup
(
const
RawServoStyleRule
*
aRawRule
)
const
{
return
mTable
.
Get
(
aRawRule
)
;
}
void
StyleSheetAdded
(
StyleSheet
*
aStyleSheet
bool
aDocumentSheet
)
final
;
void
StyleSheetRemoved
(
StyleSheet
*
aStyleSheet
bool
aDocumentSheet
)
final
;
void
StyleSheetApplicableStateChanged
(
StyleSheet
*
aStyleSheet
)
final
;
void
StyleRuleAdded
(
StyleSheet
*
aStyleSheet
css
:
:
Rule
*
aStyleRule
)
final
;
void
StyleRuleRemoved
(
StyleSheet
*
aStyleSheet
css
:
:
Rule
*
aStyleRule
)
final
;
NS_IMETHOD
StyleSheetLoaded
(
StyleSheet
*
aSheet
bool
aWasAlternate
nsresult
aStatus
)
final
;
size_t
SizeOfIncludingThis
(
MallocSizeOf
aMallocSizeOf
)
const
;
private
:
~
ServoStyleRuleMap
(
)
;
bool
IsEmpty
(
)
const
{
return
mTable
.
Count
(
)
=
=
0
;
}
void
FillTableFromRule
(
css
:
:
Rule
*
aRule
)
;
void
FillTableFromRuleList
(
ServoCSSRuleList
*
aRuleList
)
;
void
FillTableFromStyleSheet
(
ServoStyleSheet
*
aSheet
)
;
typedef
nsDataHashtable
<
nsPtrHashKey
<
const
RawServoStyleRule
>
WeakPtr
<
ServoStyleRule
>
>
Hashtable
;
Hashtable
mTable
;
ServoStyleSet
*
mStyleSet
;
}
;
}
#
endif
