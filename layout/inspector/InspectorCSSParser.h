#
ifndef
InspectorCSSParser_h___
#
define
InspectorCSSParser_h___
#
include
"
mozilla
/
dom
/
InspectorUtilsBinding
.
h
"
#
include
"
mozilla
/
dom
/
NonRefcountedDOMObject
.
h
"
namespace
mozilla
{
class
StyleParserState
;
namespace
dom
{
class
InspectorCSSParser
final
:
public
NonRefcountedDOMObject
{
public
:
explicit
InspectorCSSParser
(
const
nsACString
&
)
;
static
UniquePtr
<
InspectorCSSParser
>
Constructor
(
const
GlobalObject
&
aGlobal
const
nsACString
&
aText
)
;
~
InspectorCSSParser
(
)
;
bool
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
JS
:
:
MutableHandle
<
JSObject
*
>
aReflector
)
{
return
InspectorCSSParser_Binding
:
:
Wrap
(
aCx
this
aGivenProto
aReflector
)
;
}
uint32_t
LineNumber
(
)
const
;
uint32_t
ColumnNumber
(
)
const
;
void
NextToken
(
Nullable
<
InspectorCSSToken
>
&
aResult
)
;
private
:
const
nsCString
mInput
;
StyleParserState
*
mParserState
;
uint32_t
mLineNumber
=
0
;
uint32_t
mColumnNumber
=
0
;
}
;
}
}
#
endif
