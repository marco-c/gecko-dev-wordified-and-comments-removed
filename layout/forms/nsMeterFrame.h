#
ifndef
nsMeterFrame_h___
#
define
nsMeterFrame_h___
#
include
"
nsContainerFrame
.
h
"
#
include
"
nsIAnonymousContentCreator
.
h
"
#
include
"
nsCOMPtr
.
h
"
class
nsMeterFrame
final
:
public
nsContainerFrame
public
nsIAnonymousContentCreator
{
using
Element
=
mozilla
:
:
dom
:
:
Element
;
public
:
NS_DECL_QUERYFRAME
NS_DECL_FRAMEARENA_HELPERS
(
nsMeterFrame
)
explicit
nsMeterFrame
(
ComputedStyle
*
aStyle
nsPresContext
*
aPresContext
)
;
virtual
~
nsMeterFrame
(
)
;
void
Destroy
(
DestroyContext
&
)
override
;
void
Reflow
(
nsPresContext
*
ReflowOutput
&
const
ReflowInput
&
nsReflowStatus
&
)
override
;
#
ifdef
DEBUG_FRAME_DUMP
nsresult
GetFrameName
(
nsAString
&
aResult
)
const
override
{
return
MakeFrameName
(
u
"
Meter
"
_ns
aResult
)
;
}
#
endif
nsresult
CreateAnonymousContent
(
nsTArray
<
ContentInfo
>
&
aElements
)
override
;
void
AppendAnonymousContentTo
(
nsTArray
<
nsIContent
*
>
&
aElements
uint32_t
aFilter
)
override
;
nsresult
AttributeChanged
(
int32_t
aNameSpaceID
nsAtom
*
aAttribute
int32_t
aModType
)
override
;
nscoord
IntrinsicISize
(
gfxContext
*
aContext
mozilla
:
:
IntrinsicISizeType
aType
)
override
;
bool
ShouldUseNativeStyle
(
)
const
;
protected
:
void
ReflowBarFrame
(
nsIFrame
*
aBarFrame
nsPresContext
*
aPresContext
const
ReflowInput
&
aReflowInput
const
mozilla
:
:
LogicalSize
&
aParentContentBoxSize
nsReflowStatus
&
aStatus
)
;
nsCOMPtr
<
Element
>
mBarDiv
;
}
;
#
endif
