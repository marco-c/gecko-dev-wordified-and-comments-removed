#
include
"
nsGfxRadioControlFrame
.
h
"
#
include
"
gfx2DGlue
.
h
"
#
include
"
gfxContext
.
h
"
#
include
"
gfxUtils
.
h
"
#
include
"
mozilla
/
gfx
/
2D
.
h
"
#
include
"
mozilla
/
gfx
/
PathHelpers
.
h
"
#
include
"
nsLayoutUtils
.
h
"
#
include
"
nsDisplayList
.
h
"
using
namespace
mozilla
;
using
namespace
mozilla
:
:
gfx
;
nsIFrame
*
NS_NewGfxRadioControlFrame
(
nsIPresShell
*
aPresShell
nsStyleContext
*
aContext
)
{
return
new
(
aPresShell
)
nsGfxRadioControlFrame
(
aContext
)
;
}
NS_IMPL_FRAMEARENA_HELPERS
(
nsGfxRadioControlFrame
)
nsGfxRadioControlFrame
:
:
nsGfxRadioControlFrame
(
nsStyleContext
*
aContext
)
:
nsFormControlFrame
(
aContext
kClassID
)
{
}
nsGfxRadioControlFrame
:
:
~
nsGfxRadioControlFrame
(
)
{
}
#
ifdef
ACCESSIBILITY
a11y
:
:
AccType
nsGfxRadioControlFrame
:
:
AccessibleType
(
)
{
return
a11y
:
:
eHTMLRadioButtonType
;
}
#
endif
#
ifdef
MOZ_WIDGET_ANDROID
static
void
PaintCheckedRadioButton
(
nsIFrame
*
aFrame
DrawTarget
*
aDrawTarget
const
nsRect
&
aDirtyRect
nsPoint
aPt
)
{
nsRect
rect
(
aPt
aFrame
-
>
GetSize
(
)
)
;
rect
.
Deflate
(
aFrame
-
>
GetUsedBorderAndPadding
(
)
)
;
rect
.
Deflate
(
nsPresContext
:
:
CSSPixelsToAppUnits
(
2
)
nsPresContext
:
:
CSSPixelsToAppUnits
(
2
)
)
;
Rect
devPxRect
=
ToRect
(
nsLayoutUtils
:
:
RectToGfxRect
(
rect
aFrame
-
>
PresContext
(
)
-
>
AppUnitsPerDevPixel
(
)
)
)
;
ColorPattern
color
(
ToDeviceColor
(
aFrame
-
>
StyleColor
(
)
-
>
mColor
)
)
;
RefPtr
<
PathBuilder
>
builder
=
aDrawTarget
-
>
CreatePathBuilder
(
)
;
AppendEllipseToPath
(
builder
devPxRect
.
Center
(
)
devPxRect
.
Size
(
)
)
;
RefPtr
<
Path
>
ellipse
=
builder
-
>
Finish
(
)
;
aDrawTarget
-
>
Fill
(
ellipse
color
)
;
}
void
nsGfxRadioControlFrame
:
:
BuildDisplayList
(
nsDisplayListBuilder
*
aBuilder
const
nsDisplayListSet
&
aLists
)
{
nsFormControlFrame
:
:
BuildDisplayList
(
aBuilder
aLists
)
;
if
(
!
IsVisibleForPainting
(
aBuilder
)
)
return
;
if
(
IsThemed
(
)
)
return
;
bool
checked
=
true
;
GetCurrentCheckState
(
&
checked
)
;
if
(
!
checked
)
return
;
aLists
.
Content
(
)
-
>
AppendNewToTop
(
new
(
aBuilder
)
nsDisplayGeneric
(
aBuilder
this
PaintCheckedRadioButton
"
CheckedRadioButton
"
nsDisplayItem
:
:
TYPE_CHECKED_RADIOBUTTON
)
)
;
}
#
endif
