#
ifndef
mozilla_ListMutationObserver_h
#
define
mozilla_ListMutationObserver_h
#
include
"
IDTracker
.
h
"
#
include
"
nsStubMutationObserver
.
h
"
class
nsIFrame
;
namespace
mozilla
{
namespace
dom
{
class
HTMLInputElement
;
}
class
ListMutationObserver
final
:
public
nsStubMutationObserver
public
dom
:
:
IDTracker
{
public
:
explicit
ListMutationObserver
(
nsIFrame
&
aOwningElementFrame
bool
aRepaint
=
false
)
:
mOwningElementFrame
(
&
aOwningElementFrame
)
{
Attach
(
aRepaint
)
;
}
NS_DECL_ISUPPORTS
NS_DECL_NSIMUTATIONOBSERVER_ATTRIBUTECHANGED
NS_DECL_NSIMUTATIONOBSERVER_CHARACTERDATACHANGED
NS_DECL_NSIMUTATIONOBSERVER_CONTENTAPPENDED
NS_DECL_NSIMUTATIONOBSERVER_CONTENTINSERTED
NS_DECL_NSIMUTATIONOBSERVER_CONTENTREMOVED
void
ElementChanged
(
dom
:
:
Element
*
aFrom
dom
:
:
Element
*
aTo
)
override
;
void
Attach
(
bool
aRepaint
=
true
)
;
void
Detach
(
)
;
void
AddObserverIfNeeded
(
)
;
void
RemoveObserverIfNeeded
(
dom
:
:
Element
*
aList
)
;
void
RemoveObserverIfNeeded
(
)
{
RemoveObserverIfNeeded
(
get
(
)
)
;
}
dom
:
:
HTMLInputElement
&
InputElement
(
)
const
;
private
:
~
ListMutationObserver
(
)
;
nsIFrame
*
mOwningElementFrame
;
}
;
}
#
endif
