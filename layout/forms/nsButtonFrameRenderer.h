#
ifndef
nsButtonFrameRenderer_h___
#
define
nsButtonFrameRenderer_h___
#
include
"
nsMargin
.
h
"
#
include
"
nsCSSRenderingBorders
.
h
"
class
gfxContext
;
class
nsIFrame
;
class
nsPresContext
;
struct
nsRect
;
namespace
mozilla
{
class
nsDisplayList
;
class
nsDisplayListBuilder
;
}
#
define
NS_BUTTON_RENDERER_FOCUS_INNER_CONTEXT_INDEX
0
#
define
NS_BUTTON_RENDERER_LAST_CONTEXT_INDEX
\
NS_BUTTON_RENDERER_FOCUS_INNER_CONTEXT_INDEX
class
nsButtonFrameRenderer
{
using
nsDisplayList
=
mozilla
:
:
nsDisplayList
;
using
nsDisplayListBuilder
=
mozilla
:
:
nsDisplayListBuilder
;
using
ImgDrawResult
=
mozilla
:
:
image
:
:
ImgDrawResult
;
using
ComputedStyle
=
mozilla
:
:
ComputedStyle
;
public
:
nsButtonFrameRenderer
(
)
;
~
nsButtonFrameRenderer
(
)
;
nsresult
DisplayButton
(
nsDisplayListBuilder
*
aBuilder
nsDisplayList
*
aBackground
nsDisplayList
*
aForeground
)
;
ImgDrawResult
PaintInnerFocusBorder
(
nsDisplayListBuilder
*
aBuilder
nsPresContext
*
aPresContext
gfxContext
&
aRenderingContext
const
nsRect
&
aDirtyRect
const
nsRect
&
aRect
)
;
mozilla
:
:
Maybe
<
nsCSSBorderRenderer
>
CreateInnerFocusBorderRenderer
(
nsDisplayListBuilder
*
aBuilder
nsPresContext
*
aPresContext
gfxContext
*
aRenderingContext
const
nsRect
&
aDirtyRect
const
nsRect
&
aRect
bool
*
aBorderIsEmpty
)
;
ImgDrawResult
PaintBorder
(
nsDisplayListBuilder
*
aBuilder
nsPresContext
*
aPresContext
gfxContext
&
aRenderingContext
const
nsRect
&
aDirtyRect
const
nsRect
&
aRect
)
;
void
SetFrame
(
nsIFrame
*
aFrame
nsPresContext
*
aPresContext
)
;
void
GetButtonInnerFocusRect
(
const
nsRect
&
aRect
nsRect
&
aResult
)
;
ComputedStyle
*
GetComputedStyle
(
int32_t
aIndex
)
const
;
void
SetComputedStyle
(
int32_t
aIndex
ComputedStyle
*
aComputedStyle
)
;
void
ReResolveStyles
(
nsPresContext
*
aPresContext
)
;
nsIFrame
*
GetFrame
(
)
;
private
:
RefPtr
<
ComputedStyle
>
mInnerFocusStyle
;
nsIFrame
*
mFrame
;
}
;
#
endif
