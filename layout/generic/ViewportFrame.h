#
ifndef
mozilla_ViewportFrame_h
#
define
mozilla_ViewportFrame_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsContainerFrame
.
h
"
class
nsPresContext
;
namespace
mozilla
{
class
ViewportFrame
:
public
nsContainerFrame
{
public
:
NS_DECL_QUERYFRAME
NS_DECL_FRAMEARENA_HELPERS
(
ViewportFrame
)
explicit
ViewportFrame
(
nsStyleContext
*
aContext
)
:
ViewportFrame
(
aContext
kClassID
mozilla
:
:
LayoutFrameType
:
:
Viewport
)
{
}
virtual
~
ViewportFrame
(
)
{
}
virtual
void
Init
(
nsIContent
*
aContent
nsContainerFrame
*
aParent
nsIFrame
*
aPrevInFlow
)
override
;
#
ifdef
DEBUG
virtual
void
AppendFrames
(
ChildListID
aListID
nsFrameList
&
aFrameList
)
override
;
virtual
void
InsertFrames
(
ChildListID
aListID
nsIFrame
*
aPrevFrame
nsFrameList
&
aFrameList
)
override
;
virtual
void
RemoveFrame
(
ChildListID
aListID
nsIFrame
*
aOldFrame
)
override
;
#
endif
virtual
void
BuildDisplayList
(
nsDisplayListBuilder
*
aBuilder
const
nsRect
&
aDirtyRect
const
nsDisplayListSet
&
aLists
)
override
;
void
BuildDisplayListForTopLayer
(
nsDisplayListBuilder
*
aBuilder
nsDisplayList
*
aList
)
;
virtual
nscoord
GetMinISize
(
nsRenderingContext
*
aRenderingContext
)
override
;
virtual
nscoord
GetPrefISize
(
nsRenderingContext
*
aRenderingContext
)
override
;
virtual
void
Reflow
(
nsPresContext
*
aPresContext
ReflowOutput
&
aDesiredSize
const
ReflowInput
&
aReflowInput
nsReflowStatus
&
aStatus
)
override
;
virtual
bool
ComputeCustomOverflow
(
nsOverflowAreas
&
aOverflowAreas
)
override
;
nsRect
AdjustReflowInputAsContainingBlock
(
ReflowInput
*
aReflowInput
)
const
;
#
ifdef
DEBUG_FRAME_DUMP
virtual
nsresult
GetFrameName
(
nsAString
&
aResult
)
const
override
;
#
endif
protected
:
ViewportFrame
(
nsStyleContext
*
aContext
ClassID
aID
mozilla
:
:
LayoutFrameType
aType
)
:
nsContainerFrame
(
aContext
aID
aType
)
mView
(
nullptr
)
{
}
nsPoint
AdjustReflowInputForScrollbars
(
ReflowInput
*
aReflowInput
)
const
;
nsView
*
GetViewInternal
(
)
const
override
{
return
mView
;
}
void
SetViewInternal
(
nsView
*
aView
)
override
{
mView
=
aView
;
}
private
:
virtual
mozilla
:
:
layout
:
:
FrameChildListID
GetAbsoluteListID
(
)
const
override
{
return
kFixedList
;
}
nsView
*
mView
;
}
;
}
#
endif
