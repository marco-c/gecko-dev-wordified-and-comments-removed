#
ifndef
nsSplittableFrame_h___
#
define
nsSplittableFrame_h___
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsIFrame
.
h
"
class
nsSplittableFrame
:
public
nsIFrame
{
public
:
NS_DECL_ABSTRACT_FRAME
(
nsSplittableFrame
)
void
Init
(
nsIContent
*
aContent
nsContainerFrame
*
aParent
nsIFrame
*
aPrevInFlow
)
override
;
void
DestroyFrom
(
nsIFrame
*
aDestructRoot
PostDestroyData
&
aPostDestroyData
)
override
;
nsIFrame
*
GetPrevContinuation
(
)
const
final
;
nsIFrame
*
GetNextContinuation
(
)
const
final
;
void
SetPrevContinuation
(
nsIFrame
*
)
final
;
void
SetNextContinuation
(
nsIFrame
*
)
final
;
nsIFrame
*
FirstContinuation
(
)
const
final
;
nsIFrame
*
LastContinuation
(
)
const
final
;
#
ifdef
DEBUG
static
bool
IsInPrevContinuationChain
(
nsIFrame
*
aFrame1
nsIFrame
*
aFrame2
)
;
static
bool
IsInNextContinuationChain
(
nsIFrame
*
aFrame1
nsIFrame
*
aFrame2
)
;
#
endif
nsIFrame
*
GetPrevInFlow
(
)
const
final
;
nsIFrame
*
GetNextInFlow
(
)
const
final
;
void
SetPrevInFlow
(
nsIFrame
*
)
final
;
void
SetNextInFlow
(
nsIFrame
*
)
final
;
nsIFrame
*
FirstInFlow
(
)
const
final
;
nsIFrame
*
LastInFlow
(
)
const
final
;
static
void
RemoveFromFlow
(
nsIFrame
*
aFrame
)
;
protected
:
nsSplittableFrame
(
ComputedStyle
*
aStyle
nsPresContext
*
aPresContext
ClassID
aID
)
:
nsIFrame
(
aStyle
aPresContext
aID
)
mPrevContinuation
(
nullptr
)
mNextContinuation
(
nullptr
)
{
}
nscoord
ConsumedBSize
(
mozilla
:
:
WritingMode
aWM
)
const
;
nscoord
GetEffectiveComputedBSize
(
const
ReflowInput
&
aReflowInput
nscoord
aConsumed
=
NS_UNCONSTRAINEDSIZE
)
const
;
LogicalSides
GetLogicalSkipSides
(
const
ReflowInput
*
aReflowInput
=
nullptr
)
const
override
;
LogicalSides
PreReflowBlockLevelLogicalSkipSides
(
)
const
;
nsIFrame
*
mPrevContinuation
;
nsIFrame
*
mNextContinuation
;
}
;
#
endif
