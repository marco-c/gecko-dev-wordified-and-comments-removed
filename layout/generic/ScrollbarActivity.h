#
ifndef
ScrollbarActivity_h___
#
define
ScrollbarActivity_h___
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsIDOMEventListener
.
h
"
class
nsIContent
;
class
nsIScrollbarMediator
;
class
nsITimer
;
namespace
mozilla
{
namespace
dom
{
class
Element
;
class
EventTarget
;
}
namespace
layout
{
class
ScrollbarActivity
final
:
public
nsIDOMEventListener
{
public
:
explicit
ScrollbarActivity
(
nsIScrollbarMediator
*
aScrollableFrame
)
:
mScrollableFrame
(
aScrollableFrame
)
{
MOZ_ASSERT
(
mScrollableFrame
)
;
}
NS_DECL_ISUPPORTS
NS_DECL_NSIDOMEVENTLISTENER
void
Destroy
(
)
;
void
ActivityOccurred
(
)
;
void
ActivityStarted
(
)
;
void
ActivityStopped
(
)
;
bool
IsActive
(
)
const
{
return
mNestedActivityCounter
;
}
protected
:
virtual
~
ScrollbarActivity
(
)
=
default
;
void
ActivityChanged
(
)
;
void
StartFadeTimer
(
)
;
void
CancelFadeTimer
(
)
;
void
BeginFade
(
)
;
void
HandleEventForScrollbar
(
const
nsAString
&
aType
nsIContent
*
aTarget
dom
:
:
Element
*
aScrollbar
bool
*
aStoredHoverState
)
;
void
StartListeningForScrollbarEvents
(
)
;
void
StartListeningForScrollAreaEvents
(
)
;
void
StopListeningForScrollbarEvents
(
)
;
void
StopListeningForScrollAreaEvents
(
)
;
void
AddScrollbarEventListeners
(
dom
:
:
EventTarget
*
aScrollbar
)
;
void
RemoveScrollbarEventListeners
(
dom
:
:
EventTarget
*
aScrollbar
)
;
void
HoveredScrollbar
(
dom
:
:
Element
*
aScrollbar
)
;
dom
:
:
Element
*
GetScrollbarContent
(
bool
aVertical
)
;
dom
:
:
Element
*
GetHorizontalScrollbar
(
)
{
return
GetScrollbarContent
(
false
)
;
}
dom
:
:
Element
*
GetVerticalScrollbar
(
)
{
return
GetScrollbarContent
(
true
)
;
}
nsIScrollbarMediator
*
const
mScrollableFrame
;
nsCOMPtr
<
dom
:
:
EventTarget
>
mHorizontalScrollbar
;
nsCOMPtr
<
dom
:
:
EventTarget
>
mVerticalScrollbar
;
nsCOMPtr
<
nsITimer
>
mFadeTimer
;
uint32_t
mNestedActivityCounter
=
0
;
bool
mListeningForScrollbarEvents
=
false
;
bool
mListeningForScrollAreaEvents
=
false
;
bool
mHScrollbarHovered
=
false
;
bool
mVScrollbarHovered
=
false
;
}
;
}
}
#
endif
