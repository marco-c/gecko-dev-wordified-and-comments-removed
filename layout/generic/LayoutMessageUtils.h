#
ifndef
LAYOUT_GENERIC_LAYOUTMESSAGEUTILS_H_
#
define
LAYOUT_GENERIC_LAYOUTMESSAGEUTILS_H_
#
include
"
nsIFrame
.
h
"
#
include
"
mozilla
/
AspectRatio
.
h
"
namespace
IPC
{
template
<
>
struct
ParamTraits
<
mozilla
:
:
IntrinsicSize
>
{
using
paramType
=
mozilla
:
:
IntrinsicSize
;
static
void
Write
(
Message
*
aMsg
const
paramType
&
aParam
)
{
WriteParam
(
aMsg
aParam
.
width
)
;
WriteParam
(
aMsg
aParam
.
height
)
;
}
static
bool
Read
(
const
Message
*
aMsg
PickleIterator
*
aIter
paramType
*
aResult
)
{
return
ReadParam
(
aMsg
aIter
&
aResult
-
>
width
)
&
&
ReadParam
(
aMsg
aIter
&
aResult
-
>
height
)
;
}
}
;
template
<
>
struct
ParamTraits
<
mozilla
:
:
AspectRatio
>
{
using
paramType
=
mozilla
:
:
AspectRatio
;
static
void
Write
(
Message
*
aMsg
const
paramType
&
aParam
)
{
WriteParam
(
aMsg
aParam
.
mRatio
)
;
}
static
bool
Read
(
const
Message
*
aMsg
PickleIterator
*
aIter
paramType
*
aResult
)
{
return
ReadParam
(
aMsg
aIter
&
aResult
-
>
mRatio
)
;
}
}
;
}
#
endif
