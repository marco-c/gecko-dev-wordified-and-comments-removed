#
ifndef
mozilla_MiddleCroppingBlockFrame_h
#
define
mozilla_MiddleCroppingBlockFrame_h
#
include
"
nsBlockFrame
.
h
"
#
include
"
nsIAnonymousContentCreator
.
h
"
#
include
"
nsQueryFrame
.
h
"
namespace
mozilla
{
class
MiddleCroppingBlockFrame
:
public
nsBlockFrame
public
nsIAnonymousContentCreator
{
public
:
virtual
void
GetUncroppedValue
(
nsAString
&
)
=
0
;
void
UpdateDisplayedValueToUncroppedValue
(
bool
aNotify
)
;
NS_DECL_QUERYFRAME_TARGET
(
MiddleCroppingBlockFrame
)
NS_DECL_QUERYFRAME
NS_DECL_ABSTRACT_FRAME
(
MiddleCroppingBlockFrame
)
protected
:
MiddleCroppingBlockFrame
(
ComputedStyle
*
nsPresContext
*
ClassID
)
;
~
MiddleCroppingBlockFrame
(
)
;
void
Reflow
(
nsPresContext
*
ReflowOutput
&
const
ReflowInput
&
nsReflowStatus
&
)
override
;
nscoord
IntrinsicISize
(
gfxContext
*
aContext
IntrinsicISizeType
aType
)
override
;
bool
CropTextToWidth
(
gfxContext
&
aRenderingContext
nscoord
aWidth
nsString
&
aText
)
const
;
nsresult
CreateAnonymousContent
(
nsTArray
<
ContentInfo
>
&
)
override
;
void
AppendAnonymousContentTo
(
nsTArray
<
nsIContent
*
>
&
uint32_t
aFilter
)
override
;
void
UpdateDisplayedValue
(
const
nsAString
&
aValue
bool
aIsCropped
bool
aNotify
)
;
void
Destroy
(
DestroyContext
&
)
override
;
RefPtr
<
dom
:
:
Text
>
mTextNode
;
bool
mCropped
=
false
;
}
;
}
#
endif
