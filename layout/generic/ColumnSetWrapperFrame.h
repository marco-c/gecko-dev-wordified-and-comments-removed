#
ifndef
mozilla_ColumnSetWrapperFrame_h
#
define
mozilla_ColumnSetWrapperFrame_h
#
include
"
nsBlockFrame
.
h
"
namespace
mozilla
{
class
PresShell
;
class
ColumnSetWrapperFrame
final
:
public
nsBlockFrame
{
public
:
NS_DECL_FRAMEARENA_HELPERS
(
ColumnSetWrapperFrame
)
NS_DECL_QUERYFRAME
friend
nsBlockFrame
*
:
:
NS_NewColumnSetWrapperFrame
(
mozilla
:
:
PresShell
*
aPresShell
ComputedStyle
*
aStyle
nsFrameState
aStateFlags
)
;
void
Init
(
nsIContent
*
aContent
nsContainerFrame
*
aParent
nsIFrame
*
aPrevInFlow
)
override
;
nsContainerFrame
*
GetContentInsertionFrame
(
)
override
;
void
AppendDirectlyOwnedAnonBoxes
(
nsTArray
<
OwnedAnonBox
>
&
aResult
)
override
;
#
ifdef
DEBUG_FRAME_DUMP
nsresult
GetFrameName
(
nsAString
&
aResult
)
const
override
;
#
endif
void
AppendFrames
(
ChildListID
aListID
nsFrameList
&
&
aFrameList
)
override
;
void
InsertFrames
(
ChildListID
aListID
nsIFrame
*
aPrevFrame
const
nsLineList
:
:
iterator
*
aPrevFrameLine
nsFrameList
&
&
aFrameList
)
override
;
void
RemoveFrame
(
DestroyContext
&
ChildListID
nsIFrame
*
)
override
;
void
MarkIntrinsicISizesDirty
(
)
override
;
nscoord
GetMinISize
(
gfxContext
*
aRenderingContext
)
override
;
nscoord
GetPrefISize
(
gfxContext
*
aRenderingContext
)
override
;
Maybe
<
nscoord
>
GetNaturalBaselineBOffset
(
WritingMode
aWM
BaselineSharingGroup
aBaselineGroup
BaselineExportContext
aExportContext
)
const
override
;
private
:
explicit
ColumnSetWrapperFrame
(
ComputedStyle
*
aStyle
nsPresContext
*
aPresContext
)
;
~
ColumnSetWrapperFrame
(
)
override
=
default
;
#
ifdef
DEBUG
static
void
AssertColumnSpanWrapperSubtreeIsSane
(
const
nsIFrame
*
aFrame
)
;
bool
mFinishedBuildingColumns
=
false
;
#
endif
template
<
typename
Iterator
>
Maybe
<
nscoord
>
GetBaselineBOffset
(
Iterator
aStart
Iterator
aEnd
WritingMode
aWM
BaselineSharingGroup
aBaselineGroup
BaselineExportContext
aExportContext
)
const
;
}
;
}
#
endif
