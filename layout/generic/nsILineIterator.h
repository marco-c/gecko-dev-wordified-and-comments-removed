#
ifndef
nsILineIterator_h___
#
define
nsILineIterator_h___
#
include
"
nscore
.
h
"
#
include
"
nsINode
.
h
"
#
include
"
nsRect
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
Result
.
h
"
class
nsIFrame
;
class
nsILineIterator
{
protected
:
~
nsILineIterator
(
)
=
default
;
public
:
virtual
int32_t
GetNumLines
(
)
const
=
0
;
virtual
bool
GetDirection
(
)
=
0
;
struct
LineInfo
{
nsIFrame
*
mFirstFrameOnLine
=
nullptr
;
int32_t
mNumFramesOnLine
=
0
;
nsRect
mLineBounds
;
bool
mIsWrapped
=
false
;
}
;
virtual
mozilla
:
:
Result
<
LineInfo
nsresult
>
GetLine
(
int32_t
aLineNumber
)
=
0
;
virtual
int32_t
FindLineContaining
(
nsIFrame
*
aFrame
int32_t
aStartLine
=
0
)
=
0
;
NS_IMETHOD
FindFrameAt
(
int32_t
aLineNumber
nsPoint
aPos
nsIFrame
*
*
aFrameFound
bool
*
aPosIsBeforeFirstFrame
bool
*
aPosIsAfterLastFrame
)
=
0
;
NS_IMETHOD
CheckLineOrder
(
int32_t
aLine
bool
*
aIsReordered
nsIFrame
*
*
aFirstVisual
nsIFrame
*
*
aLastVisual
)
=
0
;
}
;
class
MOZ_STACK_CLASS
AutoAssertNoDomMutations
final
{
#
ifdef
MOZ_DIAGNOSTIC_ASSERT_ENABLED
nsMutationGuard
mGuard
;
#
endif
public
:
~
AutoAssertNoDomMutations
(
)
{
MOZ_DIAGNOSTIC_ASSERT
(
!
mGuard
.
Mutated
(
0
)
)
;
}
}
;
#
endif
