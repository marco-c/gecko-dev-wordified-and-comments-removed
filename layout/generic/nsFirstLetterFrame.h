#
ifndef
nsFirstLetterFrame_h__
#
define
nsFirstLetterFrame_h__
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsContainerFrame
.
h
"
class
nsFirstLetterFrame
final
:
public
nsContainerFrame
{
public
:
NS_DECL_QUERYFRAME
NS_DECL_FRAMEARENA_HELPERS
(
nsFirstLetterFrame
)
explicit
nsFirstLetterFrame
(
ComputedStyle
*
aStyle
nsPresContext
*
aPresContext
)
:
nsContainerFrame
(
aStyle
aPresContext
kClassID
)
{
}
virtual
void
BuildDisplayList
(
nsDisplayListBuilder
*
aBuilder
const
nsDisplayListSet
&
aLists
)
override
;
virtual
void
Init
(
nsIContent
*
aContent
nsContainerFrame
*
aParent
nsIFrame
*
aPrevInFlow
)
override
;
void
SetInitialChildList
(
ChildListID
aListID
nsFrameList
&
&
aChildList
)
override
;
#
ifdef
DEBUG_FRAME_DUMP
virtual
nsresult
GetFrameName
(
nsAString
&
aResult
)
const
override
;
#
endif
bool
IsFloating
(
)
const
{
return
HasAnyStateBits
(
NS_FRAME_OUT_OF_FLOW
)
;
}
virtual
bool
IsFrameOfType
(
uint32_t
aFlags
)
const
override
{
if
(
!
IsFloating
(
)
)
aFlags
=
aFlags
&
~
(
nsIFrame
:
:
eLineParticipant
)
;
return
nsContainerFrame
:
:
IsFrameOfType
(
aFlags
&
~
(
nsIFrame
:
:
eBidiInlineContainer
)
)
;
}
virtual
nscoord
GetMinISize
(
gfxContext
*
aRenderingContext
)
override
;
virtual
nscoord
GetPrefISize
(
gfxContext
*
aRenderingContext
)
override
;
virtual
void
AddInlineMinISize
(
gfxContext
*
aRenderingContext
InlineMinISizeData
*
aData
)
override
;
virtual
void
AddInlinePrefISize
(
gfxContext
*
aRenderingContext
InlinePrefISizeData
*
aData
)
override
;
SizeComputationResult
ComputeSize
(
gfxContext
*
aRenderingContext
mozilla
:
:
WritingMode
aWM
const
mozilla
:
:
LogicalSize
&
aCBSize
nscoord
aAvailableISize
const
mozilla
:
:
LogicalSize
&
aMargin
const
mozilla
:
:
LogicalSize
&
aBorderPadding
const
mozilla
:
:
StyleSizeOverrides
&
aSizeOverrides
mozilla
:
:
ComputeSizeFlags
aFlags
)
override
;
virtual
void
Reflow
(
nsPresContext
*
aPresContext
ReflowOutput
&
aDesiredSize
const
ReflowInput
&
aReflowInput
nsReflowStatus
&
aStatus
)
override
;
virtual
bool
CanContinueTextRun
(
)
const
override
;
bool
GetNaturalBaselineBOffset
(
mozilla
:
:
WritingMode
aWM
BaselineSharingGroup
aBaselineGroup
nscoord
*
aBaseline
)
const
override
;
virtual
LogicalSides
GetLogicalSkipSides
(
)
const
override
;
virtual
nsresult
GetChildFrameContainingOffset
(
int32_t
inContentOffset
bool
inHint
int32_t
*
outFrameContentOffset
nsIFrame
*
*
outChildFrame
)
override
;
nscoord
GetFirstLetterBaseline
(
)
const
{
return
mBaseline
;
}
void
CreateContinuationForFloatingParent
(
nsIFrame
*
aChild
nsIFrame
*
*
aContinuation
bool
aIsFluid
)
;
bool
UseTightBounds
(
)
const
;
protected
:
nscoord
mBaseline
;
void
DrainOverflowFrames
(
nsPresContext
*
aPresContext
)
;
}
;
#
endif
