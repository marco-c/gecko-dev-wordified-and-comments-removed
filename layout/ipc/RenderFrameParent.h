#
ifndef
mozilla_layout_RenderFrameParent_h
#
define
mozilla_layout_RenderFrameParent_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
<
map
>
#
include
"
mozilla
/
dom
/
ipc
/
IdType
.
h
"
#
include
"
mozilla
/
layers
/
APZUtils
.
h
"
#
include
"
mozilla
/
layers
/
CompositorOptions
.
h
"
#
include
"
mozilla
/
layers
/
LayersTypes
.
h
"
#
include
"
mozilla
/
layout
/
PRenderFrameParent
.
h
"
#
include
"
nsDisplayList
.
h
"
class
nsFrameLoader
;
class
nsSubDocumentFrame
;
namespace
mozilla
{
class
InputEvent
;
namespace
layers
{
class
AsyncDragMetrics
;
class
TargetConfig
;
struct
TextureFactoryIdentifier
;
struct
ScrollableLayerGuid
;
}
namespace
layout
{
class
RenderFrameParent
final
:
public
PRenderFrameParent
{
typedef
mozilla
:
:
layers
:
:
AsyncDragMetrics
AsyncDragMetrics
;
typedef
mozilla
:
:
layers
:
:
FrameMetrics
FrameMetrics
;
typedef
mozilla
:
:
layers
:
:
CompositorOptions
CompositorOptions
;
typedef
mozilla
:
:
layers
:
:
ContainerLayer
ContainerLayer
;
typedef
mozilla
:
:
layers
:
:
Layer
Layer
;
typedef
mozilla
:
:
layers
:
:
LayerManager
LayerManager
;
typedef
mozilla
:
:
layers
:
:
LayersId
LayersId
;
typedef
mozilla
:
:
layers
:
:
TargetConfig
TargetConfig
;
typedef
mozilla
:
:
ContainerLayerParameters
ContainerLayerParameters
;
typedef
mozilla
:
:
layers
:
:
TextureFactoryIdentifier
TextureFactoryIdentifier
;
typedef
mozilla
:
:
layers
:
:
ScrollableLayerGuid
ScrollableLayerGuid
;
typedef
mozilla
:
:
layers
:
:
TouchBehaviorFlags
TouchBehaviorFlags
;
typedef
mozilla
:
:
layers
:
:
ZoomConstraints
ZoomConstraints
;
typedef
FrameMetrics
:
:
ViewID
ViewID
;
public
:
explicit
RenderFrameParent
(
nsFrameLoader
*
aFrameLoader
)
;
virtual
~
RenderFrameParent
(
)
;
bool
Init
(
nsFrameLoader
*
aFrameLoader
)
;
bool
IsInitted
(
)
;
void
Destroy
(
)
;
already_AddRefed
<
Layer
>
BuildLayer
(
nsDisplayListBuilder
*
aBuilder
nsIFrame
*
aFrame
LayerManager
*
aManager
nsDisplayItem
*
aItem
const
ContainerLayerParameters
&
aContainerParameters
)
;
void
OwnerContentChanged
(
nsIContent
*
aContent
)
;
bool
HitTest
(
const
nsRect
&
aRect
)
;
void
GetTextureFactoryIdentifier
(
TextureFactoryIdentifier
*
aTextureFactoryIdentifier
)
;
inline
LayersId
GetLayersId
(
)
const
{
return
mLayersId
;
}
inline
bool
IsLayersConnected
(
)
const
{
return
mLayersConnected
;
}
inline
CompositorOptions
GetCompositorOptions
(
)
const
{
return
mCompositorOptions
;
}
void
TakeFocusForClickFromTap
(
)
;
void
EnsureLayersConnected
(
CompositorOptions
*
aCompositorOptions
)
;
LayerManager
*
AttachLayerManager
(
)
;
nsFrameLoader
*
FrameLoader
(
)
const
{
return
mFrameLoader
;
}
protected
:
void
ActorDestroy
(
ActorDestroyReason
why
)
override
;
virtual
mozilla
:
:
ipc
:
:
IPCResult
RecvNotifyCompositorTransaction
(
)
override
;
private
:
void
TriggerRepaint
(
)
;
void
DispatchEventForPanZoomController
(
const
InputEvent
&
aEvent
)
;
LayersId
mLayersId
;
bool
mLayersConnected
;
CompositorOptions
mCompositorOptions
;
RefPtr
<
nsFrameLoader
>
mFrameLoader
;
RefPtr
<
LayerManager
>
mLayerManager
;
bool
mFrameLoaderDestroyed
;
bool
mAsyncPanZoomEnabled
;
bool
mInitted
;
}
;
}
}
class
nsDisplayRemote
final
:
public
nsDisplayItem
{
typedef
mozilla
:
:
layout
:
:
RenderFrameParent
RenderFrameParent
;
public
:
nsDisplayRemote
(
nsDisplayListBuilder
*
aBuilder
nsSubDocumentFrame
*
aFrame
)
;
bool
HasDeletedFrame
(
)
const
override
;
LayerState
GetLayerState
(
nsDisplayListBuilder
*
aBuilder
LayerManager
*
aManager
const
ContainerLayerParameters
&
aParameters
)
override
;
already_AddRefed
<
Layer
>
BuildLayer
(
nsDisplayListBuilder
*
aBuilder
LayerManager
*
aManager
const
ContainerLayerParameters
&
aContainerParameters
)
override
;
void
Paint
(
nsDisplayListBuilder
*
aBuilder
gfxContext
*
aCtx
)
override
;
bool
CreateWebRenderCommands
(
mozilla
:
:
wr
:
:
DisplayListBuilder
&
aBuilder
mozilla
:
:
wr
:
:
IpcResourceUpdateQueue
&
aResources
const
StackingContextHelper
&
aSc
mozilla
:
:
layers
:
:
WebRenderLayerManager
*
aManager
nsDisplayListBuilder
*
aDisplayListBuilder
)
override
;
bool
UpdateScrollData
(
mozilla
:
:
layers
:
:
WebRenderScrollData
*
aData
mozilla
:
:
layers
:
:
WebRenderLayerScrollData
*
aLayerData
)
override
;
NS_DISPLAY_DECL_NAME
(
"
Remote
"
TYPE_REMOTE
)
private
:
mozilla
:
:
layers
:
:
LayersId
GetRemoteLayersId
(
)
const
;
RenderFrameParent
*
GetRenderFrameParent
(
)
const
;
mozilla
:
:
dom
:
:
TabId
mTabId
;
mozilla
:
:
LayoutDeviceIntPoint
mOffset
;
mozilla
:
:
layers
:
:
EventRegionsOverride
mEventRegionsOverride
;
}
;
#
endif
