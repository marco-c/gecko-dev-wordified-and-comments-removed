#
ifndef
mozilla_layout_ipc_VsyncParent_h
#
define
mozilla_layout_ipc_VsyncParent_h
#
include
"
mozilla
/
layout
/
PVsyncParent
.
h
"
#
include
"
mozilla
/
VsyncDispatcher
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
class
nsIThread
;
namespace
mozilla
{
namespace
ipc
{
class
BackgroundParentImpl
;
}
namespace
layout
{
class
VsyncParent
final
:
public
PVsyncParent
public
VsyncObserver
{
friend
class
mozilla
:
:
ipc
:
:
BackgroundParentImpl
;
friend
class
PVsyncParent
;
private
:
static
already_AddRefed
<
VsyncParent
>
Create
(
)
;
VsyncParent
(
)
;
virtual
~
VsyncParent
(
)
;
virtual
bool
NotifyVsync
(
const
VsyncEvent
&
aVsync
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvRequestVsyncRate
(
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvObserve
(
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvUnobserve
(
)
;
virtual
void
ActorDestroy
(
ActorDestroyReason
aActorDestroyReason
)
override
;
void
DispatchVsyncEvent
(
const
VsyncEvent
&
aVsync
)
;
bool
mObservingVsync
;
bool
mDestroyed
;
nsCOMPtr
<
nsIThread
>
mBackgroundThread
;
RefPtr
<
RefreshTimerVsyncDispatcher
>
mVsyncDispatcher
;
}
;
}
}
#
endif
