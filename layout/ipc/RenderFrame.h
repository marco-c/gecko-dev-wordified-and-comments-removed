#
ifndef
mozilla_layout_RenderFrame_h
#
define
mozilla_layout_RenderFrame_h
#
include
"
base
/
process
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
dom
/
ipc
/
IdType
.
h
"
#
include
"
mozilla
/
layers
/
CompositorOptions
.
h
"
#
include
"
mozilla
/
layers
/
LayersTypes
.
h
"
#
include
"
nsDisplayList
.
h
"
class
nsFrameLoader
;
class
nsSubDocumentFrame
;
namespace
mozilla
{
namespace
dom
{
class
TabParent
;
}
namespace
layers
{
struct
TextureFactoryIdentifier
;
}
namespace
layout
{
class
RenderFrame
final
{
typedef
mozilla
:
:
layers
:
:
CompositorOptions
CompositorOptions
;
typedef
mozilla
:
:
layers
:
:
LayerManager
LayerManager
;
typedef
mozilla
:
:
layers
:
:
LayersId
LayersId
;
typedef
mozilla
:
:
layers
:
:
TextureFactoryIdentifier
TextureFactoryIdentifier
;
public
:
RenderFrame
(
)
;
virtual
~
RenderFrame
(
)
;
bool
Initialize
(
dom
:
:
TabParent
*
aTabParent
)
;
void
Destroy
(
)
;
void
EnsureLayersConnected
(
CompositorOptions
*
aCompositorOptions
)
;
LayerManager
*
AttachLayerManager
(
)
;
void
OwnerContentChanged
(
)
;
LayersId
GetLayersId
(
)
const
{
return
mLayersId
;
}
CompositorOptions
GetCompositorOptions
(
)
const
{
return
mCompositorOptions
;
}
void
GetTextureFactoryIdentifier
(
TextureFactoryIdentifier
*
aTextureFactoryIdentifier
)
const
;
bool
IsInitialized
(
)
const
{
return
mInitialized
;
}
bool
IsLayersConnected
(
)
const
{
return
mLayersConnected
;
}
private
:
base
:
:
ProcessId
mTabProcessId
;
LayersId
mLayersId
;
CompositorOptions
mCompositorOptions
;
dom
:
:
TabParent
*
mTabParent
;
RefPtr
<
LayerManager
>
mLayerManager
;
bool
mInitialized
;
bool
mLayersConnected
;
}
;
}
}
class
nsDisplayRemote
final
:
public
nsDisplayItem
{
typedef
mozilla
:
:
dom
:
:
TabId
TabId
;
typedef
mozilla
:
:
gfx
:
:
Matrix4x4
Matrix4x4
;
typedef
mozilla
:
:
layers
:
:
EventRegionsOverride
EventRegionsOverride
;
typedef
mozilla
:
:
layers
:
:
Layer
Layer
;
typedef
mozilla
:
:
layers
:
:
LayersId
LayersId
;
typedef
mozilla
:
:
layers
:
:
RefLayer
RefLayer
;
typedef
mozilla
:
:
layout
:
:
RenderFrame
RenderFrame
;
typedef
mozilla
:
:
LayoutDeviceRect
LayoutDeviceRect
;
typedef
mozilla
:
:
LayoutDeviceIntPoint
LayoutDeviceIntPoint
;
public
:
nsDisplayRemote
(
nsDisplayListBuilder
*
aBuilder
nsSubDocumentFrame
*
aFrame
)
;
bool
HasDeletedFrame
(
)
const
override
;
LayerState
GetLayerState
(
nsDisplayListBuilder
*
aBuilder
LayerManager
*
aManager
const
ContainerLayerParameters
&
aParameters
)
override
;
already_AddRefed
<
Layer
>
BuildLayer
(
nsDisplayListBuilder
*
aBuilder
LayerManager
*
aManager
const
ContainerLayerParameters
&
aContainerParameters
)
override
;
void
Paint
(
nsDisplayListBuilder
*
aBuilder
gfxContext
*
aCtx
)
override
;
bool
CreateWebRenderCommands
(
mozilla
:
:
wr
:
:
DisplayListBuilder
&
aBuilder
mozilla
:
:
wr
:
:
IpcResourceUpdateQueue
&
aResources
const
StackingContextHelper
&
aSc
mozilla
:
:
layers
:
:
RenderRootStateManager
*
aManager
nsDisplayListBuilder
*
aDisplayListBuilder
)
override
;
bool
UpdateScrollData
(
mozilla
:
:
layers
:
:
WebRenderScrollData
*
aData
mozilla
:
:
layers
:
:
WebRenderLayerScrollData
*
aLayerData
)
override
;
NS_DISPLAY_DECL_NAME
(
"
Remote
"
TYPE_REMOTE
)
private
:
LayersId
GetRemoteLayersId
(
)
const
;
RenderFrame
*
GetRenderFrame
(
)
const
;
TabId
mTabId
;
LayoutDeviceIntPoint
mOffset
;
EventRegionsOverride
mEventRegionsOverride
;
}
;
#
endif
