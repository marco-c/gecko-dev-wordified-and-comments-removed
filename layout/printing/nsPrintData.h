#
ifndef
nsPrintData_h___
#
define
nsPrintData_h___
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
nsDeviceContext
.
h
"
#
include
"
nsIPrintSettings
.
h
"
#
include
"
nsISupportsImpl
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
nsCOMArray
.
h
"
class
nsPrintObject
;
class
nsIPrintProgressParams
;
class
nsIWebProgressListener
;
namespace
mozilla
{
class
PrintPreviewUserEventSuppressor
;
}
class
nsPrintData
{
typedef
mozilla
:
:
PrintPreviewUserEventSuppressor
PrintPreviewUserEventSuppressor
;
public
:
typedef
enum
{
eIsPrinting
eIsPrintPreview
}
ePrintDataType
;
explicit
nsPrintData
(
ePrintDataType
aType
)
;
NS_INLINE_DECL_REFCOUNTING
(
nsPrintData
)
void
OnEndPrinting
(
)
;
void
OnStartPrinting
(
)
;
void
DoOnProgressChange
(
int32_t
aProgress
int32_t
aMaxProgress
bool
aDoStartStop
int32_t
aFlag
)
;
void
DoOnStatusChange
(
nsresult
aStatus
)
;
ePrintDataType
mType
;
RefPtr
<
nsDeviceContext
>
mPrintDC
;
mozilla
:
:
UniquePtr
<
nsPrintObject
>
mPrintObject
;
nsCOMArray
<
nsIWebProgressListener
>
mPrintProgressListeners
;
nsCOMPtr
<
nsIPrintProgressParams
>
mPrintProgressParams
;
nsCOMPtr
<
nsPIDOMWindowOuter
>
mCurrentFocusWin
;
nsTArray
<
nsPrintObject
*
>
mPrintDocList
;
bool
mIsParentAFrameSet
;
bool
mOnStartSent
;
bool
mIsAborted
;
bool
mPreparingForPrint
;
bool
mShrinkToFit
;
int32_t
mNumPrintablePages
;
int32_t
mNumPagesPrinted
;
float
mShrinkRatio
;
nsCOMPtr
<
nsIPrintSettings
>
mPrintSettings
;
RefPtr
<
PrintPreviewUserEventSuppressor
>
mPPEventSuppressor
;
private
:
nsPrintData
(
)
=
delete
;
nsPrintData
&
operator
=
(
const
nsPrintData
&
aOther
)
=
delete
;
~
nsPrintData
(
)
;
}
;
#
endif
