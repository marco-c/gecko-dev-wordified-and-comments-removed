#
ifndef
nsPagePrintTimer_h___
#
define
nsPagePrintTimer_h___
#
include
"
nsITimer
.
h
"
#
include
"
nsIDocumentViewerPrint
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
OwningNonNull
.
h
"
#
include
"
nsThreadUtils
.
h
"
class
nsPrintJob
;
class
nsPrintObject
;
namespace
mozilla
:
:
dom
{
class
Document
;
}
class
nsPagePrintTimer
final
:
public
mozilla
:
:
Runnable
public
nsITimerCallback
{
public
:
NS_DECL_ISUPPORTS_INHERITED
nsPagePrintTimer
(
nsPrintJob
*
aPrintJob
nsIDocumentViewerPrint
*
aDocViewerPrint
mozilla
:
:
dom
:
:
Document
*
aDocument
uint32_t
aDelay
)
;
NS_DECL_NSITIMERCALLBACK
nsresult
Start
(
nsPrintObject
*
aPO
)
;
NS_IMETHOD
Run
(
)
override
;
void
Stop
(
)
;
void
WaitForRemotePrint
(
)
;
void
RemotePrintFinished
(
)
;
void
Disconnect
(
)
;
private
:
~
nsPagePrintTimer
(
)
;
nsresult
StartTimer
(
bool
aUseDelay
)
;
nsresult
StartWatchDogTimer
(
)
;
void
StopWatchDogTimer
(
)
;
void
Fail
(
)
;
nsPrintJob
*
mPrintJob
;
nsCOMPtr
<
nsIDocumentViewerPrint
>
mDocViewerPrint
;
RefPtr
<
mozilla
:
:
dom
:
:
Document
>
mDocument
;
nsCOMPtr
<
nsITimer
>
mTimer
;
nsCOMPtr
<
nsITimer
>
mWatchDogTimer
;
nsCOMPtr
<
nsITimer
>
mWaitingForRemotePrint
;
uint32_t
mDelay
;
uint32_t
mFiringCount
;
nsPrintObject
*
mPrintObj
;
uint32_t
mWatchDogCount
;
bool
mDone
;
static
const
uint32_t
WATCH_DOG_INTERVAL
=
1000
;
static
const
uint32_t
WATCH_DOG_MAX_COUNT
=
#
ifdef
DEBUG
30
#
else
10
#
endif
;
}
;
#
endif
