#
ifndef
nsPrintObject_h___
#
define
nsPrintObject_h___
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsViewManager
.
h
"
#
include
"
nsIDocShell
.
h
"
#
include
"
nsIDocShellTreeOwner
.
h
"
class
nsIContent
;
class
nsPresContext
;
namespace
mozilla
{
class
PresShell
;
}
enum
PrintObjectType
{
eDoc
=
0
eIFrame
=
1
}
;
class
nsPrintObject
final
{
public
:
nsPrintObject
(
)
;
~
nsPrintObject
(
)
;
nsresult
Init
(
nsIDocShell
*
aDocShell
mozilla
:
:
dom
:
:
Document
*
aDoc
nsPrintObject
*
aParent
=
nullptr
)
;
void
DestroyPresentation
(
)
;
void
EnablePrinting
(
bool
aEnable
)
;
void
EnablePrintingSelectionOnly
(
)
;
bool
PrintingIsEnabled
(
)
const
{
return
mPrintingIsEnabled
;
}
bool
HasSelection
(
)
const
;
nsCOMPtr
<
nsIDocShell
>
mDocShell
;
nsCOMPtr
<
nsIDocShellTreeOwner
>
mTreeOwner
;
RefPtr
<
mozilla
:
:
dom
:
:
Document
>
mDocument
;
RefPtr
<
nsPresContext
>
mPresContext
;
RefPtr
<
mozilla
:
:
PresShell
>
mPresShell
;
RefPtr
<
nsViewManager
>
mViewManager
;
nsCOMPtr
<
nsIContent
>
mContent
;
PrintObjectType
mFrameType
;
nsTArray
<
mozilla
:
:
UniquePtr
<
nsPrintObject
>
>
mKids
;
nsPrintObject
*
mParent
;
bool
mHasBeenPrinted
;
bool
mInvisible
;
float
mZoomRatio
=
1
.
0
;
float
mShrinkRatio
=
1
.
0
;
private
:
nsPrintObject
&
operator
=
(
const
nsPrintObject
&
aOther
)
=
delete
;
bool
mPrintingIsEnabled
=
false
;
}
;
#
endif
