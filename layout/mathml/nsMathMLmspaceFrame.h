#
ifndef
nsMathMLmspaceFrame_h___
#
define
nsMathMLmspaceFrame_h___
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsCSSValue
.
h
"
#
include
"
nsMathMLContainerFrame
.
h
"
namespace
mozilla
{
class
PresShell
;
}
class
nsMathMLmspaceFrame
final
:
public
nsMathMLContainerFrame
{
public
:
NS_DECL_FRAMEARENA_HELPERS
(
nsMathMLmspaceFrame
)
friend
nsIFrame
*
NS_NewMathMLmspaceFrame
(
mozilla
:
:
PresShell
*
aPresShell
ComputedStyle
*
aStyle
)
;
NS_IMETHOD
TransmitAutomaticData
(
)
override
{
mPresentationData
.
flags
|
=
NS_MATHML_SPACE_LIKE
;
return
NS_OK
;
}
protected
:
explicit
nsMathMLmspaceFrame
(
ComputedStyle
*
aStyle
nsPresContext
*
aPresContext
)
:
nsMathMLContainerFrame
(
aStyle
aPresContext
kClassID
)
{
}
virtual
~
nsMathMLmspaceFrame
(
)
;
private
:
struct
Attribute
{
nsCSSValue
mValue
;
enum
class
ParsingState
:
uint8_t
{
Valid
Invalid
Dirty
}
;
ParsingState
mState
=
ParsingState
:
:
Dirty
;
}
;
Attribute
mWidth
;
Attribute
mHeight
;
Attribute
mDepth
;
nsresult
AttributeChanged
(
int32_t
aNameSpaceID
nsAtom
*
aAttribute
AttrModType
aModType
)
final
;
nscoord
CalculateAttributeValue
(
nsAtom
*
aAtom
Attribute
&
aAttribute
uint32_t
aFlags
float
aFontSizeInflation
)
;
nsresult
Place
(
DrawTarget
*
aDrawTarget
const
PlaceFlags
&
aFlags
ReflowOutput
&
aDesiredSize
)
final
;
}
;
#
endif
