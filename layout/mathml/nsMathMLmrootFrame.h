#
ifndef
nsMathMLmrootFrame_h___
#
define
nsMathMLmrootFrame_h___
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsMathMLContainerFrame
.
h
"
#
include
"
nsMathMLChar
.
h
"
namespace
mozilla
{
class
PresShell
;
}
class
nsMathMLmrootFrame
:
public
nsMathMLContainerFrame
{
public
:
NS_DECL_FRAMEARENA_HELPERS
(
nsMathMLmrootFrame
)
friend
nsIFrame
*
NS_NewMathMLmrootFrame
(
mozilla
:
:
PresShell
*
aPresShell
ComputedStyle
*
aStyle
)
;
void
DidSetComputedStyle
(
ComputedStyle
*
aOldStyle
)
override
;
virtual
void
Init
(
nsIContent
*
aContent
nsContainerFrame
*
aParent
nsIFrame
*
aPrevInFlow
)
override
;
NS_IMETHOD
TransmitAutomaticData
(
)
override
;
void
GetRadicalXOffsets
(
nscoord
aIndexWidth
nscoord
aSqrWidth
nsFontMetrics
*
aFontMetrics
nscoord
*
aIndexOffset
nscoord
*
aSqrOffset
)
;
virtual
void
BuildDisplayList
(
nsDisplayListBuilder
*
aBuilder
const
nsDisplayListSet
&
aLists
)
override
;
uint8_t
ScriptIncrement
(
nsIFrame
*
aFrame
)
override
{
return
(
aFrame
&
&
aFrame
=
=
mFrames
.
LastChild
(
)
)
?
2
:
0
;
}
protected
:
explicit
nsMathMLmrootFrame
(
ComputedStyle
*
aStyle
nsPresContext
*
aPresContext
ClassID
aID
=
kClassID
)
;
virtual
~
nsMathMLmrootFrame
(
)
;
nsMathMLChar
mSqrChar
;
nsRect
mBarRect
;
private
:
bool
ShouldUseRowFallback
(
)
;
nsresult
Place
(
DrawTarget
*
aDrawTarget
const
PlaceFlags
&
aFlags
ReflowOutput
&
aDesiredSize
)
final
;
}
;
#
endif
