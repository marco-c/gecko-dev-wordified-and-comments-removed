#
ifndef
nsMathMLmfracFrame_h___
#
define
nsMathMLmfracFrame_h___
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsMathMLContainerFrame
.
h
"
namespace
mozilla
{
class
PresShell
;
}
class
nsMathMLmfracFrame
final
:
public
nsMathMLContainerFrame
{
public
:
NS_DECL_FRAMEARENA_HELPERS
(
nsMathMLmfracFrame
)
friend
nsIFrame
*
NS_NewMathMLmfracFrame
(
mozilla
:
:
PresShell
*
aPresShell
ComputedStyle
*
aStyle
)
;
eMathMLFrameType
GetMathMLFrameType
(
)
override
;
nsresult
Place
(
DrawTarget
*
aDrawTarget
const
PlaceFlags
&
aFlags
ReflowOutput
&
aDesiredSize
)
override
;
void
BuildDisplayList
(
nsDisplayListBuilder
*
aBuilder
const
nsDisplayListSet
&
aLists
)
override
;
nsresult
AttributeChanged
(
int32_t
aNameSpaceID
nsAtom
*
aAttribute
int32_t
aModType
)
override
;
NS_IMETHOD
TransmitAutomaticData
(
)
override
;
nscoord
FixInterFrameSpacing
(
ReflowOutput
&
aDesiredSize
)
override
;
nscoord
CalcLineThickness
(
nsPresContext
*
aPresContext
ComputedStyle
*
aComputedStyle
nsString
&
aThicknessAttribute
nscoord
onePixel
nscoord
aDefaultRuleThickness
float
aFontSizeInflation
)
;
uint8_t
ScriptIncrement
(
nsIFrame
*
aFrame
)
override
;
protected
:
explicit
nsMathMLmfracFrame
(
ComputedStyle
*
aStyle
nsPresContext
*
aPresContext
)
:
nsMathMLContainerFrame
(
aStyle
aPresContext
kClassID
)
mSlashChar
(
nullptr
)
mLineThickness
(
0
)
{
}
virtual
~
nsMathMLmfracFrame
(
)
;
bool
IsMathContentBoxHorizontallyCentered
(
)
const
final
{
return
true
;
}
void
DisplaySlash
(
nsDisplayListBuilder
*
aBuilder
const
nsRect
&
aRect
nscoord
aThickness
const
nsDisplayListSet
&
aLists
)
;
nsRect
mLineRect
;
nsMathMLChar
*
mSlashChar
;
nscoord
mLineThickness
;
}
;
#
endif
