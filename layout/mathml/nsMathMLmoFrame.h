#
ifndef
nsMathMLmoFrame_h___
#
define
nsMathMLmoFrame_h___
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsMathMLChar
.
h
"
#
include
"
nsMathMLTokenFrame
.
h
"
namespace
mozilla
{
class
PresShell
;
}
class
nsMathMLmoFrame
final
:
public
nsMathMLTokenFrame
{
public
:
NS_DECL_FRAMEARENA_HELPERS
(
nsMathMLmoFrame
)
friend
nsIFrame
*
NS_NewMathMLmoFrame
(
mozilla
:
:
PresShell
*
aPresShell
ComputedStyle
*
aStyle
)
;
eMathMLFrameType
GetMathMLFrameType
(
)
override
;
void
DidSetComputedStyle
(
ComputedStyle
*
aOldStyle
)
override
;
void
BuildDisplayList
(
nsDisplayListBuilder
*
aBuilder
const
nsDisplayListSet
&
aLists
)
override
;
NS_IMETHOD
InheritAutomaticData
(
nsIFrame
*
aParent
)
override
;
NS_IMETHOD
TransmitAutomaticData
(
)
override
;
void
SetInitialChildList
(
ChildListID
aListID
nsFrameList
&
&
aChildList
)
override
;
void
Reflow
(
nsPresContext
*
aPresContext
ReflowOutput
&
aDesiredSize
const
ReflowInput
&
aReflowInput
nsReflowStatus
&
aStatus
)
override
;
nsresult
Place
(
DrawTarget
*
aDrawTarget
const
PlaceFlags
&
aFlags
ReflowOutput
&
aDesiredSize
)
override
;
void
MarkIntrinsicISizesDirty
(
)
override
;
void
GetIntrinsicISizeMetrics
(
gfxContext
*
aRenderingContext
ReflowOutput
&
aDesiredSize
)
override
;
nsresult
AttributeChanged
(
int32_t
aNameSpaceID
nsAtom
*
aAttribute
AttrModType
aModType
)
override
;
NS_IMETHOD
Stretch
(
DrawTarget
*
aDrawTarget
nsStretchDirection
aStretchDirection
nsBoundingMetrics
&
aContainerSize
ReflowOutput
&
aDesiredStretchSize
)
override
;
nsresult
ChildListChanged
(
int32_t
aModType
)
override
{
ProcessTextData
(
)
;
return
nsMathMLContainerFrame
:
:
ChildListChanged
(
aModType
)
;
}
protected
:
explicit
nsMathMLmoFrame
(
ComputedStyle
*
aStyle
nsPresContext
*
aPresContext
)
:
nsMathMLTokenFrame
(
aStyle
aPresContext
kClassID
)
mFlags
(
0
)
mMinSize
(
0
)
mMaxSize
(
0
)
{
}
virtual
~
nsMathMLmoFrame
(
)
;
nsMathMLChar
mMathMLChar
;
nsOperatorFlags
mFlags
;
float
mMinSize
;
float
mMaxSize
;
bool
UseMathMLChar
(
)
;
void
ProcessTextData
(
)
;
void
ProcessOperatorData
(
)
;
bool
IsFrameInSelection
(
nsIFrame
*
aFrame
)
;
}
;
#
endif
