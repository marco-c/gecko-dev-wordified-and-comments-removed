#
ifndef
nsStackLayout_h___
#
define
nsStackLayout_h___
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsBoxLayout
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsCoord
.
h
"
nsresult
NS_NewStackLayout
(
nsCOMPtr
<
nsBoxLayout
>
&
aNewLayout
)
;
class
nsStackLayout
:
public
nsBoxLayout
{
public
:
friend
nsresult
NS_NewStackLayout
(
nsCOMPtr
<
nsBoxLayout
>
&
aNewLayout
)
;
static
void
Shutdown
(
)
;
nsStackLayout
(
)
;
NS_IMETHOD
XULLayout
(
nsIFrame
*
aBox
nsBoxLayoutState
&
aState
)
override
;
virtual
nsSize
GetXULPrefSize
(
nsIFrame
*
aBox
nsBoxLayoutState
&
aBoxLayoutState
)
override
;
virtual
nsSize
GetXULMinSize
(
nsIFrame
*
aBox
nsBoxLayoutState
&
aBoxLayoutState
)
override
;
virtual
nsSize
GetXULMaxSize
(
nsIFrame
*
aBox
nsBoxLayoutState
&
aBoxLayoutState
)
override
;
virtual
nscoord
GetAscent
(
nsIFrame
*
aBox
nsBoxLayoutState
&
aBoxLayoutState
)
override
;
static
uint8_t
GetOffset
(
nsIFrame
*
aChild
nsMargin
&
aMargin
)
;
private
:
static
nsBoxLayout
*
gInstance
;
}
;
#
endif
