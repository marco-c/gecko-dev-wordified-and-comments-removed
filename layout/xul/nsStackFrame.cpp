#
include
"
nsStackFrame
.
h
"
#
include
"
mozilla
/
ComputedStyle
.
h
"
#
include
"
nsIContent
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsHTMLParts
.
h
"
#
include
"
nsIPresShell
.
h
"
#
include
"
nsCSSRendering
.
h
"
#
include
"
nsBoxLayoutState
.
h
"
#
include
"
nsStackLayout
.
h
"
#
include
"
nsDisplayList
.
h
"
using
namespace
mozilla
;
nsIFrame
*
NS_NewStackFrame
(
nsIPresShell
*
aPresShell
ComputedStyle
*
aStyle
)
{
return
new
(
aPresShell
)
nsStackFrame
(
aStyle
)
;
}
NS_IMPL_FRAMEARENA_HELPERS
(
nsStackFrame
)
nsStackFrame
:
:
nsStackFrame
(
ComputedStyle
*
aStyle
)
:
nsBoxFrame
(
aStyle
kClassID
)
{
nsCOMPtr
<
nsBoxLayout
>
layout
;
NS_NewStackLayout
(
layout
)
;
SetXULLayoutManager
(
layout
)
;
}
void
nsStackFrame
:
:
BuildDisplayListForChildren
(
nsDisplayListBuilder
*
aBuilder
const
nsDisplayListSet
&
aLists
)
{
nsDisplayList
*
content
=
aLists
.
Content
(
)
;
nsDisplayListSet
kidLists
(
content
content
content
content
content
content
)
;
nsIFrame
*
kid
=
mFrames
.
FirstChild
(
)
;
while
(
kid
)
{
BuildDisplayListForChild
(
aBuilder
kid
kidLists
DISPLAY_CHILD_FORCE_STACKING_CONTEXT
)
;
kid
=
kid
-
>
GetNextSibling
(
)
;
}
}
