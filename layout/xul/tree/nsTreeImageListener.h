#
ifndef
nsTreeImageListener_h__
#
define
nsTreeImageListener_h__
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsString
.
h
"
#
include
"
nsTreeBodyFrame
.
h
"
class
nsTreeColumn
;
class
nsTreeImageListener
final
:
public
imgINotificationObserver
{
public
:
explicit
nsTreeImageListener
(
nsTreeBodyFrame
*
aTreeFrame
)
;
NS_DECL_ISUPPORTS
NS_DECL_IMGINOTIFICATIONOBSERVER
void
ClearFrame
(
)
{
mTreeFrame
=
nullptr
;
}
friend
class
nsTreeBodyFrame
;
protected
:
~
nsTreeImageListener
(
)
;
void
UnsuppressInvalidation
(
)
{
mInvalidationSuppressed
=
false
;
}
void
Invalidate
(
)
;
void
AddCell
(
int32_t
aIndex
nsTreeColumn
*
aCol
)
;
private
:
nsTreeBodyFrame
*
mTreeFrame
;
bool
mInvalidationSuppressed
;
class
InvalidationArea
{
public
:
explicit
InvalidationArea
(
nsTreeColumn
*
aCol
)
;
~
InvalidationArea
(
)
{
delete
mNext
;
}
friend
class
nsTreeImageListener
;
protected
:
void
AddRow
(
int32_t
aIndex
)
;
nsTreeColumn
*
GetCol
(
)
{
return
mCol
.
get
(
)
;
}
int32_t
GetMin
(
)
{
return
mMin
;
}
int32_t
GetMax
(
)
{
return
mMax
;
}
InvalidationArea
*
GetNext
(
)
{
return
mNext
;
}
void
SetNext
(
InvalidationArea
*
aNext
)
{
mNext
=
aNext
;
}
private
:
RefPtr
<
nsTreeColumn
>
mCol
;
int32_t
mMin
;
int32_t
mMax
;
InvalidationArea
*
mNext
;
}
;
InvalidationArea
*
mInvalidationArea
;
}
;
#
endif
