#
ifndef
nsScrollbarButtonFrame_h___
#
define
nsScrollbarButtonFrame_h___
#
include
"
SimpleXULLeafFrame
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsLeafFrame
.
h
"
#
include
"
nsRepeatService
.
h
"
namespace
mozilla
{
class
PresShell
;
}
class
nsScrollbarButtonFrame
final
:
public
mozilla
:
:
SimpleXULLeafFrame
{
public
:
NS_DECL_FRAMEARENA_HELPERS
(
nsScrollbarButtonFrame
)
explicit
nsScrollbarButtonFrame
(
ComputedStyle
*
aStyle
nsPresContext
*
aPresContext
)
:
mozilla
:
:
SimpleXULLeafFrame
(
aStyle
aPresContext
kClassID
)
{
}
void
Destroy
(
DestroyContext
&
)
override
;
friend
nsIFrame
*
NS_NewScrollbarButtonFrame
(
mozilla
:
:
PresShell
*
aPresShell
ComputedStyle
*
aStyle
)
;
nsresult
HandleEvent
(
nsPresContext
*
aPresContext
mozilla
:
:
WidgetGUIEvent
*
aEvent
nsEventStatus
*
aEventStatus
)
override
;
static
nsresult
GetChildWithTag
(
nsAtom
*
atom
nsIFrame
*
start
nsIFrame
*
&
result
)
;
static
nsresult
GetParentWithTag
(
nsAtom
*
atom
nsIFrame
*
start
nsIFrame
*
&
result
)
;
bool
HandleButtonPress
(
nsPresContext
*
aPresContext
mozilla
:
:
WidgetGUIEvent
*
aEvent
nsEventStatus
*
aEventStatus
)
;
NS_IMETHOD
HandleMultiplePress
(
nsPresContext
*
aPresContext
mozilla
:
:
WidgetGUIEvent
*
aEvent
nsEventStatus
*
aEventStatus
bool
aControlHeld
)
override
{
return
NS_OK
;
}
MOZ_CAN_RUN_SCRIPT
NS_IMETHOD
HandleDrag
(
nsPresContext
*
aPresContext
mozilla
:
:
WidgetGUIEvent
*
aEvent
nsEventStatus
*
aEventStatus
)
override
{
return
NS_OK
;
}
NS_IMETHOD
HandleRelease
(
nsPresContext
*
aPresContext
mozilla
:
:
WidgetGUIEvent
*
aEvent
nsEventStatus
*
aEventStatus
)
override
;
protected
:
void
StartRepeat
(
)
{
nsRepeatService
:
:
GetInstance
(
)
-
>
Start
(
Notify
this
mContent
-
>
OwnerDoc
(
)
"
nsScrollbarButtonFrame
"
_ns
)
;
}
void
StopRepeat
(
)
{
nsRepeatService
:
:
GetInstance
(
)
-
>
Stop
(
Notify
this
)
;
}
void
Notify
(
)
;
static
void
Notify
(
void
*
aData
)
{
static_cast
<
nsScrollbarButtonFrame
*
>
(
aData
)
-
>
Notify
(
)
;
}
bool
mCursorOnThis
=
false
;
}
;
#
endif
