#
include
"
nsGridRowLeafFrame
.
h
"
#
include
"
nsGridRowLeafLayout
.
h
"
#
include
"
nsGridRow
.
h
"
#
include
"
nsBoxLayoutState
.
h
"
#
include
"
nsGridLayout2
.
h
"
already_AddRefed
<
nsBoxLayout
>
NS_NewGridRowLeafLayout
(
)
;
nsIFrame
*
NS_NewGridRowLeafFrame
(
nsIPresShell
*
aPresShell
nsStyleContext
*
aContext
)
{
nsCOMPtr
<
nsBoxLayout
>
layout
=
NS_NewGridRowLeafLayout
(
)
;
return
new
(
aPresShell
)
nsGridRowLeafFrame
(
aContext
false
layout
)
;
}
NS_IMPL_FRAMEARENA_HELPERS
(
nsGridRowLeafFrame
)
nsresult
nsGridRowLeafFrame
:
:
GetXULBorderAndPadding
(
nsMargin
&
aBorderAndPadding
)
{
nsresult
rv
=
nsBoxFrame
:
:
GetXULBorderAndPadding
(
aBorderAndPadding
)
;
nsIGridPart
*
part
=
nsGrid
:
:
GetPartFromBox
(
this
)
;
if
(
!
part
)
return
rv
;
int32_t
index
=
0
;
nsGrid
*
grid
=
part
-
>
GetGrid
(
this
&
index
)
;
if
(
!
grid
)
return
rv
;
bool
isHorizontal
=
IsHorizontal
(
)
;
int32_t
firstIndex
=
0
;
int32_t
lastIndex
=
0
;
nsGridRow
*
firstRow
=
nullptr
;
nsGridRow
*
lastRow
=
nullptr
;
grid
-
>
GetFirstAndLastRow
(
firstIndex
lastIndex
firstRow
lastRow
isHorizontal
)
;
if
(
firstRow
&
&
firstRow
-
>
GetBox
(
)
=
=
this
)
{
nscoord
top
=
0
;
nscoord
bottom
=
0
;
grid
-
>
GetRowOffsets
(
firstIndex
top
bottom
isHorizontal
)
;
if
(
isHorizontal
)
{
if
(
top
>
aBorderAndPadding
.
top
)
aBorderAndPadding
.
top
=
top
;
}
else
{
if
(
top
>
aBorderAndPadding
.
left
)
aBorderAndPadding
.
left
=
top
;
}
}
if
(
lastRow
&
&
lastRow
-
>
GetBox
(
)
=
=
this
)
{
nscoord
top
=
0
;
nscoord
bottom
=
0
;
grid
-
>
GetRowOffsets
(
lastIndex
top
bottom
isHorizontal
)
;
if
(
isHorizontal
)
{
if
(
bottom
>
aBorderAndPadding
.
bottom
)
aBorderAndPadding
.
bottom
=
bottom
;
}
else
{
if
(
bottom
>
aBorderAndPadding
.
right
)
aBorderAndPadding
.
right
=
bottom
;
}
}
return
rv
;
}
