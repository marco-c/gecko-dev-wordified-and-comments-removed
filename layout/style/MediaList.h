#
ifndef
mozilla_dom_MediaList_h
#
define
mozilla_dom_MediaList_h
#
include
"
mozilla
/
dom
/
BindingDeclarations
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
#
include
"
mozilla
/
ServoUtils
.
h
"
#
include
"
mozilla
/
StyleBackendType
.
h
"
#
include
"
nsWrapperCache
.
h
"
class
nsIDocument
;
class
nsPresContext
;
class
nsMediaQueryResultCacheKey
;
namespace
mozilla
{
class
StyleSheet
;
namespace
dom
{
class
MediaList
:
public
nsISupports
public
nsWrapperCache
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
MediaList
)
static
already_AddRefed
<
MediaList
>
Create
(
StyleBackendType
const
nsAString
&
aMedia
CallerType
aCallerType
=
CallerType
:
:
NonSystem
)
;
virtual
already_AddRefed
<
MediaList
>
Clone
(
)
=
0
;
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
final
;
nsISupports
*
GetParentObject
(
)
const
{
return
nullptr
;
}
virtual
void
GetText
(
nsAString
&
aMediaText
)
=
0
;
virtual
void
SetText
(
const
nsAString
&
aMediaText
)
=
0
;
virtual
bool
Matches
(
nsPresContext
*
aPresContext
)
const
=
0
;
void
SetStyleSheet
(
StyleSheet
*
aSheet
)
;
void
GetMediaText
(
nsAString
&
aMediaText
)
;
void
SetMediaText
(
const
nsAString
&
aMediaText
)
;
virtual
uint32_t
Length
(
)
=
0
;
virtual
void
IndexedGetter
(
uint32_t
aIndex
bool
&
aFound
nsAString
&
aReturn
)
=
0
;
void
Item
(
uint32_t
aIndex
nsAString
&
aResult
)
;
void
DeleteMedium
(
const
nsAString
&
aMedium
ErrorResult
&
aRv
)
;
void
AppendMedium
(
const
nsAString
&
aMedium
ErrorResult
&
aRv
)
;
protected
:
virtual
nsresult
Delete
(
const
nsAString
&
aOldMedium
)
=
0
;
virtual
nsresult
Append
(
const
nsAString
&
aNewMedium
)
=
0
;
virtual
~
MediaList
(
)
{
MOZ_ASSERT
(
!
mStyleSheet
"
Backpointer
should
have
been
cleared
"
)
;
}
StyleSheet
*
mStyleSheet
=
nullptr
;
private
:
template
<
typename
Func
>
inline
nsresult
DoMediaChange
(
Func
aCallback
)
;
}
;
}
}
#
endif
