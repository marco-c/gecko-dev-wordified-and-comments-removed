#
include
"
StyleSheetInfo
.
h
"
#
include
"
nsIURI
.
h
"
#
include
"
nsNullPrincipal
.
h
"
namespace
mozilla
{
using
namespace
mozilla
:
:
dom
;
StyleSheetInfo
:
:
StyleSheetInfo
(
CORSMode
aCORSMode
ReferrerPolicy
aReferrerPolicy
const
SRIMetadata
&
aIntegrity
)
:
mCORSMode
(
aCORSMode
)
mReferrerPolicy
(
aReferrerPolicy
)
mIntegrity
(
aIntegrity
)
mComplete
(
false
)
#
ifdef
DEBUG
mPrincipalSet
(
false
)
#
endif
{
mPrincipal
=
nsNullPrincipal
:
:
Create
(
)
;
if
(
!
mPrincipal
)
{
NS_RUNTIMEABORT
(
"
nsNullPrincipal
:
:
Init
failed
"
)
;
}
}
StyleSheetInfo
:
:
StyleSheetInfo
(
const
StyleSheetInfo
&
aCopy
)
:
mSheetURI
(
aCopy
.
mSheetURI
)
mOriginalSheetURI
(
aCopy
.
mOriginalSheetURI
)
mBaseURI
(
aCopy
.
mBaseURI
)
mPrincipal
(
aCopy
.
mPrincipal
)
mCORSMode
(
aCopy
.
mCORSMode
)
mReferrerPolicy
(
aCopy
.
mReferrerPolicy
)
mIntegrity
(
aCopy
.
mIntegrity
)
mComplete
(
aCopy
.
mComplete
)
#
ifdef
DEBUG
mPrincipalSet
(
aCopy
.
mPrincipalSet
)
#
endif
{
}
void
StyleSheetInfo
:
:
SetURIs
(
nsIURI
*
aSheetURI
nsIURI
*
aOriginalSheetURI
nsIURI
*
aBaseURI
)
{
NS_PRECONDITION
(
aSheetURI
&
&
aBaseURI
"
null
ptr
"
)
;
mSheetURI
=
aSheetURI
;
mOriginalSheetURI
=
aOriginalSheetURI
;
mBaseURI
=
aBaseURI
;
}
void
StyleSheetInfo
:
:
SetPrincipal
(
nsIPrincipal
*
aPrincipal
)
{
NS_PRECONDITION
(
!
mPrincipalSet
"
Should
only
set
principal
once
"
)
;
if
(
aPrincipal
)
{
mPrincipal
=
aPrincipal
;
#
ifdef
DEBUG
mPrincipalSet
=
true
;
#
endif
}
}
}
