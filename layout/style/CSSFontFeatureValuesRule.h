#
ifndef
mozilla_dom_CSSFontFeatureValuesRule_h
#
define
mozilla_dom_CSSFontFeatureValuesRule_h
#
include
"
mozilla
/
css
/
Rule
.
h
"
#
include
"
nsICSSDeclaration
.
h
"
#
include
"
nsIDOMCSSFontFeatureValuesRule
.
h
"
#
include
"
nsIDOMCSSStyleDeclaration
.
h
"
namespace
mozilla
{
namespace
dom
{
class
CSSFontFeatureValuesRule
:
public
css
:
:
Rule
public
nsIDOMCSSFontFeatureValuesRule
{
public
:
NS_DECL_ISUPPORTS_INHERITED
virtual
bool
IsCCLeaf
(
)
const
override
;
int32_t
GetType
(
)
const
final
{
return
Rule
:
:
FONT_FEATURE_VALUES_RULE
;
}
using
Rule
:
:
GetType
;
virtual
already_AddRefed
<
mozilla
:
:
css
:
:
Rule
>
Clone
(
)
const
override
=
0
;
using
nsIDOMCSSFontFeatureValuesRule
:
:
SetFontFamily
;
using
nsIDOMCSSFontFeatureValuesRule
:
:
SetValueText
;
uint16_t
Type
(
)
const
final
{
return
nsIDOMCSSRule
:
:
FONT_FEATURE_VALUES_RULE
;
}
virtual
void
GetCssTextImpl
(
nsAString
&
aCssText
)
const
override
=
0
;
void
SetFontFamily
(
const
nsAString
&
aFamily
mozilla
:
:
ErrorResult
&
aRv
)
;
void
SetValueText
(
const
nsAString
&
aFamily
mozilla
:
:
ErrorResult
&
aRv
)
;
virtual
size_t
SizeOfIncludingThis
(
MallocSizeOf
aMallocSizeOf
)
const
override
=
0
;
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
protected
:
using
Rule
:
:
Rule
;
virtual
~
CSSFontFeatureValuesRule
(
)
{
}
;
}
;
}
}
#
endif
