#
ifndef
mozilla_dom_CSSImportRule_h
#
define
mozilla_dom_CSSImportRule_h
#
include
"
mozilla
/
css
/
Rule
.
h
"
namespace
mozilla
{
class
StyleSheet
;
namespace
dom
{
class
CSSImportRule
final
:
public
css
:
:
Rule
{
public
:
CSSImportRule
(
RefPtr
<
RawServoImportRule
>
aRawRule
StyleSheet
*
aSheet
css
:
:
Rule
*
aParentRule
uint32_t
aLine
uint32_t
aColumn
)
;
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED
(
CSSImportRule
css
:
:
Rule
)
bool
IsCCLeaf
(
)
const
final
;
#
ifdef
DEBUG
void
List
(
FILE
*
out
=
stdout
int32_t
aIndent
=
0
)
const
final
;
#
endif
size_t
SizeOfIncludingThis
(
MallocSizeOf
)
const
override
;
StyleCssRuleType
Type
(
)
const
final
;
void
GetCssText
(
nsACString
&
aCssText
)
const
override
;
void
GetHref
(
nsAString
&
aHref
)
const
;
dom
:
:
MediaList
*
GetMedia
(
)
;
StyleSheet
*
GetStyleSheet
(
)
const
{
return
mChildSheet
;
}
StyleSheet
*
GetStyleSheetForBindings
(
)
;
void
GetLayerName
(
nsACString
&
)
const
;
void
DropSheetReference
(
)
final
;
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
const
RawServoImportRule
*
Raw
(
)
const
{
return
mRawRule
.
get
(
)
;
}
void
SetRawAfterClone
(
RefPtr
<
RawServoImportRule
>
)
;
private
:
~
CSSImportRule
(
)
;
RefPtr
<
RawServoImportRule
>
mRawRule
;
RefPtr
<
StyleSheet
>
mChildSheet
;
}
;
}
}
#
endif
