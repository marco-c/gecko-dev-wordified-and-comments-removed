#
ifndef
nsMediaFeatures_h_
#
define
nsMediaFeatures_h_
#
include
"
nsCSSProps
.
h
"
class
nsIAtom
;
class
nsPresContext
;
class
nsCSSValue
;
struct
nsMediaFeature
;
typedef
void
(
*
nsMediaFeatureValueGetter
)
(
nsPresContext
*
aPresContext
const
nsMediaFeature
*
aFeature
nsCSSValue
&
aResult
)
;
struct
nsMediaFeature
{
nsIAtom
*
*
mName
;
enum
RangeType
{
eMinMaxAllowed
eMinMaxNotAllowed
}
;
RangeType
mRangeType
;
enum
ValueType
{
eLength
eInteger
eFloat
eBoolInteger
eIntRatio
eResolution
eEnumerated
eIdent
}
;
ValueType
mValueType
;
enum
RequirementFlags
:
uint8_t
{
eNoRequirements
=
0
eHasWebkitPrefix
=
1
<
<
0
eWebkitDevicePixelRatioPrefEnabled
=
1
<
<
1
}
;
uint8_t
mReqFlags
;
union
{
const
void
*
mInitializer_
;
const
nsCSSProps
:
:
KTableEntry
*
mKeywordTable
;
nsIAtom
*
const
*
mMetric
;
}
mData
;
nsMediaFeatureValueGetter
mGetter
;
}
;
class
nsMediaFeatures
{
public
:
static
const
nsMediaFeature
features
[
]
;
}
;
#
endif
