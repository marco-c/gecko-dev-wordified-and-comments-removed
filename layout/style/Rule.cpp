#
include
"
Rule
.
h
"
#
include
"
mozilla
/
css
/
GroupRule
.
h
"
#
include
"
mozilla
/
dom
/
DocumentOrShadowRoot
.
h
"
#
include
"
nsCCUncollectableMarker
.
h
"
#
include
"
nsIDocument
.
h
"
#
include
"
nsWrapperCacheInlines
.
h
"
using
namespace
mozilla
;
using
namespace
mozilla
:
:
dom
;
namespace
mozilla
{
namespace
css
{
NS_IMPL_CYCLE_COLLECTING_ADDREF
(
Rule
)
NS_IMPL_CYCLE_COLLECTING_RELEASE
(
Rule
)
NS_INTERFACE_MAP_BEGIN_CYCLE_COLLECTION
(
Rule
)
NS_WRAPPERCACHE_INTERFACE_MAP_ENTRY
NS_INTERFACE_MAP_ENTRY
(
nsISupports
)
NS_INTERFACE_MAP_END
NS_IMPL_CYCLE_COLLECTION_WRAPPERCACHE_0
(
Rule
)
bool
Rule
:
:
IsCCLeaf
(
)
const
{
return
!
PreservingWrapper
(
)
;
}
bool
Rule
:
:
IsKnownLive
(
)
const
{
if
(
HasKnownLiveWrapper
(
)
)
{
return
true
;
}
StyleSheet
*
sheet
=
GetStyleSheet
(
)
;
if
(
!
sheet
)
{
return
false
;
}
if
(
!
sheet
-
>
IsKeptAliveByDocument
(
)
)
{
return
false
;
}
return
nsCCUncollectableMarker
:
:
InGeneration
(
GetComposedDoc
(
)
-
>
GetMarkedCCGeneration
(
)
)
;
}
NS_IMPL_CYCLE_COLLECTION_CAN_SKIP_BEGIN
(
Rule
)
return
tmp
-
>
IsCCLeaf
(
)
|
|
tmp
-
>
IsKnownLive
(
)
;
NS_IMPL_CYCLE_COLLECTION_CAN_SKIP_END
NS_IMPL_CYCLE_COLLECTION_CAN_SKIP_IN_CC_BEGIN
(
Rule
)
return
tmp
-
>
IsCCLeaf
(
)
|
|
(
tmp
-
>
IsKnownLive
(
)
&
&
tmp
-
>
HasNothingToTrace
(
tmp
)
)
;
NS_IMPL_CYCLE_COLLECTION_CAN_SKIP_IN_CC_END
NS_IMPL_CYCLE_COLLECTION_CAN_SKIP_THIS_BEGIN
(
Rule
)
return
tmp
-
>
IsCCLeaf
(
)
|
|
tmp
-
>
IsKnownLive
(
)
;
NS_IMPL_CYCLE_COLLECTION_CAN_SKIP_THIS_END
void
Rule
:
:
DropSheetReference
(
)
{
mSheet
=
nullptr
;
}
void
Rule
:
:
SetCssText
(
const
nsAString
&
aCssText
)
{
}
Rule
*
Rule
:
:
GetParentRule
(
)
const
{
return
mParentRule
;
}
}
}
