#
include
"
PaintWorkletGlobalScope
.
h
"
#
include
"
mozilla
/
dom
/
PaintWorkletGlobalScopeBinding
.
h
"
#
include
"
mozilla
/
dom
/
FunctionBinding
.
h
"
#
include
"
PaintWorkletImpl
.
h
"
namespace
mozilla
:
:
dom
{
PaintWorkletGlobalScope
:
:
PaintWorkletGlobalScope
(
PaintWorkletImpl
*
aImpl
)
:
WorkletGlobalScope
(
aImpl
)
{
}
PaintWorkletImpl
*
PaintWorkletGlobalScope
:
:
Impl
(
)
const
{
return
static_cast
<
PaintWorkletImpl
*
>
(
mImpl
.
get
(
)
)
;
}
bool
PaintWorkletGlobalScope
:
:
WrapGlobalObject
(
JSContext
*
aCx
JS
:
:
MutableHandle
<
JSObject
*
>
aReflector
)
{
JS
:
:
RealmOptions
options
;
options
.
behaviors
(
)
.
setShouldResistFingerprinting
(
ShouldResistFingerprinting
(
)
)
;
options
.
creationOptions
(
)
.
setDefineSharedArrayBufferConstructor
(
IsSharedMemoryAllowed
(
)
)
;
return
PaintWorkletGlobalScope_Binding
:
:
Wrap
(
aCx
this
this
options
nsJSPrincipals
:
:
get
(
mImpl
-
>
Principal
(
)
)
true
aReflector
)
;
}
void
PaintWorkletGlobalScope
:
:
RegisterPaint
(
const
nsAString
&
aType
VoidFunction
&
aProcessorCtor
)
{
}
}
