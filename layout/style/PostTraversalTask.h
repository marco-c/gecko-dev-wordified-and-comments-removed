#
ifndef
mozilla_PostTraversalTask_h
#
define
mozilla_PostTraversalTask_h
namespace
mozilla
{
namespace
dom
{
class
FontFace
;
class
FontFaceSet
;
}
}
class
gfxUserFontEntry
;
namespace
mozilla
{
class
PostTraversalTask
{
public
:
static
PostTraversalTask
ResolveFontFaceLoadedPromise
(
dom
:
:
FontFace
*
aFontFace
)
{
auto
task
=
PostTraversalTask
(
Type
:
:
ResolveFontFaceLoadedPromise
)
;
task
.
mTarget
=
aFontFace
;
return
task
;
}
static
PostTraversalTask
RejectFontFaceLoadedPromise
(
dom
:
:
FontFace
*
aFontFace
nsresult
aResult
)
{
auto
task
=
PostTraversalTask
(
Type
:
:
ResolveFontFaceLoadedPromise
)
;
task
.
mTarget
=
aFontFace
;
task
.
mResult
=
aResult
;
return
task
;
}
static
PostTraversalTask
DispatchLoadingEventAndReplaceReadyPromise
(
dom
:
:
FontFaceSet
*
aFontFaceSet
)
{
auto
task
=
PostTraversalTask
(
Type
:
:
DispatchLoadingEventAndReplaceReadyPromise
)
;
task
.
mTarget
=
aFontFaceSet
;
return
task
;
}
static
PostTraversalTask
DispatchFontFaceSetCheckLoadingFinishedAfterDelay
(
dom
:
:
FontFaceSet
*
aFontFaceSet
)
{
auto
task
=
PostTraversalTask
(
Type
:
:
DispatchFontFaceSetCheckLoadingFinishedAfterDelay
)
;
task
.
mTarget
=
aFontFaceSet
;
return
task
;
}
static
PostTraversalTask
LoadFontEntry
(
gfxUserFontEntry
*
aFontEntry
)
{
auto
task
=
PostTraversalTask
(
Type
:
:
LoadFontEntry
)
;
task
.
mTarget
=
aFontEntry
;
return
task
;
}
void
Run
(
)
;
private
:
enum
class
Type
{
ResolveFontFaceLoadedPromise
RejectFontFaceLoadedPromise
DispatchLoadingEventAndReplaceReadyPromise
DispatchFontFaceSetCheckLoadingFinishedAfterDelay
LoadFontEntry
}
;
PostTraversalTask
(
Type
aType
)
:
mType
(
aType
)
mTarget
(
nullptr
)
mResult
(
NS_OK
)
{
}
Type
mType
;
void
*
mTarget
;
nsresult
mResult
;
}
;
}
#
endif
