#
ifndef
mozilla_ServoStyleSet_h
#
define
mozilla_ServoStyleSet_h
#
include
"
mozilla
/
EnumeratedArray
.
h
"
#
include
"
mozilla
/
EventStates
.
h
"
#
include
"
mozilla
/
ServoBindingTypes
.
h
"
#
include
"
mozilla
/
ServoElementSnapshot
.
h
"
#
include
"
mozilla
/
StyleSheetInlines
.
h
"
#
include
"
mozilla
/
SheetType
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
nsCSSPseudoElements
.
h
"
#
include
"
nsCSSAnonBoxes
.
h
"
#
include
"
nsChangeHint
.
h
"
#
include
"
nsIAtom
.
h
"
#
include
"
nsTArray
.
h
"
namespace
mozilla
{
namespace
dom
{
class
Element
;
}
class
CSSStyleSheet
;
class
ServoRestyleManager
;
class
ServoStyleSheet
;
struct
Keyframe
;
struct
ServoComputedValuesWithParent
;
}
class
nsIDocument
;
class
nsStyleContext
;
class
nsPresContext
;
struct
nsTimingFunction
;
struct
TreeMatchContext
;
namespace
mozilla
{
class
ServoStyleSet
{
friend
class
ServoRestyleManager
;
public
:
class
AutoAllowStaleStyles
{
public
:
AutoAllowStaleStyles
(
ServoStyleSet
*
aStyleSet
)
:
mStyleSet
(
aStyleSet
)
{
if
(
mStyleSet
)
{
MOZ_ASSERT
(
!
mStyleSet
-
>
mAllowResolveStaleStyles
)
;
mStyleSet
-
>
mAllowResolveStaleStyles
=
true
;
}
}
~
AutoAllowStaleStyles
(
)
{
if
(
mStyleSet
)
{
mStyleSet
-
>
mAllowResolveStaleStyles
=
false
;
}
}
private
:
ServoStyleSet
*
mStyleSet
;
}
;
static
bool
IsInServoTraversal
(
)
{
MOZ_ASSERT
(
sInServoTraversal
|
|
NS_IsMainThread
(
)
)
;
return
sInServoTraversal
;
}
ServoStyleSet
(
)
;
~
ServoStyleSet
(
)
;
void
Init
(
nsPresContext
*
aPresContext
)
;
void
BeginShutdown
(
)
;
void
Shutdown
(
)
;
bool
GetAuthorStyleDisabled
(
)
const
;
nsresult
SetAuthorStyleDisabled
(
bool
aStyleDisabled
)
;
void
BeginUpdate
(
)
;
nsresult
EndUpdate
(
)
;
already_AddRefed
<
nsStyleContext
>
ResolveStyleFor
(
dom
:
:
Element
*
aElement
nsStyleContext
*
aParentContext
LazyComputeBehavior
aMayCompute
)
;
already_AddRefed
<
nsStyleContext
>
ResolveStyleFor
(
dom
:
:
Element
*
aElement
nsStyleContext
*
aParentContext
LazyComputeBehavior
aMayCompute
TreeMatchContext
&
aTreeMatchContext
)
;
already_AddRefed
<
nsStyleContext
>
ResolveStyleForText
(
nsIContent
*
aTextNode
nsStyleContext
*
aParentContext
)
;
already_AddRefed
<
nsStyleContext
>
ResolveStyleForFirstLetterContinuation
(
nsStyleContext
*
aParentContext
)
;
already_AddRefed
<
nsStyleContext
>
ResolveStyleForPlaceholder
(
)
;
already_AddRefed
<
nsStyleContext
>
ResolvePseudoElementStyle
(
dom
:
:
Element
*
aOriginatingElement
mozilla
:
:
CSSPseudoElementType
aType
nsStyleContext
*
aParentContext
dom
:
:
Element
*
aPseudoElement
)
;
already_AddRefed
<
nsStyleContext
>
ResolveTransientStyle
(
dom
:
:
Element
*
aElement
mozilla
:
:
CSSPseudoElementType
aPseudoType
)
;
already_AddRefed
<
nsStyleContext
>
ResolveInheritingAnonymousBoxStyle
(
nsIAtom
*
aPseudoTag
nsStyleContext
*
aParentContext
uint32_t
aFlags
=
0
)
;
already_AddRefed
<
nsStyleContext
>
ResolveNonInheritingAnonymousBoxStyle
(
nsIAtom
*
aPseudoTag
)
;
nsresult
AppendStyleSheet
(
SheetType
aType
ServoStyleSheet
*
aSheet
)
;
nsresult
PrependStyleSheet
(
SheetType
aType
ServoStyleSheet
*
aSheet
)
;
nsresult
RemoveStyleSheet
(
SheetType
aType
ServoStyleSheet
*
aSheet
)
;
nsresult
ReplaceSheets
(
SheetType
aType
const
nsTArray
<
RefPtr
<
ServoStyleSheet
>
>
&
aNewSheets
)
;
nsresult
InsertStyleSheetBefore
(
SheetType
aType
ServoStyleSheet
*
aNewSheet
ServoStyleSheet
*
aReferenceSheet
)
;
int32_t
SheetCount
(
SheetType
aType
)
const
;
ServoStyleSheet
*
StyleSheetAt
(
SheetType
aType
int32_t
aIndex
)
const
;
nsresult
RemoveDocStyleSheet
(
ServoStyleSheet
*
aSheet
)
;
nsresult
AddDocStyleSheet
(
ServoStyleSheet
*
aSheet
nsIDocument
*
aDocument
)
;
already_AddRefed
<
nsStyleContext
>
ProbePseudoElementStyle
(
dom
:
:
Element
*
aOriginatingElement
mozilla
:
:
CSSPseudoElementType
aType
nsStyleContext
*
aParentContext
)
;
already_AddRefed
<
nsStyleContext
>
ProbePseudoElementStyle
(
dom
:
:
Element
*
aOriginatingElement
mozilla
:
:
CSSPseudoElementType
aType
nsStyleContext
*
aParentContext
TreeMatchContext
&
aTreeMatchContext
dom
:
:
Element
*
aPseudoElement
=
nullptr
)
;
nsRestyleHint
HasStateDependentStyle
(
dom
:
:
Element
*
aElement
EventStates
aStateMask
)
;
nsRestyleHint
HasStateDependentStyle
(
dom
:
:
Element
*
aElement
mozilla
:
:
CSSPseudoElementType
aPseudoType
dom
:
:
Element
*
aPseudoElement
EventStates
aStateMask
)
;
bool
StyleDocument
(
)
;
void
StyleNewSubtree
(
Element
*
aRoot
)
;
void
StyleNewChildren
(
Element
*
aParent
)
;
void
NoteStyleSheetsChanged
(
)
;
#
ifdef
DEBUG
void
AssertTreeIsClean
(
)
;
#
else
void
AssertTreeIsClean
(
)
{
}
#
endif
void
RebuildData
(
)
;
already_AddRefed
<
ServoComputedValues
>
ResolveServoStyle
(
dom
:
:
Element
*
aElement
)
;
bool
FillKeyframesForName
(
const
nsString
&
aName
const
nsTimingFunction
&
aTimingFunction
const
ServoComputedValues
*
aComputedValues
nsTArray
<
Keyframe
>
&
aKeyframes
)
;
nsTArray
<
ComputedKeyframeValues
>
GetComputedKeyframeValuesFor
(
const
nsTArray
<
Keyframe
>
&
aKeyframes
dom
:
:
Element
*
aElement
const
ServoComputedValuesWithParent
&
aServoValues
)
;
private
:
already_AddRefed
<
nsStyleContext
>
GetContext
(
already_AddRefed
<
ServoComputedValues
>
nsStyleContext
*
aParentContext
nsIAtom
*
aPseudoTag
CSSPseudoElementType
aPseudoType
dom
:
:
Element
*
aElementForAnimation
)
;
already_AddRefed
<
nsStyleContext
>
GetContext
(
nsIContent
*
aContent
nsStyleContext
*
aParentContext
nsIAtom
*
aPseudoTag
CSSPseudoElementType
aPseudoType
LazyComputeBehavior
aMayCompute
)
;
void
ResolveMappedAttrDeclarationBlocks
(
)
;
bool
PrepareAndTraverseSubtree
(
RawGeckoElementBorrowed
aRoot
mozilla
:
:
TraversalRootBehavior
aRootBehavior
)
;
void
ClearNonInheritingStyleContexts
(
)
;
void
PreTraverse
(
)
;
void
PreTraverseSync
(
)
;
already_AddRefed
<
ServoComputedValues
>
ResolveStyleLazily
(
dom
:
:
Element
*
aElement
nsIAtom
*
aPseudoTag
)
;
nsPresContext
*
mPresContext
;
UniquePtr
<
RawServoStyleSet
>
mRawSet
;
EnumeratedArray
<
SheetType
SheetType
:
:
Count
nsTArray
<
RefPtr
<
ServoStyleSheet
>
>
>
mSheets
;
int32_t
mBatching
;
bool
mAllowResolveStaleStyles
;
EnumeratedArray
<
nsCSSAnonBoxes
:
:
NonInheriting
nsCSSAnonBoxes
:
:
NonInheriting
:
:
_Count
RefPtr
<
nsStyleContext
>
>
mNonInheritingStyleContexts
;
static
bool
sInServoTraversal
;
}
;
}
#
endif
