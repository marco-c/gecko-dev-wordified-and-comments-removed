#
ifndef
mozilla_dom_CSSKeyframesRule_h
#
define
mozilla_dom_CSSKeyframesRule_h
#
include
"
mozilla
/
css
/
GroupRule
.
h
"
#
include
"
mozilla
/
dom
/
CSSKeyframeRule
.
h
"
namespace
mozilla
{
namespace
dom
{
class
CSSKeyframesRule
:
public
css
:
:
GroupRule
{
protected
:
using
css
:
:
GroupRule
:
:
GroupRule
;
virtual
~
CSSKeyframesRule
(
)
{
}
public
:
int32_t
GetType
(
)
const
final
override
{
return
Rule
:
:
KEYFRAMES_RULE
;
}
uint16_t
Type
(
)
const
final
override
{
return
CSSRuleBinding
:
:
KEYFRAMES_RULE
;
}
virtual
void
GetName
(
nsAString
&
aName
)
const
=
0
;
virtual
void
SetName
(
const
nsAString
&
aName
)
=
0
;
virtual
CSSRuleList
*
CssRules
(
)
=
0
;
virtual
void
AppendRule
(
const
nsAString
&
aRule
)
=
0
;
virtual
void
DeleteRule
(
const
nsAString
&
aKey
)
=
0
;
virtual
CSSKeyframeRule
*
FindRule
(
const
nsAString
&
aKey
)
=
0
;
#
ifdef
MOZ_OLD_STYLE
bool
UseForPresentation
(
nsPresContext
*
aPresContext
nsMediaQueryResultCacheKey
&
aKey
)
final
override
;
#
endif
size_t
SizeOfIncludingThis
(
MallocSizeOf
aMallocSizeOf
)
const
override
=
0
;
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
final
override
;
}
;
}
}
#
endif
