#
include
"
nsIMemoryReporter
.
h
"
#
include
"
mozilla
/
CachedAnonBoxStyles
.
h
"
#
include
"
mozilla
/
ServoStyleContext
.
h
"
namespace
mozilla
{
void
CachedAnonBoxStyles
:
:
Insert
(
ServoStyleContext
*
aStyle
)
{
MOZ_ASSERT
(
aStyle
)
;
MOZ_ASSERT
(
aStyle
-
>
IsInheritingAnonBox
(
)
)
;
if
(
IsEmpty
(
)
)
{
RefPtr
<
ServoStyleContext
>
s
=
aStyle
;
mBits
=
reinterpret_cast
<
uintptr_t
>
(
s
.
forget
(
)
.
take
(
)
)
;
MOZ_ASSERT
(
!
IsEmpty
(
)
&
&
!
IsIndirect
(
)
)
;
}
else
if
(
IsIndirect
(
)
)
{
AsIndirect
(
)
-
>
AppendElement
(
aStyle
)
;
}
else
{
IndirectCache
*
cache
=
new
IndirectCache
(
)
;
cache
-
>
AppendElement
(
dont_AddRef
(
AsDirect
(
)
)
)
;
cache
-
>
AppendElement
(
aStyle
)
;
mBits
=
reinterpret_cast
<
uintptr_t
>
(
cache
)
|
1
;
MOZ_ASSERT
(
IsIndirect
(
)
)
;
}
}
ServoStyleContext
*
CachedAnonBoxStyles
:
:
Lookup
(
nsAtom
*
aAnonBox
)
const
{
MOZ_ASSERT
(
nsCSSAnonBoxes
:
:
IsInheritingAnonBox
(
aAnonBox
)
)
;
if
(
IsIndirect
(
)
)
{
for
(
auto
&
style
:
*
AsIndirect
(
)
)
{
if
(
style
-
>
GetPseudo
(
)
=
=
aAnonBox
)
{
return
style
;
}
}
return
nullptr
;
}
ServoStyleContext
*
direct
=
AsDirect
(
)
;
return
direct
&
&
direct
-
>
GetPseudo
(
)
=
=
aAnonBox
?
direct
:
nullptr
;
}
void
CachedAnonBoxStyles
:
:
AddSizeOfIncludingThis
(
nsWindowSizes
&
aSizes
size_t
*
aCVsSize
)
const
{
if
(
IsIndirect
(
)
)
{
for
(
auto
&
style
:
*
AsIndirect
(
)
)
{
if
(
!
aSizes
.
mState
.
HaveSeenPtr
(
style
)
)
{
style
-
>
AddSizeOfIncludingThis
(
aSizes
aCVsSize
)
;
}
}
return
;
}
ServoStyleContext
*
direct
=
AsDirect
(
)
;
if
(
direct
&
&
!
aSizes
.
mState
.
HaveSeenPtr
(
direct
)
)
{
direct
-
>
AddSizeOfIncludingThis
(
aSizes
aCVsSize
)
;
}
}
}
