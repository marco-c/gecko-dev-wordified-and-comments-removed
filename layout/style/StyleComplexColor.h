#
ifndef
mozilla_StyleComplexColor_h_
#
define
mozilla_StyleComplexColor_h_
#
include
"
nsColor
.
h
"
namespace
mozilla
{
struct
StyleComplexColor
{
nscolor
mColor
;
uint8_t
mForegroundRatio
;
StyleComplexColor
(
)
{
}
StyleComplexColor
(
nscolor
aColor
uint_fast8_t
aForegroundRatio
)
:
mColor
(
aColor
)
mForegroundRatio
(
aForegroundRatio
)
{
}
static
StyleComplexColor
FromColor
(
nscolor
aColor
)
{
return
StyleComplexColor
(
aColor
0
)
;
}
static
StyleComplexColor
CurrentColor
(
)
{
return
StyleComplexColor
(
NS_RGBA
(
0
0
0
0
)
255
)
;
}
bool
IsNumericColor
(
)
const
{
return
mForegroundRatio
=
=
0
;
}
bool
IsCurrentColor
(
)
const
{
return
mForegroundRatio
=
=
255
;
}
bool
operator
=
=
(
const
StyleComplexColor
&
aOther
)
const
{
return
mForegroundRatio
=
=
aOther
.
mForegroundRatio
&
&
(
IsCurrentColor
(
)
|
|
mColor
=
=
aOther
.
mColor
)
;
}
bool
operator
!
=
(
const
StyleComplexColor
&
aOther
)
const
{
return
!
(
*
this
=
=
aOther
)
;
}
}
;
}
#
endif
