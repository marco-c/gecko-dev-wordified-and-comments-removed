#
ifndef
mozilla_StyleComplexColor_h_
#
define
mozilla_StyleComplexColor_h_
#
include
"
nsColor
.
h
"
#
include
"
mozilla
/
ServoStyleConsts
.
h
"
namespace
mozilla
{
using
StyleComplexColor
=
StyleColor
;
template
<
>
inline
StyleColor
StyleColor
:
:
FromColor
(
nscolor
aColor
)
{
return
StyleColor
:
:
Numeric
(
{
NS_GET_R
(
aColor
)
NS_GET_G
(
aColor
)
NS_GET_B
(
aColor
)
NS_GET_A
(
aColor
)
}
)
;
}
template
<
>
inline
StyleColor
StyleColor
:
:
Black
(
)
{
return
FromColor
(
NS_RGB
(
0
0
0
)
)
;
}
template
<
>
inline
StyleColor
StyleColor
:
:
White
(
)
{
return
FromColor
(
NS_RGB
(
255
255
255
)
)
;
}
template
<
>
inline
StyleColor
StyleColor
:
:
Transparent
(
)
{
return
FromColor
(
NS_RGBA
(
0
0
0
0
)
)
;
}
template
<
>
nscolor
StyleComplexColor
:
:
CalcColor
(
nscolor
aForegroundColor
)
const
;
template
<
>
nscolor
StyleComplexColor
:
:
CalcColor
(
const
ComputedStyle
&
)
const
;
template
<
>
nscolor
StyleComplexColor
:
:
CalcColor
(
const
nsIFrame
*
)
const
;
}
#
endif
