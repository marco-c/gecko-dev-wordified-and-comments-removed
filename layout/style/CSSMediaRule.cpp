#
include
"
mozilla
/
dom
/
CSSMediaRule
.
h
"
#
include
"
mozilla
/
dom
/
CSSMediaRuleBinding
.
h
"
#
include
"
mozilla
/
dom
/
MediaList
.
h
"
namespace
mozilla
{
namespace
dom
{
NS_IMPL_ADDREF_INHERITED
(
CSSMediaRule
css
:
:
ConditionRule
)
NS_IMPL_RELEASE_INHERITED
(
CSSMediaRule
css
:
:
ConditionRule
)
NS_INTERFACE_MAP_BEGIN_CYCLE_COLLECTION
(
CSSMediaRule
)
NS_INTERFACE_MAP_ENTRY
(
nsIDOMCSSGroupingRule
)
NS_INTERFACE_MAP_ENTRY
(
nsIDOMCSSConditionRule
)
NS_INTERFACE_MAP_END_INHERITING
(
css
:
:
ConditionRule
)
NS_IMETHODIMP
CSSMediaRule
:
:
GetCssRules
(
nsIDOMCSSRuleList
*
*
aRuleList
)
{
return
GroupRule
:
:
GetCssRules
(
aRuleList
)
;
}
NS_IMETHODIMP
CSSMediaRule
:
:
InsertRule
(
const
nsAString
&
aRule
uint32_t
aIndex
uint32_t
*
_retval
)
{
return
GroupRule
:
:
InsertRule
(
aRule
aIndex
_retval
)
;
}
NS_IMETHODIMP
CSSMediaRule
:
:
DeleteRule
(
uint32_t
aIndex
)
{
return
GroupRule
:
:
DeleteRule
(
aIndex
)
;
}
void
CSSMediaRule
:
:
SetConditionText
(
const
nsAString
&
aConditionText
ErrorResult
&
aRv
)
{
nsresult
rv
=
static_cast
<
nsIDOMCSSConditionRule
*
>
(
this
)
-
>
SetConditionText
(
aConditionText
)
;
if
(
NS_FAILED
(
rv
)
)
{
aRv
.
Throw
(
rv
)
;
}
}
JSObject
*
CSSMediaRule
:
:
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
CSSMediaRuleBinding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
}
}
