#
ifndef
mozilla_ServoStyleSheet_h
#
define
mozilla_ServoStyleSheet_h
#
include
"
mozilla
/
dom
/
SRIMetadata
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
ServoBindingHelpers
.
h
"
#
include
"
mozilla
/
StyleSheet
.
h
"
#
include
"
mozilla
/
StyleSheetInfo
.
h
"
#
include
"
nsStringFwd
.
h
"
namespace
mozilla
{
class
ServoStyleSheet
:
public
StyleSheet
{
public
:
ServoStyleSheet
(
css
:
:
SheetParsingMode
aParsingMode
CORSMode
aCORSMode
net
:
:
ReferrerPolicy
aReferrerPolicy
const
dom
:
:
SRIMetadata
&
aIntegrity
)
;
NS_DECL_ISUPPORTS
bool
HasRules
(
)
const
;
void
SetOwningDocument
(
nsIDocument
*
aDocument
)
;
ServoStyleSheet
*
GetParentSheet
(
)
const
;
void
AppendStyleSheet
(
ServoStyleSheet
*
aSheet
)
;
MOZ_MUST_USE
nsresult
ParseSheet
(
const
nsAString
&
aInput
nsIURI
*
aSheetURI
nsIURI
*
aBaseURI
nsIPrincipal
*
aSheetPrincipal
uint32_t
aLineNumber
)
;
size_t
SizeOfIncludingThis
(
MallocSizeOf
aMallocSizeOf
)
const
;
#
ifdef
DEBUG
void
List
(
FILE
*
aOut
=
stdout
int32_t
aIndex
=
0
)
const
;
#
endif
RawServoStyleSheet
*
RawSheet
(
)
const
{
return
mSheet
;
}
nsMediaList
*
Media
(
)
final
;
nsIDOMCSSRule
*
GetDOMOwnerRule
(
)
const
final
;
void
WillDirty
(
)
{
}
void
DidDirty
(
)
{
}
protected
:
~
ServoStyleSheet
(
)
;
dom
:
:
CSSRuleList
*
GetCssRulesInternal
(
ErrorResult
&
aRv
)
;
uint32_t
InsertRuleInternal
(
const
nsAString
&
aRule
uint32_t
aIndex
ErrorResult
&
aRv
)
;
void
DeleteRuleInternal
(
uint32_t
aIndex
ErrorResult
&
aRv
)
;
private
:
void
DropSheet
(
)
;
RefPtr
<
RawServoStyleSheet
>
mSheet
;
StyleSheetInfo
mSheetInfo
;
friend
class
StyleSheet
;
}
;
}
#
endif
