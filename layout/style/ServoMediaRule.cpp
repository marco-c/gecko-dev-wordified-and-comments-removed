#
include
"
mozilla
/
ServoMediaRule
.
h
"
#
include
"
mozilla
/
ServoBindings
.
h
"
#
include
"
mozilla
/
ServoMediaList
.
h
"
using
namespace
mozilla
:
:
dom
;
namespace
mozilla
{
ServoMediaRule
:
:
ServoMediaRule
(
RefPtr
<
RawServoMediaRule
>
aRawRule
uint32_t
aLine
uint32_t
aColumn
)
:
CSSMediaRule
(
Servo_MediaRule_GetRules
(
aRawRule
)
.
Consume
(
)
aLine
aColumn
)
mRawRule
(
Move
(
aRawRule
)
)
{
}
ServoMediaRule
:
:
~
ServoMediaRule
(
)
{
}
NS_IMPL_ADDREF_INHERITED
(
ServoMediaRule
CSSMediaRule
)
NS_IMPL_RELEASE_INHERITED
(
ServoMediaRule
CSSMediaRule
)
NS_INTERFACE_MAP_BEGIN_CYCLE_COLLECTION
(
ServoMediaRule
)
NS_INTERFACE_MAP_END_INHERITING
(
CSSMediaRule
)
NS_IMPL_CYCLE_COLLECTION_INHERITED
(
ServoMediaRule
CSSMediaRule
mMediaList
)
already_AddRefed
<
css
:
:
Rule
>
ServoMediaRule
:
:
Clone
(
)
const
{
MOZ_ASSERT_UNREACHABLE
(
"
Shouldn
'
t
be
cloning
ServoMediaRule
"
)
;
return
nullptr
;
}
bool
ServoMediaRule
:
:
UseForPresentation
(
nsPresContext
*
aPresContext
nsMediaQueryResultCacheKey
&
aKey
)
{
MOZ_ASSERT_UNREACHABLE
(
"
Shouldn
'
t
be
calling
UseForPresentation
"
)
;
return
false
;
}
void
ServoMediaRule
:
:
SetStyleSheet
(
StyleSheet
*
aSheet
)
{
if
(
mMediaList
)
{
mMediaList
-
>
SetStyleSheet
(
aSheet
)
;
}
CSSMediaRule
:
:
SetStyleSheet
(
aSheet
)
;
}
#
ifdef
DEBUG
void
ServoMediaRule
:
:
List
(
FILE
*
out
int32_t
aIndent
)
const
{
nsAutoCString
str
;
for
(
int32_t
i
=
0
;
i
<
aIndent
;
i
+
+
)
{
str
.
AppendLiteral
(
"
"
)
;
}
Servo_MediaRule_Debug
(
mRawRule
&
str
)
;
fprintf_stderr
(
out
"
%
s
\
n
"
str
.
get
(
)
)
;
}
#
endif
NS_IMETHODIMP
ServoMediaRule
:
:
GetConditionText
(
nsAString
&
aConditionText
)
{
return
Media
(
)
-
>
GetMediaText
(
aConditionText
)
;
}
NS_IMETHODIMP
ServoMediaRule
:
:
SetConditionText
(
const
nsAString
&
aConditionText
)
{
return
Media
(
)
-
>
SetMediaText
(
aConditionText
)
;
}
void
ServoMediaRule
:
:
GetCssTextImpl
(
nsAString
&
aCssText
)
const
{
Servo_MediaRule_GetCssText
(
mRawRule
&
aCssText
)
;
}
dom
:
:
MediaList
*
ServoMediaRule
:
:
Media
(
)
{
if
(
!
mMediaList
)
{
mMediaList
=
new
ServoMediaList
(
Servo_MediaRule_GetMedia
(
mRawRule
)
.
Consume
(
)
)
;
mMediaList
-
>
SetStyleSheet
(
GetStyleSheet
(
)
)
;
}
return
mMediaList
;
}
size_t
ServoMediaRule
:
:
SizeOfIncludingThis
(
mozilla
:
:
MallocSizeOf
aMallocSizeOf
)
const
{
return
aMallocSizeOf
(
this
)
;
}
}
