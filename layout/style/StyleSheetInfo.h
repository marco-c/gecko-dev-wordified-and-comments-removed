#
ifndef
mozilla_StyleSheetInfo_h
#
define
mozilla_StyleSheetInfo_h
#
include
"
mozilla
/
dom
/
SRIMetadata
.
h
"
#
include
"
mozilla
/
net
/
ReferrerPolicy
.
h
"
#
include
"
mozilla
/
CORSMode
.
h
"
namespace
mozilla
{
class
CSSStyleSheet
;
}
class
nsCSSRuleProcessor
;
class
nsIPrincipal
;
class
nsIURI
;
namespace
mozilla
{
class
StyleSheetInfo
{
public
:
friend
class
mozilla
:
:
CSSStyleSheet
;
friend
class
:
:
nsCSSRuleProcessor
;
typedef
net
:
:
ReferrerPolicy
ReferrerPolicy
;
StyleSheetInfo
(
CORSMode
aCORSMode
ReferrerPolicy
aReferrerPolicy
const
dom
:
:
SRIMetadata
&
aIntegrity
)
;
StyleSheetInfo
(
const
StyleSheetInfo
&
aCopy
)
;
nsIURI
*
GetSheetURI
(
)
const
{
return
mSheetURI
;
}
nsIURI
*
GetOriginalURI
(
)
const
{
return
mOriginalSheetURI
;
}
nsIURI
*
GetBaseURI
(
)
const
{
return
mBaseURI
;
}
void
SetURIs
(
nsIURI
*
aSheetURI
nsIURI
*
aOriginalSheetURI
nsIURI
*
aBaseURI
)
;
nsIPrincipal
*
Principal
(
)
const
{
return
mPrincipal
;
}
void
SetPrincipal
(
nsIPrincipal
*
aPrincipal
)
;
CORSMode
GetCORSMode
(
)
const
{
return
mCORSMode
;
}
net
:
:
ReferrerPolicy
GetReferrerPolicy
(
)
const
{
return
mReferrerPolicy
;
}
void
GetIntegrity
(
dom
:
:
SRIMetadata
&
aResult
)
const
{
aResult
=
mIntegrity
;
}
protected
:
nsCOMPtr
<
nsIURI
>
mSheetURI
;
nsCOMPtr
<
nsIURI
>
mOriginalSheetURI
;
nsCOMPtr
<
nsIURI
>
mBaseURI
;
nsCOMPtr
<
nsIPrincipal
>
mPrincipal
;
CORSMode
mCORSMode
;
ReferrerPolicy
mReferrerPolicy
;
dom
:
:
SRIMetadata
mIntegrity
;
bool
mComplete
;
#
ifdef
DEBUG
bool
mPrincipalSet
;
#
endif
}
;
}
#
endif
