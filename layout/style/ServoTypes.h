#
ifndef
mozilla_ServoTypes_h
#
define
mozilla_ServoTypes_h
#
include
"
mozilla
/
TypedEnumBits
.
h
"
struct
ServoNodeData
;
namespace
mozilla
{
template
<
typename
T
>
struct
ServoUnsafeCell
{
T
value
;
ServoUnsafeCell
(
)
:
value
(
)
{
}
;
}
;
template
<
typename
T
>
struct
ServoCell
{
ServoUnsafeCell
<
T
>
value
;
T
Get
(
)
const
{
return
value
.
value
;
}
void
Set
(
T
arg
)
{
value
.
value
=
arg
;
}
ServoCell
(
)
:
value
(
)
{
}
;
}
;
enum
class
LazyComputeBehavior
{
Allow
Assert
}
;
enum
class
TraversalRootBehavior
{
Normal
UnstyledChildrenOnly
}
;
enum
class
TraversalRestyleBehavior
{
Normal
ForNewlyBoundElement
ForReconstruct
ForThrottledAnimationFlush
ForCSSRuleChanges
}
;
enum
class
StyleRuleInclusion
{
All
DefaultOnly
}
;
enum
class
UpdateAnimationsTasks
:
uint8_t
{
CSSAnimations
=
1
<
<
0
CSSTransitions
=
1
<
<
1
EffectProperties
=
1
<
<
2
CascadeResults
=
1
<
<
3
}
;
MOZ_MAKE_ENUM_CLASS_BITWISE_OPERATORS
(
UpdateAnimationsTasks
)
enum
class
ParsingMode
:
uint8_t
{
Default
=
0
AllowUnitlessLength
=
1
<
<
0
AllowAllNumericValues
=
1
<
<
1
}
;
MOZ_MAKE_ENUM_CLASS_BITWISE_OPERATORS
(
ParsingMode
)
enum
class
InheritTarget
{
Text
FirstLetterContinuation
PlaceholderFrame
}
;
}
#
endif
