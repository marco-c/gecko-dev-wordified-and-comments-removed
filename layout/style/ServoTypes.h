#
ifndef
mozilla_ServoTypes_h
#
define
mozilla_ServoTypes_h
#
include
"
mozilla
/
TypedEnumBits
.
h
"
#
define
STYLE_STRUCT
(
name_
checkdata_cb_
)
struct
nsStyle
#
#
name_
;
#
include
"
nsStyleStructList
.
h
"
#
undef
STYLE_STRUCT
struct
ServoNodeData
;
namespace
mozilla
{
template
<
typename
T
>
struct
ServoUnsafeCell
{
T
value
;
ServoUnsafeCell
(
)
:
value
(
)
{
}
;
}
;
template
<
typename
T
>
struct
ServoCell
{
ServoUnsafeCell
<
T
>
value
;
T
Get
(
)
const
{
return
value
.
value
;
}
void
Set
(
T
arg
)
{
value
.
value
=
arg
;
}
ServoCell
(
)
:
value
(
)
{
}
;
}
;
enum
class
LazyComputeBehavior
{
Allow
Assert
}
;
enum
class
TraversalRootBehavior
{
Normal
UnstyledChildrenOnly
}
;
enum
class
TraversalRestyleBehavior
{
Normal
ForNewlyBoundElement
ForReconstruct
ForThrottledAnimationFlush
ForCSSRuleChanges
}
;
enum
class
StyleRuleInclusion
{
All
DefaultOnly
}
;
enum
class
UpdateAnimationsTasks
:
uint8_t
{
CSSAnimations
=
1
<
<
0
CSSTransitions
=
1
<
<
1
EffectProperties
=
1
<
<
2
CascadeResults
=
1
<
<
3
}
;
MOZ_MAKE_ENUM_CLASS_BITWISE_OPERATORS
(
UpdateAnimationsTasks
)
enum
class
ParsingMode
:
uint8_t
{
Default
=
0
AllowUnitlessLength
=
1
<
<
0
AllowAllNumericValues
=
1
<
<
1
}
;
MOZ_MAKE_ENUM_CLASS_BITWISE_OPERATORS
(
ParsingMode
)
enum
class
InheritTarget
{
Text
FirstLetterContinuation
PlaceholderFrame
}
;
struct
ServoWritingMode
{
uint8_t
mBits
;
}
;
struct
ServoFontComputationData
{
uint32_t
mFour
;
uint32_t
mFour2
;
}
;
struct
ServoCustomPropertiesMap
{
uintptr_t
mPtr
;
}
;
struct
ServoVisitedStyle
{
uintptr_t
mPtr
;
}
;
template
<
typename
T
>
struct
ServoRawOffsetArc
{
T
*
mPtr
;
}
;
/
*
*
*
We
want
C
+
+
to
be
abe
to
read
the
style
struct
fields
of
ComputedValues
*
so
we
define
this
type
on
the
C
+
+
side
and
use
the
bindgenned
version
*
on
the
Rust
side
.
*
*
C
+
+
just
sees
pointers
and
opaque
types
here
so
bindgen
will
attempt
to
generate
a
Copy
*
impl
.
This
will
fail
because
the
bindgenned
version
contains
owned
types
.
Opt
out
.
*
*
<
div
rustbindgen
nocopy
>
<
/
div
>
*
/
struct
ServoComputedValues2
{
#
define
STYLE_STRUCT
(
name_
checkdata_cb_
)
ServoRawOffsetArc
<
nsStyle
#
#
name_
>
name_
;
#
include
"
nsStyleStructList
.
h
"
#
undef
STYLE_STRUCT
ServoCustomPropertiesMap
custom_properties
;
ServoWritingMode
writing_mode
;
ServoFontComputationData
font_computation_data
;
ServoVisitedStyle
visited_style
;
~
ServoComputedValues2
(
)
{
}
}
;
}
#
endif
