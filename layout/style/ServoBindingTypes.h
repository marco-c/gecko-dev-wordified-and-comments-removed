#
ifndef
mozilla_ServoBindingTypes_h
#
define
mozilla_ServoBindingTypes_h
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
ServoTypes
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
mozilla
/
gfx
/
Types
.
h
"
#
include
"
nsCSSPropertyID
.
h
"
#
include
"
nsStyleAutoArray
.
h
"
#
include
"
nsTArray
.
h
"
class
nsCSSPropertyIDSet
;
class
nsCSSValue
;
class
nsINode
;
class
nsPresContext
;
struct
nsFontFaceRuleContainer
;
namespace
mozilla
{
class
ComputedStyle
;
class
ServoElementSnapshot
;
struct
AnimationPropertySegment
;
struct
ComputedTiming
;
struct
Keyframe
;
struct
PropertyStyleAnimationValuePair
;
struct
PropertyValuePair
;
struct
StyleAnimation
;
struct
StyleCssUrlData
;
struct
StyleAnimationValue
;
struct
StyleStylesheetContents
;
struct
URLExtraData
;
using
ComputedKeyframeValues
=
nsTArray
<
PropertyStyleAnimationValuePair
>
;
using
GfxMatrix4x4
=
mozilla
:
:
gfx
:
:
Float
[
16
]
;
namespace
dom
{
class
StyleChildrenIterator
;
class
Document
;
class
Element
;
}
}
#
define
SERVO_ARC_TYPE
(
name_
type_
)
\
extern
"
C
"
{
\
void
Servo_
#
#
name_
#
#
_AddRef
(
const
type_
*
)
;
\
void
Servo_
#
#
name_
#
#
_Release
(
const
type_
*
)
;
\
}
\
namespace
mozilla
{
\
template
<
>
\
struct
RefPtrTraits
<
type_
>
{
\
static
void
AddRef
(
type_
*
aPtr
)
{
Servo_
#
#
name_
#
#
_AddRef
(
aPtr
)
;
}
\
static
void
Release
(
type_
*
aPtr
)
{
Servo_
#
#
name_
#
#
_Release
(
aPtr
)
;
}
\
}
;
\
}
#
define
SERVO_LOCKED_ARC_TYPE
(
name_
)
\
namespace
mozilla
{
\
struct
StyleLocked
#
#
name_
;
\
}
\
SERVO_ARC_TYPE
(
name_
mozilla
:
:
StyleLocked
#
#
name_
)
#
include
"
mozilla
/
ServoLockedArcTypeList
.
h
"
#
define
UNLOCKED_RULE_TYPE
(
name_
)
\
namespace
mozilla
{
\
struct
Style
#
#
name_
#
#
Rule
;
\
}
\
SERVO_ARC_TYPE
(
name_
#
#
Rule
mozilla
:
:
Style
#
#
name_
#
#
Rule
)
UNLOCKED_RULE_TYPE
(
Property
)
UNLOCKED_RULE_TYPE
(
LayerBlock
)
UNLOCKED_RULE_TYPE
(
LayerStatement
)
UNLOCKED_RULE_TYPE
(
Namespace
)
UNLOCKED_RULE_TYPE
(
Container
)
UNLOCKED_RULE_TYPE
(
Media
)
UNLOCKED_RULE_TYPE
(
Supports
)
UNLOCKED_RULE_TYPE
(
Document
)
UNLOCKED_RULE_TYPE
(
FontFeatureValues
)
UNLOCKED_RULE_TYPE
(
FontPaletteValues
)
SERVO_ARC_TYPE
(
AnimationValue
mozilla
:
:
StyleAnimationValue
)
SERVO_ARC_TYPE
(
ComputedStyle
mozilla
:
:
ComputedStyle
)
SERVO_ARC_TYPE
(
CssUrlData
mozilla
:
:
StyleCssUrlData
)
SERVO_ARC_TYPE
(
StyleSheetContents
mozilla
:
:
StyleStylesheetContents
)
#
undef
UNLOCKED_RULE_TYPE
#
undef
SERVO_LOCKED_ARC_TYPE
#
undef
SERVO_ARC_TYPE
#
define
SERVO_BOXED_TYPE
(
name_
type_
)
\
namespace
mozilla
{
\
struct
Style
#
#
type_
;
\
}
\
extern
"
C
"
void
Servo_
#
#
name_
#
#
_Drop
(
mozilla
:
:
Style
#
#
type_
*
)
;
\
namespace
mozilla
{
\
template
<
>
\
class
DefaultDelete
<
Style
#
#
type_
>
{
\
public
:
\
void
operator
(
)
(
Style
#
#
type_
*
aPtr
)
const
{
Servo_
#
#
name_
#
#
_Drop
(
aPtr
)
;
}
\
}
;
\
}
#
include
"
mozilla
/
ServoBoxedTypeList
.
h
"
#
undef
SERVO_BOXED_TYPE
struct
RawServoAnimationValueTable
;
#
endif
