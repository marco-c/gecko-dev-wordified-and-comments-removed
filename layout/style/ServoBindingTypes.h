#
ifndef
mozilla_ServoBindingTypes_h
#
define
mozilla_ServoBindingTypes_h
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
ServoComputedData
.
h
"
#
include
"
mozilla
/
ServoTypes
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
mozilla
/
gfx
/
Types
.
h
"
#
include
"
nsCSSPropertyID
.
h
"
#
include
"
nsStyleAutoArray
.
h
"
#
include
"
nsStyleConsts
.
h
"
#
include
"
nsTArray
.
h
"
#
define
SERVO_ARC_TYPE
(
name_
type_
)
struct
type_
;
#
include
"
mozilla
/
ServoArcTypeList
.
h
"
#
undef
SERVO_ARC_TYPE
class
nsCSSPropertyIDSet
;
class
nsCSSValue
;
class
nsINode
;
class
nsPresContext
;
class
nsXBLBinding
;
struct
nsFontFaceRuleContainer
;
struct
nsTimingFunction
;
namespace
mozilla
{
class
ComputedStyle
;
class
ServoElementSnapshot
;
struct
AnimationPropertySegment
;
struct
ComputedTiming
;
struct
Keyframe
;
struct
PropertyStyleAnimationValuePair
;
struct
PropertyValuePair
;
struct
StyleAnimation
;
struct
URLExtraData
;
using
ComputedKeyframeValues
=
nsTArray
<
PropertyStyleAnimationValuePair
>
;
using
GfxMatrix4x4
=
mozilla
:
:
gfx
:
:
Float
[
16
]
;
namespace
dom
{
class
StyleChildrenIterator
;
class
Document
;
class
Element
;
}
}
#
define
SERVO_ARC_TYPE
(
name_
type_
)
\
struct
MOZ_MUST_USE_TYPE
type_
#
#
Strong
{
\
type_
*
mPtr
;
\
already_AddRefed
<
type_
>
Consume
(
)
;
\
}
;
\
extern
"
C
"
{
\
void
Servo_
#
#
name_
#
#
_AddRef
(
const
type_
*
)
;
\
void
Servo_
#
#
name_
#
#
_Release
(
const
type_
*
)
;
\
}
\
namespace
mozilla
{
\
template
<
>
\
struct
RefPtrTraits
<
type_
>
{
\
static
void
AddRef
(
type_
*
aPtr
)
{
Servo_
#
#
name_
#
#
_AddRef
(
aPtr
)
;
}
\
static
void
Release
(
type_
*
aPtr
)
{
Servo_
#
#
name_
#
#
_Release
(
aPtr
)
;
}
\
}
;
\
}
#
include
"
mozilla
/
ServoArcTypeList
.
h
"
#
undef
SERVO_ARC_TYPE
#
define
SERVO_BOXED_TYPE
(
name_
type_
)
\
struct
type_
;
\
extern
"
C
"
void
Servo_
#
#
name_
#
#
_Drop
(
mozilla
:
:
StyleOwned
<
type_
>
)
;
\
namespace
mozilla
{
\
template
<
>
\
class
DefaultDelete
<
type_
>
{
\
public
:
\
void
operator
(
)
(
type_
*
aPtr
)
const
{
\
Servo_
#
#
name_
#
#
_Drop
(
mozilla
:
:
StyleOwned
<
type_
>
{
aPtr
}
)
;
\
}
\
}
;
\
}
SERVO_BOXED_TYPE
(
StyleSet
RawServoStyleSet
)
SERVO_BOXED_TYPE
(
AuthorStyles
RawServoAuthorStyles
)
SERVO_BOXED_TYPE
(
SelectorList
RawServoSelectorList
)
SERVO_BOXED_TYPE
(
SourceSizeList
RawServoSourceSizeList
)
SERVO_BOXED_TYPE
(
UseCounters
StyleUseCounters
)
#
undef
SERVO_BOXED_TYPE
struct
RawServoAnimationValueTable
;
struct
RawServoAnimationValueMap
;
struct
MOZ_MUST_USE_TYPE
ComputedStyleStrong
{
mozilla
:
:
ComputedStyle
*
mPtr
;
already_AddRefed
<
mozilla
:
:
ComputedStyle
>
Consume
(
)
;
}
;
#
undef
DECL_ARC_REF_TYPE_FOR
#
endif
