#
include
"
mozilla
/
dom
/
CSSUnparsedValue
.
h
"
#
include
"
mozilla
/
AlreadyAddRefed
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
dom
/
BindingDeclarations
.
h
"
#
include
"
mozilla
/
dom
/
CSSUnparsedValueBinding
.
h
"
namespace
mozilla
:
:
dom
{
CSSUnparsedValue
:
:
CSSUnparsedValue
(
nsCOMPtr
<
nsISupports
>
aParent
)
:
CSSStyleValue
(
std
:
:
move
(
aParent
)
)
{
}
JSObject
*
CSSUnparsedValue
:
:
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
CSSUnparsedValue_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
already_AddRefed
<
CSSUnparsedValue
>
CSSUnparsedValue
:
:
Constructor
(
const
GlobalObject
&
aGlobal
const
Sequence
<
OwningUTF8StringOrCSSVariableReferenceValue
>
&
aMembers
)
{
return
MakeAndAddRef
<
CSSUnparsedValue
>
(
aGlobal
.
GetAsSupports
(
)
)
;
}
uint32_t
CSSUnparsedValue
:
:
Length
(
)
const
{
return
0
;
}
void
CSSUnparsedValue
:
:
IndexedGetter
(
uint32_t
aIndex
bool
&
aFound
OwningUTF8StringOrCSSVariableReferenceValue
&
aRetVal
)
{
}
void
CSSUnparsedValue
:
:
IndexedSetter
(
uint32_t
aIndex
const
UTF8StringOrCSSVariableReferenceValue
&
aVal
OwningUTF8StringOrCSSVariableReferenceValue
&
aRetVal
ErrorResult
&
aRv
)
{
aRv
.
Throw
(
NS_ERROR_NOT_IMPLEMENTED
)
;
}
}
