#
include
"
mozilla
/
dom
/
CSSTranslate
.
h
"
#
include
"
mozilla
/
AlreadyAddRefed
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
dom
/
BindingDeclarations
.
h
"
#
include
"
mozilla
/
dom
/
CSSTranslateBinding
.
h
"
namespace
mozilla
:
:
dom
{
CSSTranslate
:
:
CSSTranslate
(
nsCOMPtr
<
nsISupports
>
aParent
)
:
CSSTransformComponent
(
std
:
:
move
(
aParent
)
)
{
}
JSObject
*
CSSTranslate
:
:
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
CSSTranslate_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
already_AddRefed
<
CSSTranslate
>
CSSTranslate
:
:
Constructor
(
const
GlobalObject
&
aGlobal
CSSNumericValue
&
aX
CSSNumericValue
&
aY
const
Optional
<
NonNull
<
CSSNumericValue
>
>
&
aZ
ErrorResult
&
aRv
)
{
return
MakeAndAddRef
<
CSSTranslate
>
(
aGlobal
.
GetAsSupports
(
)
)
;
}
CSSNumericValue
*
CSSTranslate
:
:
GetX
(
ErrorResult
&
aRv
)
const
{
aRv
.
Throw
(
NS_ERROR_NOT_IMPLEMENTED
)
;
return
nullptr
;
}
void
CSSTranslate
:
:
SetX
(
CSSNumericValue
&
aArg
ErrorResult
&
aRv
)
{
aRv
.
Throw
(
NS_ERROR_NOT_IMPLEMENTED
)
;
}
CSSNumericValue
*
CSSTranslate
:
:
GetY
(
ErrorResult
&
aRv
)
const
{
aRv
.
Throw
(
NS_ERROR_NOT_IMPLEMENTED
)
;
return
nullptr
;
}
void
CSSTranslate
:
:
SetY
(
CSSNumericValue
&
aArg
ErrorResult
&
aRv
)
{
aRv
.
Throw
(
NS_ERROR_NOT_IMPLEMENTED
)
;
}
CSSNumericValue
*
CSSTranslate
:
:
GetZ
(
ErrorResult
&
aRv
)
const
{
aRv
.
Throw
(
NS_ERROR_NOT_IMPLEMENTED
)
;
return
nullptr
;
}
void
CSSTranslate
:
:
SetZ
(
CSSNumericValue
&
aArg
ErrorResult
&
aRv
)
{
aRv
.
Throw
(
NS_ERROR_NOT_IMPLEMENTED
)
;
}
}
