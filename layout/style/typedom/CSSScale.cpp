#
include
"
mozilla
/
dom
/
CSSScale
.
h
"
#
include
"
mozilla
/
AlreadyAddRefed
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
dom
/
BindingDeclarations
.
h
"
#
include
"
mozilla
/
dom
/
CSSNumericValueBinding
.
h
"
#
include
"
mozilla
/
dom
/
CSSScaleBinding
.
h
"
namespace
mozilla
:
:
dom
{
CSSScale
:
:
CSSScale
(
nsCOMPtr
<
nsISupports
>
aParent
)
:
CSSTransformComponent
(
std
:
:
move
(
aParent
)
)
{
}
JSObject
*
CSSScale
:
:
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
CSSScale_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
already_AddRefed
<
CSSScale
>
CSSScale
:
:
Constructor
(
const
GlobalObject
&
aGlobal
const
CSSNumberish
&
aX
const
CSSNumberish
&
aY
const
Optional
<
CSSNumberish
>
&
aZ
ErrorResult
&
aRv
)
{
return
MakeAndAddRef
<
CSSScale
>
(
aGlobal
.
GetAsSupports
(
)
)
;
}
void
CSSScale
:
:
GetX
(
OwningCSSNumberish
&
aRetVal
)
const
{
aRetVal
.
SetAsDouble
(
)
=
0
;
}
void
CSSScale
:
:
SetX
(
const
CSSNumberish
&
aArg
ErrorResult
&
aRv
)
{
aRv
.
Throw
(
NS_ERROR_NOT_IMPLEMENTED
)
;
}
void
CSSScale
:
:
GetY
(
OwningCSSNumberish
&
aRetVal
)
const
{
aRetVal
.
SetAsDouble
(
)
=
0
;
}
void
CSSScale
:
:
SetY
(
const
CSSNumberish
&
aArg
ErrorResult
&
aRv
)
{
aRv
.
Throw
(
NS_ERROR_NOT_IMPLEMENTED
)
;
}
void
CSSScale
:
:
GetZ
(
OwningCSSNumberish
&
aRetVal
)
const
{
aRetVal
.
SetAsDouble
(
)
=
0
;
}
void
CSSScale
:
:
SetZ
(
const
CSSNumberish
&
aArg
ErrorResult
&
aRv
)
{
aRv
.
Throw
(
NS_ERROR_NOT_IMPLEMENTED
)
;
}
}
