#
ifndef
LAYOUT_STYLE_TYPEDOM_CSSUNPARSEDVALUE_H_
#
define
LAYOUT_STYLE_TYPEDOM_CSSUNPARSEDVALUE_H_
#
include
<
stdint
.
h
>
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
mozilla
/
dom
/
CSSStyleValue
.
h
"
#
include
"
nsStringFwd
.
h
"
template
<
class
T
>
struct
already_AddRefed
;
template
<
class
T
>
class
nsCOMPtr
;
class
nsISupports
;
namespace
mozilla
{
class
ErrorResult
;
namespace
dom
{
class
GlobalObject
;
template
<
typename
T
>
class
Sequence
;
class
CSSUnparsedValue
final
:
public
CSSStyleValue
{
public
:
explicit
CSSUnparsedValue
(
nsCOMPtr
<
nsISupports
>
aParent
)
;
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
static
already_AddRefed
<
CSSUnparsedValue
>
Constructor
(
const
GlobalObject
&
aGlobal
const
Sequence
<
nsCString
>
&
aMembers
)
;
uint32_t
Length
(
)
const
;
void
IndexedGetter
(
uint32_t
aIndex
bool
&
aFound
nsCString
&
aRetVal
)
;
void
IndexedSetter
(
uint32_t
aIndex
const
nsACString
&
aVal
nsCString
&
aRetVal
ErrorResult
&
aRv
)
;
private
:
virtual
~
CSSUnparsedValue
(
)
=
default
;
}
;
}
}
#
endif
