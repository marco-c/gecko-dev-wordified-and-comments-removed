#
ifndef
LAYOUT_STYLE_TYPEDOM_CSSHWB_H_
#
define
LAYOUT_STYLE_TYPEDOM_CSSHWB_H_
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
mozilla
/
dom
/
CSSColorValue
.
h
"
#
include
"
mozilla
/
dom
/
CSSNumericValueBindingFwd
.
h
"
template
<
class
T
>
struct
already_AddRefed
;
template
<
class
T
>
class
nsCOMPtr
;
class
nsISupports
;
namespace
mozilla
{
class
ErrorResult
;
namespace
dom
{
class
GlobalObject
;
class
CSSHWB
final
:
public
CSSColorValue
{
public
:
explicit
CSSHWB
(
nsCOMPtr
<
nsISupports
>
aParent
)
;
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
static
already_AddRefed
<
CSSHWB
>
Constructor
(
const
GlobalObject
&
aGlobal
CSSNumericValue
&
aH
const
CSSNumberish
&
aW
const
CSSNumberish
&
aB
const
CSSNumberish
&
aAlpha
ErrorResult
&
aRv
)
;
CSSNumericValue
*
GetH
(
ErrorResult
&
aRv
)
const
;
void
SetH
(
CSSNumericValue
&
aArg
ErrorResult
&
aRv
)
;
void
GetW
(
OwningCSSNumberish
&
aRetVal
)
const
;
void
SetW
(
const
CSSNumberish
&
aArg
ErrorResult
&
aRv
)
;
void
GetB
(
OwningCSSNumberish
&
aRetVal
)
const
;
void
SetB
(
const
CSSNumberish
&
aArg
ErrorResult
&
aRv
)
;
void
GetAlpha
(
OwningCSSNumberish
&
aRetVal
)
const
;
void
SetAlpha
(
const
CSSNumberish
&
aArg
ErrorResult
&
aRv
)
;
private
:
virtual
~
CSSHWB
(
)
=
default
;
}
;
}
}
#
endif
