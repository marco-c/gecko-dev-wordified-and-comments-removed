#
include
"
mozilla
/
dom
/
CSSTransformValue
.
h
"
#
include
"
mozilla
/
AlreadyAddRefed
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
dom
/
BindingDeclarations
.
h
"
#
include
"
mozilla
/
dom
/
CSSTransformValueBinding
.
h
"
namespace
mozilla
:
:
dom
{
CSSTransformValue
:
:
CSSTransformValue
(
nsCOMPtr
<
nsISupports
>
aParent
)
:
CSSStyleValue
(
std
:
:
move
(
aParent
)
)
{
}
JSObject
*
CSSTransformValue
:
:
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
CSSTransformValue_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
already_AddRefed
<
CSSTransformValue
>
CSSTransformValue
:
:
Constructor
(
const
GlobalObject
&
aGlobal
const
Sequence
<
OwningNonNull
<
CSSTransformComponent
>
>
&
aTransforms
ErrorResult
&
aRv
)
{
return
MakeAndAddRef
<
CSSTransformValue
>
(
aGlobal
.
GetAsSupports
(
)
)
;
}
uint32_t
CSSTransformValue
:
:
Length
(
)
const
{
return
0
;
}
bool
CSSTransformValue
:
:
Is2D
(
)
const
{
return
true
;
}
already_AddRefed
<
DOMMatrix
>
CSSTransformValue
:
:
ToMatrix
(
ErrorResult
&
aRv
)
{
aRv
.
Throw
(
NS_ERROR_NOT_IMPLEMENTED
)
;
return
nullptr
;
}
CSSTransformComponent
*
CSSTransformValue
:
:
IndexedGetter
(
uint32_t
aIndex
bool
&
aFound
ErrorResult
&
aRv
)
{
aRv
.
Throw
(
NS_ERROR_NOT_IMPLEMENTED
)
;
return
nullptr
;
}
void
CSSTransformValue
:
:
IndexedSetter
(
uint32_t
aIndex
CSSTransformComponent
&
aVal
ErrorResult
&
aRv
)
{
aRv
.
Throw
(
NS_ERROR_NOT_IMPLEMENTED
)
;
}
}
