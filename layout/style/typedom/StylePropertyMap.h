#
ifndef
LAYOUT_STYLE_TYPEDOM_STYLEPROPERTYMAP_H_
#
define
LAYOUT_STYLE_TYPEDOM_STYLEPROPERTYMAP_H_
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
mozilla
/
MemoryReporting
.
h
"
#
include
"
mozilla
/
dom
/
StylePropertyMapReadOnly
.
h
"
#
include
"
nsStringFwd
.
h
"
template
<
class
T
>
class
nsCOMPtr
;
class
nsISupports
;
namespace
mozilla
{
class
ErrorResult
;
namespace
dom
{
class
OwningCSSStyleValueOrUTF8String
;
template
<
typename
T
>
class
Sequence
;
class
StylePropertyMap
final
:
public
StylePropertyMapReadOnly
{
public
:
explicit
StylePropertyMap
(
nsCOMPtr
<
nsISupports
>
aParent
)
;
JSObject
*
WrapObject
(
JSContext
*
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
void
Set
(
const
nsACString
&
aProperty
const
Sequence
<
OwningCSSStyleValueOrUTF8String
>
&
aValues
ErrorResult
&
aRv
)
;
void
Append
(
const
nsACString
&
aProperty
const
Sequence
<
OwningCSSStyleValueOrUTF8String
>
&
aValues
ErrorResult
&
aRv
)
;
void
Delete
(
const
nsACString
&
aProperty
ErrorResult
&
aRv
)
;
void
Clear
(
)
;
size_t
SizeOfIncludingThis
(
MallocSizeOf
aMallocSizeOf
)
const
;
private
:
virtual
~
StylePropertyMap
(
)
=
default
;
}
;
}
}
#
endif
