#
ifndef
mozilla_ImportScanner_h
#
define
mozilla_ImportScanner_h
#
include
"
nsString
.
h
"
#
include
"
nsTArray
.
h
"
namespace
mozilla
{
struct
ImportScanner
final
{
ImportScanner
(
)
=
default
;
void
Start
(
)
;
nsTArray
<
nsString
>
Stop
(
)
;
void
Scan
(
Span
<
const
char16_t
>
aFragment
)
{
if
(
mState
=
=
State
:
:
OutsideOfStyleElement
|
|
mState
=
=
State
:
:
Done
)
{
return
;
}
DoScan
(
aFragment
)
;
}
private
:
enum
class
State
{
OutsideOfStyleElement
Idle
MaybeAtCommentStart
AtComment
MaybeAtCommentEnd
AtRuleName
AtRuleValue
AtRuleValueDelimited
AfterRuleValue
Done
}
;
void
EmitUrl
(
)
;
void
DoScan
(
Span
<
const
char16_t
>
aFragment
)
;
MOZ_MUST_USE
State
Scan
(
char16_t
aChar
)
;
static
constexpr
const
uint32_t
kMaxRuleNameLength
=
7
;
State
mState
=
State
:
:
OutsideOfStyleElement
;
nsAutoStringN
<
kMaxRuleNameLength
>
mRuleName
;
nsAutoStringN
<
128
>
mRuleValue
;
nsTArray
<
nsString
>
mUrlsFound
;
bool
mInImportRule
=
false
;
char16_t
mUrlValueDelimiterClosingChar
=
0
;
}
;
}
#
endif
