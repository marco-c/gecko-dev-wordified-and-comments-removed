#
ifndef
mozilla_dom_CSSNamespaceRule_h
#
define
mozilla_dom_CSSNamespaceRule_h
#
include
"
mozilla
/
css
/
Rule
.
h
"
#
include
"
mozilla
/
dom
/
CSSNamespaceRuleBinding
.
h
"
#
include
"
mozilla
/
ServoBindingTypes
.
h
"
class
nsAtom
;
namespace
mozilla
{
namespace
dom
{
class
CSSNamespaceRule
final
:
public
css
:
:
Rule
{
public
:
CSSNamespaceRule
(
already_AddRefed
<
RawServoNamespaceRule
>
aRule
uint32_t
aLine
uint32_t
aColumn
)
:
css
:
:
Rule
(
aLine
aColumn
)
mRawRule
(
std
:
:
move
(
aRule
)
)
{
}
bool
IsCCLeaf
(
)
const
final
{
return
Rule
:
:
IsCCLeaf
(
)
;
}
#
ifdef
DEBUG
void
List
(
FILE
*
out
=
stdout
int32_t
aIndent
=
0
)
const
final
;
#
endif
nsAtom
*
GetPrefix
(
)
const
;
void
GetURLSpec
(
nsString
&
aURLSpec
)
const
;
void
GetCssText
(
nsAString
&
aCssText
)
const
final
;
uint16_t
Type
(
)
const
final
{
return
CSSRule_Binding
:
:
NAMESPACE_RULE
;
}
void
GetNamespaceURI
(
nsString
&
aNamespaceURI
)
{
GetURLSpec
(
aNamespaceURI
)
;
}
void
GetPrefix
(
DOMString
&
aPrefix
)
{
aPrefix
.
SetKnownLiveAtom
(
GetPrefix
(
)
DOMString
:
:
eTreatNullAsEmpty
)
;
}
size_t
SizeOfIncludingThis
(
MallocSizeOf
aMallocSizeOf
)
const
final
;
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
final
{
return
CSSNamespaceRule_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
private
:
~
CSSNamespaceRule
(
)
;
RefPtr
<
RawServoNamespaceRule
>
mRawRule
;
}
;
}
}
#
endif
