#
ifndef
nsDOMCSSValueList_h___
#
define
nsDOMCSSValueList_h___
#
include
"
CSSValue
.
h
"
#
include
"
nsTArray
.
h
"
class
nsDOMCSSValueList
final
:
public
mozilla
:
:
dom
:
:
CSSValue
{
public
:
nsDOMCSSValueList
(
bool
aCommaDelimited
bool
aReadonly
)
;
void
AppendCSSValue
(
already_AddRefed
<
CSSValue
>
aValue
)
;
void
GetCssText
(
nsString
&
aText
mozilla
:
:
ErrorResult
&
aRv
)
final
;
void
SetCssText
(
const
nsAString
&
aText
mozilla
:
:
ErrorResult
&
aRv
)
final
;
uint16_t
CssValueType
(
)
const
final
;
void
GetCssText
(
nsAString
&
aText
)
;
CSSValue
*
IndexedGetter
(
uint32_t
aIdx
bool
&
aFound
)
const
{
aFound
=
aIdx
<
=
Length
(
)
;
return
Item
(
aIdx
)
;
}
CSSValue
*
Item
(
uint32_t
aIndex
)
const
{
return
mCSSValues
.
SafeElementAt
(
aIndex
)
;
}
uint32_t
Length
(
)
const
{
return
mCSSValues
.
Length
(
)
;
}
protected
:
virtual
~
nsDOMCSSValueList
(
)
;
bool
mCommaDelimited
;
bool
mReadonly
;
InfallibleTArray
<
RefPtr
<
CSSValue
>
>
mCSSValues
;
}
;
#
endif
