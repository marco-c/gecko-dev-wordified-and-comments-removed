#
ifndef
mozilla_ServoStyleContext_h
#
define
mozilla_ServoStyleContext_h
#
include
"
nsStyleContext
.
h
"
namespace
mozilla
{
class
ServoStyleContext
final
:
public
nsStyleContext
{
public
:
ServoStyleContext
(
nsStyleContext
*
aParent
nsPresContext
*
aPresContext
nsIAtom
*
aPseudoTag
CSSPseudoElementType
aPseudoType
ServoComputedValuesForgotten
aComputedValues
)
;
nsPresContext
*
PresContext
(
)
const
{
return
mPresContext
;
}
const
ServoComputedValues
*
ComputedValues
(
)
const
{
return
&
mSource
;
}
void
AddRef
(
)
{
Servo_StyleContext_AddRef
(
this
)
;
}
void
Release
(
)
{
Servo_StyleContext_Release
(
this
)
;
}
void
ResolveSameStructsAs
(
nsPresContext
*
aPresContext
const
ServoStyleContext
*
aOther
)
{
uint64_t
ourBits
=
mBits
&
NS_STYLE_INHERIT_MASK
;
uint64_t
otherBits
=
aOther
-
>
mBits
&
NS_STYLE_INHERIT_MASK
;
uint64_t
newBits
=
otherBits
&
~
ourBits
&
NS_STYLE_INHERIT_MASK
;
#
define
STYLE_STRUCT
(
name_
checkdata_cb
)
\
if
(
nsStyle
#
#
name_
:
:
kHasFinishStyle
&
&
newBits
&
NS_STYLE_INHERIT_BIT
(
name_
)
)
{
\
const
nsStyle
#
#
name_
*
data
=
Servo_GetStyle
#
#
name_
(
ComputedValues
(
)
)
;
\
const_cast
<
nsStyle
#
#
name_
*
>
(
data
)
-
>
FinishStyle
(
aPresContext
)
;
\
}
#
include
"
nsStyleStructList
.
h
"
#
undef
STYLE_STRUCT
mBits
|
=
newBits
;
}
private
:
nsPresContext
*
mPresContext
;
ServoComputedValues
mSource
;
}
;
}
#
endif
