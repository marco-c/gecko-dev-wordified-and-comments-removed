#
ifndef
mozilla_ServoDeclarationBlock_h
#
define
mozilla_ServoDeclarationBlock_h
#
include
"
mozilla
/
ServoBindings
.
h
"
#
include
"
mozilla
/
DeclarationBlock
.
h
"
namespace
mozilla
{
class
ServoDeclarationBlock
final
:
public
DeclarationBlock
{
public
:
ServoDeclarationBlock
(
)
:
ServoDeclarationBlock
(
Servo_DeclarationBlock_CreateEmpty
(
)
.
Consume
(
)
)
{
}
NS_INLINE_DECL_REFCOUNTING
(
ServoDeclarationBlock
)
static
already_AddRefed
<
ServoDeclarationBlock
>
FromStyleAttribute
(
const
nsAString
&
aString
)
;
RawServoDeclarationBlock
*
const
*
RefRaw
(
)
const
{
static_assert
(
sizeof
(
RefPtr
<
RawServoDeclarationBlock
>
)
=
=
sizeof
(
RawServoDeclarationBlock
*
)
"
RefPtr
should
just
be
a
pointer
"
)
;
return
reinterpret_cast
<
RawServoDeclarationBlock
*
const
*
>
(
&
mRaw
)
;
}
protected
:
explicit
ServoDeclarationBlock
(
already_AddRefed
<
RawServoDeclarationBlock
>
aRaw
)
:
DeclarationBlock
(
StyleBackendType
:
:
Servo
)
mRaw
(
aRaw
)
{
}
private
:
~
ServoDeclarationBlock
(
)
{
}
RefPtr
<
RawServoDeclarationBlock
>
mRaw
;
}
;
}
#
endif
