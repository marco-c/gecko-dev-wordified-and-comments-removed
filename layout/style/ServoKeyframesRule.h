#
ifndef
mozilla_ServoKeyframesRule_h
#
define
mozilla_ServoKeyframesRule_h
#
include
"
mozilla
/
dom
/
CSSKeyframesRule
.
h
"
#
include
"
mozilla
/
ServoBindingTypes
.
h
"
namespace
mozilla
{
class
ServoKeyframeList
;
class
ServoKeyframesRule
final
:
public
dom
:
:
CSSKeyframesRule
{
public
:
ServoKeyframesRule
(
RefPtr
<
RawServoKeyframesRule
>
aRawRule
uint32_t
aLine
uint32_t
aColumn
)
;
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED
(
ServoKeyframesRule
dom
:
:
CSSKeyframesRule
)
bool
IsCCLeaf
(
)
const
final
;
already_AddRefed
<
css
:
:
Rule
>
Clone
(
)
const
final
;
#
ifdef
DEBUG
void
List
(
FILE
*
out
=
stdout
int32_t
aIndent
=
0
)
const
final
;
#
endif
void
SetStyleSheet
(
StyleSheet
*
aSheet
)
final
;
NS_IMETHOD
GetName
(
nsAString
&
aName
)
final
;
NS_IMETHOD
SetName
(
const
nsAString
&
aName
)
final
;
NS_IMETHOD
AppendRule
(
const
nsAString
&
aRule
)
final
;
NS_IMETHOD
DeleteRule
(
const
nsAString
&
aKey
)
final
;
using
nsIDOMCSSKeyframesRule
:
:
FindRule
;
void
GetCssTextImpl
(
nsAString
&
aCssText
)
const
final
;
dom
:
:
CSSRuleList
*
CssRules
(
)
final
;
dom
:
:
CSSKeyframeRule
*
FindRule
(
const
nsAString
&
aKey
)
final
;
size_t
SizeOfIncludingThis
(
mozilla
:
:
MallocSizeOf
aMallocSizeOf
)
const
final
;
private
:
uint32_t
FindRuleIndexForKey
(
const
nsAString
&
aKey
)
;
template
<
typename
Func
>
void
UpdateRule
(
Func
aCallback
)
;
virtual
~
ServoKeyframesRule
(
)
;
RefPtr
<
RawServoKeyframesRule
>
mRawRule
;
RefPtr
<
ServoKeyframeList
>
mKeyframeList
;
}
;
}
#
endif
