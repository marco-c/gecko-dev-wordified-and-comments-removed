#
ifndef
mozilla_ServoSpecifiedValues_h
#
define
mozilla_ServoSpecifiedValues_h
#
include
"
mozilla
/
GenericSpecifiedValues
.
h
"
#
include
"
mozilla
/
ServoBindings
.
h
"
namespace
mozilla
{
class
ServoSpecifiedValues
final
:
public
GenericSpecifiedValues
{
public
:
ServoSpecifiedValues
(
nsPresContext
*
aContext
RawServoDeclarationBlock
*
aDecl
)
;
bool
PropertyIsSet
(
nsCSSPropertyID
aId
)
{
return
false
;
}
void
SetIdentStringValue
(
nsCSSPropertyID
aId
const
nsString
&
aValue
)
{
}
void
SetIdentStringValueIfUnset
(
nsCSSPropertyID
aId
const
nsString
&
aValue
)
{
}
void
SetKeywordValue
(
nsCSSPropertyID
aId
int32_t
aValue
)
{
}
void
SetKeywordValueIfUnset
(
nsCSSPropertyID
aId
int32_t
aValue
)
{
}
void
SetIntValue
(
nsCSSPropertyID
aId
int32_t
aValue
)
{
}
void
SetPixelValue
(
nsCSSPropertyID
aId
float
aValue
)
{
}
void
SetPixelValueIfUnset
(
nsCSSPropertyID
aId
float
aValue
)
{
}
void
SetPercentValue
(
nsCSSPropertyID
aId
float
aValue
)
{
}
void
SetAutoValue
(
nsCSSPropertyID
aId
)
{
}
void
SetAutoValueIfUnset
(
nsCSSPropertyID
aId
)
{
}
void
SetPercentValueIfUnset
(
nsCSSPropertyID
aId
float
aValue
)
{
}
void
SetCurrentColor
(
nsCSSPropertyID
aId
)
{
}
void
SetCurrentColorIfUnset
(
nsCSSPropertyID
aId
)
{
}
void
SetColorValue
(
nsCSSPropertyID
aId
nscolor
aValue
)
{
}
void
SetColorValueIfUnset
(
nsCSSPropertyID
aId
nscolor
aValue
)
{
}
void
SetFontFamily
(
const
nsString
&
aValue
)
{
}
void
SetTextDecorationColorOverride
(
)
{
}
private
:
RefPtr
<
RawServoDeclarationBlock
>
mDecl
;
}
;
}
#
endif
