#
include
"
LayerAnimationInfo
.
h
"
#
include
"
nsCSSProps
.
h
"
#
include
"
nsCSSPropertyIDSet
.
h
"
namespace
mozilla
{
const
LayerAnimationInfo
:
:
Record
LayerAnimationInfo
:
:
sRecords
[
]
=
{
{
eCSSProperty_transform
DisplayItemType
:
:
TYPE_TRANSFORM
nsChangeHint_UpdateTransformLayer
}
{
eCSSProperty_opacity
DisplayItemType
:
:
TYPE_OPACITY
nsChangeHint_UpdateOpacityLayer
}
}
;
#
ifdef
DEBUG
void
LayerAnimationInfo
:
:
Initialize
(
)
{
for
(
const
Record
&
record
:
sRecords
)
{
MOZ_ASSERT
(
nsCSSProps
:
:
PropHasFlags
(
record
.
mProperty
CSSPropFlags
:
:
CanAnimateOnCompositor
)
"
CSS
property
with
entry
in
LayerAnimation
:
:
sRecords
does
not
"
"
have
the
CSSPropFlags
:
:
CanAnimateOnCompositor
flag
"
)
;
}
nsCSSPropertyIDSet
properties
;
for
(
nsCSSPropertyID
prop
=
nsCSSPropertyID
(
0
)
;
prop
<
eCSSProperty_COUNT
;
prop
=
nsCSSPropertyID
(
prop
+
1
)
)
{
if
(
nsCSSProps
:
:
PropHasFlags
(
prop
CSSPropFlags
:
:
CanAnimateOnCompositor
)
)
{
bool
found
=
false
;
for
(
const
Record
&
record
:
sRecords
)
{
if
(
record
.
mProperty
=
=
prop
)
{
found
=
true
;
properties
.
AddProperty
(
record
.
mProperty
)
;
break
;
}
}
MOZ_ASSERT
(
found
"
CSS
property
with
the
CSSPropFlags
:
:
CanAnimateOnCompositor
"
"
flag
does
not
have
an
entry
in
LayerAnimationInfo
:
:
sRecords
"
)
;
}
}
MOZ_ASSERT
(
properties
.
Equals
(
nsCSSPropertyIDSet
:
:
CompositorAnimatables
(
)
)
)
;
}
#
endif
}
