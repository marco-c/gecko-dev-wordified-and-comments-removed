#
ifndef
nsICSSDeclaration_h__
#
define
nsICSSDeclaration_h__
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsCSSPropertyID
.
h
"
#
include
"
mozilla
/
dom
/
CSSValue
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
#
include
"
nsWrapperCache
.
h
"
#
include
"
nsStringFwd
.
h
"
#
include
"
nsCOMPtr
.
h
"
class
nsINode
;
class
nsIPrincipal
;
namespace
mozilla
{
class
ErrorResult
;
namespace
css
{
class
Rule
;
}
namespace
dom
{
class
DocGroup
;
}
}
#
define
NS_ICSSDECLARATION_IID
\
{
0xdbeabbfa
0x6cb3
0x4f5c
{
0xae
0xc2
0xdd
0x55
0x8d
0x9d
0x68
0x1f
}
}
class
nsICSSDeclaration
:
public
nsISupports
public
nsWrapperCache
{
public
:
NS_INLINE_DECL_STATIC_IID
(
NS_ICSSDECLARATION_IID
)
virtual
nsINode
*
GetAssociatedNode
(
)
const
=
0
;
virtual
nsISupports
*
GetParentObject
(
)
const
=
0
;
mozilla
:
:
dom
:
:
DocGroup
*
GetDocGroup
(
)
;
virtual
void
GetPropertyValue
(
const
nsACString
&
aPropName
nsACString
&
aValue
)
=
0
;
virtual
void
RemoveProperty
(
const
nsACString
&
aPropertyName
nsACString
&
aValue
mozilla
:
:
ErrorResult
&
aRv
)
=
0
;
virtual
void
SetProperty
(
const
nsACString
&
aPropertyName
const
nsACString
&
aValue
const
nsACString
&
aPriority
nsIPrincipal
*
aSubjectPrincipal
mozilla
:
:
ErrorResult
&
aRv
)
=
0
;
void
SetProperty
(
const
nsACString
&
aPropertyName
const
nsACString
&
aValue
const
nsACString
&
aPriority
mozilla
:
:
ErrorResult
&
aRv
)
{
SetProperty
(
aPropertyName
aValue
aPriority
nullptr
aRv
)
;
}
void
Item
(
uint32_t
aIndex
nsACString
&
aReturn
)
{
bool
found
;
IndexedGetter
(
aIndex
found
aReturn
)
;
if
(
!
found
)
{
aReturn
.
Truncate
(
)
;
}
}
virtual
void
GetCSSImageURLs
(
const
nsACString
&
aPropertyName
nsTArray
<
nsCString
>
&
aImageURLs
mozilla
:
:
ErrorResult
&
aRv
)
{
aRv
.
Throw
(
NS_ERROR_NOT_IMPLEMENTED
)
;
}
virtual
float
UsedFontSize
(
)
{
return
-
1
.
0
;
}
virtual
void
SetCssText
(
const
nsACString
&
aString
nsIPrincipal
*
aSubjectPrincipal
mozilla
:
:
ErrorResult
&
rv
)
=
0
;
virtual
void
GetCssText
(
nsACString
&
aString
)
=
0
;
virtual
uint32_t
Length
(
)
=
0
;
virtual
void
IndexedGetter
(
uint32_t
aIndex
bool
&
aFound
nsACString
&
aPropName
)
=
0
;
virtual
void
GetPropertyPriority
(
const
nsACString
&
aPropName
nsACString
&
aPriority
)
=
0
;
virtual
mozilla
:
:
css
:
:
Rule
*
GetParentRule
(
)
=
0
;
protected
:
bool
IsReadOnly
(
)
;
}
;
#
define
NS_DECL_NSIDOMCSSSTYLEDECLARATION_HELPER
\
void
GetCssText
(
nsACString
&
aCssText
)
override
;
\
void
SetCssText
(
const
nsACString
&
aCssText
nsIPrincipal
*
aSubjectPrincipal
\
mozilla
:
:
ErrorResult
&
aRv
)
override
;
\
void
GetPropertyValue
(
const
nsACString
&
aPropertyName
nsACString
&
aValue
)
\
override
;
\
void
RemoveProperty
(
const
nsACString
&
aPropertyName
nsACString
&
aValue
\
mozilla
:
:
ErrorResult
&
aRv
)
override
;
\
void
GetPropertyPriority
(
const
nsACString
&
aPropertyName
\
nsACString
&
aPriority
)
override
;
\
void
SetProperty
(
const
nsACString
&
aPropertyName
const
nsACString
&
aValue
\
const
nsACString
&
aPriority
\
nsIPrincipal
*
aSubjectPrincipal
mozilla
:
:
ErrorResult
&
aRv
)
\
override
;
\
uint32_t
Length
(
)
override
;
\
mozilla
:
:
css
:
:
Rule
*
GetParentRule
(
)
override
;
#
endif
