#
ifndef
mozilla_ServoStyleRule_h
#
define
mozilla_ServoStyleRule_h
#
include
"
mozilla
/
BindingStyleRule
.
h
"
#
include
"
mozilla
/
ServoBindingTypes
.
h
"
#
include
"
mozilla
/
WeakPtr
.
h
"
#
include
"
nsDOMCSSDeclaration
.
h
"
namespace
mozilla
{
namespace
dom
{
class
DocGroup
;
}
class
ServoDeclarationBlock
;
class
ServoStyleRule
;
class
ServoStyleRuleDeclaration
final
:
public
nsDOMCSSDeclaration
{
public
:
NS_DECL_ISUPPORTS_INHERITED
css
:
:
Rule
*
GetParentRule
(
)
final
;
nsINode
*
GetParentObject
(
)
final
;
mozilla
:
:
dom
:
:
DocGroup
*
GetDocGroup
(
)
const
final
;
protected
:
DeclarationBlock
*
GetCSSDeclaration
(
Operation
aOperation
)
final
;
nsresult
SetCSSDeclaration
(
DeclarationBlock
*
aDecl
)
final
;
nsIDocument
*
DocToUpdate
(
)
final
;
void
GetCSSParsingEnvironment
(
CSSParsingEnvironment
&
aCSSParseEnv
nsIPrincipal
*
aSubjectPrincipal
)
final
;
ServoCSSParsingEnvironment
GetServoCSSParsingEnvironment
(
nsIPrincipal
*
aSubjectPrincipal
)
const
final
;
private
:
friend
class
ServoStyleRule
;
explicit
ServoStyleRuleDeclaration
(
already_AddRefed
<
RawServoDeclarationBlock
>
aDecls
)
;
~
ServoStyleRuleDeclaration
(
)
;
inline
ServoStyleRule
*
Rule
(
)
;
inline
const
ServoStyleRule
*
Rule
(
)
const
;
RefPtr
<
ServoDeclarationBlock
>
mDecls
;
}
;
class
ServoStyleRule
final
:
public
BindingStyleRule
public
SupportsWeakPtr
<
ServoStyleRule
>
{
public
:
ServoStyleRule
(
already_AddRefed
<
RawServoStyleRule
>
aRawRule
uint32_t
aLine
uint32_t
aColumn
)
;
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS_INHERITED
(
ServoStyleRule
css
:
:
Rule
)
bool
IsCCLeaf
(
)
const
final
MOZ_MUST_OVERRIDE
;
MOZ_DECLARE_WEAKREFERENCE_TYPENAME
(
ServoStyleRule
)
uint32_t
GetSelectorCount
(
)
override
;
nsresult
GetSelectorText
(
uint32_t
aSelectorIndex
nsAString
&
aText
)
override
;
nsresult
GetSpecificity
(
uint32_t
aSelectorIndex
uint64_t
*
aSpecificity
)
override
;
nsresult
SelectorMatchesElement
(
dom
:
:
Element
*
aElement
uint32_t
aSelectorIndex
const
nsAString
&
aPseudo
bool
*
aMatches
)
override
;
NotNull
<
DeclarationBlock
*
>
GetDeclarationBlock
(
)
const
override
;
uint16_t
Type
(
)
const
final
;
void
GetCssTextImpl
(
nsAString
&
aCssText
)
const
final
;
void
GetSelectorText
(
nsAString
&
aSelectorText
)
final
;
void
SetSelectorText
(
const
nsAString
&
aSelectorText
)
final
;
nsICSSDeclaration
*
Style
(
)
final
;
RawServoStyleRule
*
Raw
(
)
const
{
return
mRawRule
;
}
int32_t
GetType
(
)
const
final
{
return
css
:
:
Rule
:
:
STYLE_RULE
;
}
already_AddRefed
<
Rule
>
Clone
(
)
const
final
;
size_t
SizeOfIncludingThis
(
MallocSizeOf
aMallocSizeOf
)
const
final
;
#
ifdef
DEBUG
void
List
(
FILE
*
out
=
stdout
int32_t
aIndent
=
0
)
const
final
;
#
endif
private
:
~
ServoStyleRule
(
)
{
}
friend
class
ServoStyleRuleDeclaration
;
RefPtr
<
RawServoStyleRule
>
mRawRule
;
ServoStyleRuleDeclaration
mDecls
;
}
;
ServoStyleRule
*
ServoStyleRuleDeclaration
:
:
Rule
(
)
{
return
reinterpret_cast
<
ServoStyleRule
*
>
(
reinterpret_cast
<
uint8_t
*
>
(
this
)
-
offsetof
(
ServoStyleRule
mDecls
)
)
;
}
const
ServoStyleRule
*
ServoStyleRuleDeclaration
:
:
Rule
(
)
const
{
return
reinterpret_cast
<
const
ServoStyleRule
*
>
(
reinterpret_cast
<
const
uint8_t
*
>
(
this
)
-
offsetof
(
ServoStyleRule
mDecls
)
)
;
}
}
#
endif
