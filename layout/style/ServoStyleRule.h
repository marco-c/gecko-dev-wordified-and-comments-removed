#
ifndef
mozilla_ServoStyleRule_h
#
define
mozilla_ServoStyleRule_h
#
include
"
mozilla
/
css
/
Rule
.
h
"
#
include
"
mozilla
/
ServoBindingTypes
.
h
"
#
include
"
nsIDOMCSSStyleRule
.
h
"
#
include
"
nsDOMCSSDeclaration
.
h
"
namespace
mozilla
{
class
ServoDeclarationBlock
;
class
ServoStyleRule
;
class
ServoStyleRuleDeclaration
final
:
public
nsDOMCSSDeclaration
{
public
:
NS_DECL_ISUPPORTS_INHERITED
NS_IMETHOD
GetParentRule
(
nsIDOMCSSRule
*
*
aParent
)
final
;
nsINode
*
GetParentObject
(
)
final
;
protected
:
DeclarationBlock
*
GetCSSDeclaration
(
Operation
aOperation
)
final
;
nsresult
SetCSSDeclaration
(
DeclarationBlock
*
aDecl
)
final
;
nsIDocument
*
DocToUpdate
(
)
final
;
void
GetCSSParsingEnvironment
(
CSSParsingEnvironment
&
aCSSParseEnv
)
final
;
private
:
friend
class
ServoStyleRule
;
explicit
ServoStyleRuleDeclaration
(
already_AddRefed
<
RawServoDeclarationBlock
>
aDecls
)
;
~
ServoStyleRuleDeclaration
(
)
;
inline
ServoStyleRule
*
Rule
(
)
;
RefPtr
<
ServoDeclarationBlock
>
mDecls
;
}
;
class
ServoStyleRule
final
:
public
css
:
:
Rule
public
nsIDOMCSSStyleRule
{
public
:
explicit
ServoStyleRule
(
already_AddRefed
<
RawServoStyleRule
>
aRawRule
)
;
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS_INHERITED
(
ServoStyleRule
css
:
:
Rule
)
virtual
bool
IsCCLeaf
(
)
const
override
MOZ_MUST_OVERRIDE
;
NS_DECL_NSIDOMCSSRULE
NS_DECL_NSIDOMCSSSTYLERULE
RawServoStyleRule
*
Raw
(
)
const
{
return
mRawRule
;
}
int32_t
GetType
(
)
const
final
{
return
css
:
:
Rule
:
:
STYLE_RULE
;
}
already_AddRefed
<
Rule
>
Clone
(
)
const
final
;
nsIDOMCSSRule
*
GetDOMRule
(
)
final
{
return
this
;
}
nsIDOMCSSRule
*
GetExistingDOMRule
(
)
final
{
return
this
;
}
size_t
SizeOfIncludingThis
(
MallocSizeOf
aMallocSizeOf
)
const
final
;
#
ifdef
DEBUG
void
List
(
FILE
*
out
=
stdout
int32_t
aIndent
=
0
)
const
final
;
#
endif
private
:
~
ServoStyleRule
(
)
{
}
friend
class
ServoStyleRuleDeclaration
;
RefPtr
<
RawServoStyleRule
>
mRawRule
;
ServoStyleRuleDeclaration
mDecls
;
}
;
ServoStyleRule
*
ServoStyleRuleDeclaration
:
:
Rule
(
)
{
return
reinterpret_cast
<
ServoStyleRule
*
>
(
reinterpret_cast
<
uint8_t
*
>
(
this
)
-
offsetof
(
ServoStyleRule
mDecls
)
)
;
}
}
#
endif
