#
ifndef
nsStyleConsts_h___
#
define
nsStyleConsts_h___
#
include
<
inttypes
.
h
>
#
include
"
X11UndefineNone
.
h
"
#
include
"
gfxFontConstants
.
h
"
#
include
"
mozilla
/
ServoStyleConsts
.
h
"
namespace
mozilla
{
static
constexpr
uint16_t
STYLE_DISPLAY_LIST_ITEM_BIT
=
0x8000
;
static
constexpr
uint8_t
STYLE_DISPLAY_OUTSIDE_BITS
=
7
;
static
constexpr
uint8_t
STYLE_DISPLAY_INSIDE_BITS
=
8
;
uint16_t
constexpr
StyleDisplayFrom
(
StyleDisplayOutside
aOuter
StyleDisplayInside
aInner
)
{
return
uint16_t
(
uint16_t
(
aOuter
)
<
<
STYLE_DISPLAY_INSIDE_BITS
)
|
uint16_t
(
aInner
)
;
}
enum
class
StyleDisplay
:
uint16_t
{
None
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
None
StyleDisplayInside
:
:
None
)
Contents
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
None
StyleDisplayInside
:
:
Contents
)
Inline
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
Inline
StyleDisplayInside
:
:
Flow
)
Block
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
Block
StyleDisplayInside
:
:
Flow
)
FlowRoot
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
Block
StyleDisplayInside
:
:
FlowRoot
)
Flex
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
Block
StyleDisplayInside
:
:
Flex
)
Grid
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
Block
StyleDisplayInside
:
:
Grid
)
Table
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
Block
StyleDisplayInside
:
:
Table
)
InlineTable
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
Inline
StyleDisplayInside
:
:
Table
)
TableCaption
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
TableCaption
StyleDisplayInside
:
:
Flow
)
Ruby
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
Inline
StyleDisplayInside
:
:
Ruby
)
WebkitBox
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
Block
StyleDisplayInside
:
:
WebkitBox
)
WebkitInlineBox
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
Inline
StyleDisplayInside
:
:
WebkitBox
)
ListItem
=
Block
|
STYLE_DISPLAY_LIST_ITEM_BIT
TableRowGroup
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
InternalTable
StyleDisplayInside
:
:
TableRowGroup
)
TableHeaderGroup
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
InternalTable
StyleDisplayInside
:
:
TableHeaderGroup
)
TableFooterGroup
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
InternalTable
StyleDisplayInside
:
:
TableFooterGroup
)
TableColumn
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
InternalTable
StyleDisplayInside
:
:
TableColumn
)
TableColumnGroup
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
InternalTable
StyleDisplayInside
:
:
TableColumnGroup
)
TableRow
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
InternalTable
StyleDisplayInside
:
:
TableRow
)
TableCell
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
InternalTable
StyleDisplayInside
:
:
TableCell
)
RubyBase
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
InternalRuby
StyleDisplayInside
:
:
RubyBase
)
RubyBaseContainer
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
InternalRuby
StyleDisplayInside
:
:
RubyBaseContainer
)
RubyText
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
InternalRuby
StyleDisplayInside
:
:
RubyText
)
RubyTextContainer
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
InternalRuby
StyleDisplayInside
:
:
RubyTextContainer
)
MozBox
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
Block
StyleDisplayInside
:
:
MozBox
)
MozInlineBox
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
Inline
StyleDisplayInside
:
:
MozBox
)
MozGrid
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
XUL
StyleDisplayInside
:
:
MozGrid
)
MozGridGroup
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
XUL
StyleDisplayInside
:
:
MozGridGroup
)
MozGridLine
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
XUL
StyleDisplayInside
:
:
MozGridLine
)
MozDeck
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
XUL
StyleDisplayInside
:
:
MozDeck
)
MozGroupbox
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
XUL
StyleDisplayInside
:
:
MozGroupbox
)
MozPopup
=
StyleDisplayFrom
(
StyleDisplayOutside
:
:
XUL
StyleDisplayInside
:
:
MozPopup
)
}
;
bool
operator
<
(
const
StyleDisplay
&
const
StyleDisplay
&
)
=
delete
;
bool
operator
<
=
(
const
StyleDisplay
&
const
StyleDisplay
&
)
=
delete
;
bool
operator
>
(
const
StyleDisplay
&
const
StyleDisplay
&
)
=
delete
;
bool
operator
>
=
(
const
StyleDisplay
&
const
StyleDisplay
&
)
=
delete
;
enum
class
StyleBasicShapeType
:
uint8_t
{
Polygon
Circle
Ellipse
Inset
}
;
enum
class
StyleBoxAlign
:
uint8_t
{
Stretch
Start
Center
Baseline
End
}
;
enum
class
StyleBoxDecorationBreak
:
uint8_t
{
Slice
Clone
}
;
enum
class
StyleBoxDirection
:
uint8_t
{
Normal
Reverse
}
;
enum
class
StyleBoxOrient
:
uint8_t
{
Horizontal
Vertical
}
;
enum
class
StyleBoxPack
:
uint8_t
{
Start
Center
End
Justify
}
;
enum
class
StyleBoxSizing
:
uint8_t
{
Content
Border
}
;
enum
class
StyleBoxShadowType
:
uint8_t
{
Inset
}
;
enum
class
StyleClear
:
uint8_t
{
None
=
0
Left
Right
Both
Line
=
8
Max
=
13
}
;
enum
class
StyleColumnFill
:
uint8_t
{
Balance
Auto
}
;
enum
class
StyleColumnSpan
:
uint8_t
{
None
All
}
;
enum
class
StyleGeometryBox
:
uint8_t
{
ContentBox
PaddingBox
BorderBox
MarginBox
FillBox
StrokeBox
ViewBox
NoClip
Text
NoBox
MozAlmostPadding
=
127
}
;
enum
class
StyleFloatEdge
:
uint8_t
{
ContentBox
MarginBox
}
;
enum
class
StyleHyphens
:
uint8_t
{
None
Manual
Auto
}
;
enum
class
StyleImageOrientation
:
uint8_t
{
None
FromImage
}
;
enum
class
StyleScrollbarWidth
:
uint8_t
{
Auto
Thin
None
}
;
enum
class
StyleShapeSourceType
:
uint8_t
{
None
Image
Shape
Box
Path
}
;
enum
class
StyleTextJustify
:
uint8_t
{
None
Auto
InterWord
InterCharacter
}
;
enum
class
StyleUserFocus
:
uint8_t
{
None
Ignore
Normal
SelectAll
SelectBefore
SelectAfter
SelectSame
SelectMenu
}
;
enum
class
StyleUserInput
:
uint8_t
{
None
Auto
}
;
enum
class
StyleUserModify
:
uint8_t
{
ReadOnly
ReadWrite
WriteOnly
}
;
enum
class
StyleWindowDragging
:
uint8_t
{
Default
Drag
NoDrag
}
;
enum
class
StyleOrient
:
uint8_t
{
Inline
Block
Horizontal
Vertical
}
;
namespace
dom
{
enum
class
PlaybackDirection
:
uint8_t
;
enum
class
FillMode
:
uint8_t
;
}
enum
class
StyleAnimationPlayState
:
uint8_t
{
Running
Paused
}
;
enum
class
StyleImageLayerAttachment
:
uint8_t
{
Scroll
Fixed
Local
}
;
enum
class
StyleImageLayerRepeat
:
uint8_t
{
NoRepeat
=
0x00
RepeatX
RepeatY
Repeat
Space
Round
}
;
enum
class
StyleMaskMode
:
uint8_t
{
Alpha
=
0
Luminance
MatchSource
}
;
enum
class
StyleBorderCollapse
:
uint8_t
{
Collapse
Separate
}
;
enum
class
StyleBorderImageRepeat
:
uint8_t
{
Stretch
Repeat
Round
Space
}
;
enum
class
StyleDirection
:
uint8_t
{
Ltr
Rtl
}
;
#
define
NS_STYLE_WRITING_MODE_HORIZONTAL_TB
0
#
define
NS_STYLE_WRITING_MODE_VERTICAL_RL
1
#
define
NS_STYLE_WRITING_MODE_VERTICAL_LR
3
#
define
NS_STYLE_WRITING_MODE_SIDEWAYS_MASK
4
#
define
NS_STYLE_WRITING_MODE_SIDEWAYS_RL
\
(
NS_STYLE_WRITING_MODE_VERTICAL_RL
|
NS_STYLE_WRITING_MODE_SIDEWAYS_MASK
)
#
define
NS_STYLE_WRITING_MODE_SIDEWAYS_LR
\
(
NS_STYLE_WRITING_MODE_VERTICAL_LR
|
NS_STYLE_WRITING_MODE_SIDEWAYS_MASK
)
enum
class
StyleFlexDirection
:
uint8_t
{
Row
RowReverse
Column
ColumnReverse
}
;
enum
class
StyleFlexWrap
:
uint8_t
{
Nowrap
Wrap
WrapReverse
}
;
#
define
NS_STYLE_ORDER_INITIAL
0
#
define
NS_STYLE_FONT_SIZE_XXSMALL
0
#
define
NS_STYLE_FONT_SIZE_XSMALL
1
#
define
NS_STYLE_FONT_SIZE_SMALL
2
#
define
NS_STYLE_FONT_SIZE_MEDIUM
3
#
define
NS_STYLE_FONT_SIZE_LARGE
4
#
define
NS_STYLE_FONT_SIZE_XLARGE
5
#
define
NS_STYLE_FONT_SIZE_XXLARGE
6
#
define
NS_STYLE_FONT_SIZE_XXXLARGE
\
7
/
/
Only
used
by
<
font
size
=
"
7
"
>
.
Not
specifiable
in
CSS
.
#
define
NS_STYLE_FONT_SIZE_LARGER
8
#
define
NS_STYLE_FONT_SIZE_SMALLER
9
#
define
NS_STYLE_FONT_SIZE_NO_KEYWORD
\
10
/
/
Used
by
Servo
to
track
the
"
no
keyword
"
case
#
define
NS_STYLE_GRID_AUTO_FLOW_ROW
(
1
<
<
0
)
#
define
NS_STYLE_GRID_AUTO_FLOW_COLUMN
(
1
<
<
1
)
#
define
NS_STYLE_GRID_AUTO_FLOW_DENSE
(
1
<
<
2
)
#
define
NS_STYLE_GRID_TEMPLATE_SUBGRID
0
enum
class
StyleGridTrackBreadth
:
uint8_t
{
MaxContent
=
1
MinContent
=
2
}
;
#
define
NS_MATHML_DEFAULT_SCRIPT_SIZE_MULTIPLIER
0
.
71f
#
define
NS_MATHML_DEFAULT_SCRIPT_MIN_SIZE_PT
8
#
define
NS_MATHML_MATHVARIANT_NONE
0
#
define
NS_MATHML_MATHVARIANT_NORMAL
1
#
define
NS_MATHML_MATHVARIANT_BOLD
2
#
define
NS_MATHML_MATHVARIANT_ITALIC
3
#
define
NS_MATHML_MATHVARIANT_BOLD_ITALIC
4
#
define
NS_MATHML_MATHVARIANT_SCRIPT
5
#
define
NS_MATHML_MATHVARIANT_BOLD_SCRIPT
6
#
define
NS_MATHML_MATHVARIANT_FRAKTUR
7
#
define
NS_MATHML_MATHVARIANT_DOUBLE_STRUCK
8
#
define
NS_MATHML_MATHVARIANT_BOLD_FRAKTUR
9
#
define
NS_MATHML_MATHVARIANT_SANS_SERIF
10
#
define
NS_MATHML_MATHVARIANT_BOLD_SANS_SERIF
11
#
define
NS_MATHML_MATHVARIANT_SANS_SERIF_ITALIC
12
#
define
NS_MATHML_MATHVARIANT_SANS_SERIF_BOLD_ITALIC
13
#
define
NS_MATHML_MATHVARIANT_MONOSPACE
14
#
define
NS_MATHML_MATHVARIANT_INITIAL
15
#
define
NS_MATHML_MATHVARIANT_TAILED
16
#
define
NS_MATHML_MATHVARIANT_LOOPED
17
#
define
NS_MATHML_MATHVARIANT_STRETCHED
18
#
define
NS_MATHML_DISPLAYSTYLE_INLINE
0
#
define
NS_MATHML_DISPLAYSTYLE_BLOCK
1
#
define
NS_STYLE_POSITION_STATIC
0
#
define
NS_STYLE_POSITION_RELATIVE
1
#
define
NS_STYLE_POSITION_ABSOLUTE
2
#
define
NS_STYLE_POSITION_FIXED
3
#
define
NS_STYLE_POSITION_STICKY
4
#
define
NS_STYLE_CLIP_AUTO
0x00
#
define
NS_STYLE_CLIP_RECT
0x01
#
define
NS_STYLE_CLIP_TYPE_MASK
0x0F
#
define
NS_STYLE_CLIP_LEFT_AUTO
0x10
#
define
NS_STYLE_CLIP_TOP_AUTO
0x20
#
define
NS_STYLE_CLIP_RIGHT_AUTO
0x40
#
define
NS_STYLE_CLIP_BOTTOM_AUTO
0x80
#
define
NS_STYLE_FRAME_YES
0
#
define
NS_STYLE_FRAME_NO
1
#
define
NS_STYLE_FRAME_0
2
#
define
NS_STYLE_FRAME_1
3
#
define
NS_STYLE_FRAME_ON
4
#
define
NS_STYLE_FRAME_OFF
5
#
define
NS_STYLE_FRAME_AUTO
6
#
define
NS_STYLE_FRAME_SCROLL
7
#
define
NS_STYLE_FRAME_NOSCROLL
8
#
define
NS_STYLE_LIST_STYLE_CUSTOM
-
1
/
/
for
counter
-
style
#
define
NS_STYLE_LIST_STYLE_NONE
0
#
define
NS_STYLE_LIST_STYLE_DECIMAL
1
#
define
NS_STYLE_LIST_STYLE_DISC
2
#
define
NS_STYLE_LIST_STYLE_CIRCLE
3
#
define
NS_STYLE_LIST_STYLE_SQUARE
4
#
define
NS_STYLE_LIST_STYLE_DISCLOSURE_CLOSED
5
#
define
NS_STYLE_LIST_STYLE_DISCLOSURE_OPEN
6
#
define
NS_STYLE_LIST_STYLE_HEBREW
7
#
define
NS_STYLE_LIST_STYLE_JAPANESE_INFORMAL
8
#
define
NS_STYLE_LIST_STYLE_JAPANESE_FORMAL
9
#
define
NS_STYLE_LIST_STYLE_KOREAN_HANGUL_FORMAL
10
#
define
NS_STYLE_LIST_STYLE_KOREAN_HANJA_INFORMAL
11
#
define
NS_STYLE_LIST_STYLE_KOREAN_HANJA_FORMAL
12
#
define
NS_STYLE_LIST_STYLE_SIMP_CHINESE_INFORMAL
13
#
define
NS_STYLE_LIST_STYLE_SIMP_CHINESE_FORMAL
14
#
define
NS_STYLE_LIST_STYLE_TRAD_CHINESE_INFORMAL
15
#
define
NS_STYLE_LIST_STYLE_TRAD_CHINESE_FORMAL
16
#
define
NS_STYLE_LIST_STYLE_ETHIOPIC_NUMERIC
17
#
define
NS_STYLE_LIST_STYLE_LOWER_ROMAN
100
#
define
NS_STYLE_LIST_STYLE_UPPER_ROMAN
101
#
define
NS_STYLE_LIST_STYLE_LOWER_ALPHA
102
#
define
NS_STYLE_LIST_STYLE_UPPER_ALPHA
103
#
define
NS_STYLE_LIST_STYLE_POSITION_INSIDE
0
#
define
NS_STYLE_LIST_STYLE_POSITION_OUTSIDE
1
enum
class
StylePointerEvents
:
uint8_t
{
None
Visiblepainted
Visiblefill
Visiblestroke
Visible
Painted
Fill
Stroke
All
Auto
}
;
enum
class
StyleIsolation
:
uint8_t
{
Auto
Isolate
}
;
enum
class
StyleObjectFit
:
uint8_t
{
Fill
Contain
Cover
None
ScaleDown
}
;
#
define
NS_STYLE_TEXT_ALIGN_START
0
#
define
NS_STYLE_TEXT_ALIGN_LEFT
1
#
define
NS_STYLE_TEXT_ALIGN_RIGHT
2
#
define
NS_STYLE_TEXT_ALIGN_CENTER
3
#
define
NS_STYLE_TEXT_ALIGN_JUSTIFY
4
#
define
NS_STYLE_TEXT_ALIGN_CHAR
\
5
/
/
align
based
on
a
certain
character
for
table
cell
#
define
NS_STYLE_TEXT_ALIGN_END
6
#
define
NS_STYLE_TEXT_ALIGN_AUTO
7
#
define
NS_STYLE_TEXT_ALIGN_MOZ_CENTER
8
#
define
NS_STYLE_TEXT_ALIGN_MOZ_RIGHT
9
#
define
NS_STYLE_TEXT_ALIGN_MOZ_LEFT
10
#
define
NS_STYLE_TEXT_DECORATION_STYLE_NONE
\
0
/
/
not
in
CSS
spec
mapped
to
-
moz
-
none
#
define
NS_STYLE_TEXT_DECORATION_STYLE_DOTTED
1
#
define
NS_STYLE_TEXT_DECORATION_STYLE_DASHED
2
#
define
NS_STYLE_TEXT_DECORATION_STYLE_SOLID
3
#
define
NS_STYLE_TEXT_DECORATION_STYLE_DOUBLE
4
#
define
NS_STYLE_TEXT_DECORATION_STYLE_WAVY
5
#
define
NS_STYLE_TEXT_DECORATION_STYLE_MAX
NS_STYLE_TEXT_DECORATION_STYLE_WAVY
#
define
NS_STYLE_TEXT_TRANSFORM_NONE
0
#
define
NS_STYLE_TEXT_TRANSFORM_CAPITALIZE
1
#
define
NS_STYLE_TEXT_TRANSFORM_LOWERCASE
2
#
define
NS_STYLE_TEXT_TRANSFORM_UPPERCASE
3
#
define
NS_STYLE_TEXT_TRANSFORM_FULL_WIDTH
4
#
define
NS_STYLE_TEXT_TRANSFORM_FULL_SIZE_KANA
5
enum
class
StyleTopLayer
:
uint8_t
{
None
Top
}
;
enum
class
StyleVisibility
:
uint8_t
{
Hidden
Visible
Collapse
}
;
#
define
NS_STYLE_TABSIZE_INITIAL
8
enum
class
StyleWhiteSpace
:
uint8_t
{
Normal
=
0
Pre
Nowrap
PreWrap
PreLine
PreSpace
BreakSpaces
}
;
enum
class
StyleRubyAlign
:
uint8_t
{
Start
Center
SpaceBetween
SpaceAround
}
;
enum
class
StyleRubyPosition
:
uint8_t
{
Over
Under
}
;
enum
class
StyleTextSizeAdjust
:
uint8_t
{
None
Auto
}
;
enum
class
StyleTextOrientation
:
uint8_t
{
Mixed
Upright
Sideways
}
;
#
define
NS_STYLE_TEXT_COMBINE_UPRIGHT_NONE
0
#
define
NS_STYLE_TEXT_COMBINE_UPRIGHT_ALL
1
#
define
NS_STYLE_UNICODE_BIDI_NORMAL
0x0
#
define
NS_STYLE_UNICODE_BIDI_EMBED
0x1
#
define
NS_STYLE_UNICODE_BIDI_ISOLATE
0x2
#
define
NS_STYLE_UNICODE_BIDI_BIDI_OVERRIDE
0x4
#
define
NS_STYLE_UNICODE_BIDI_ISOLATE_OVERRIDE
0x6
#
define
NS_STYLE_UNICODE_BIDI_PLAINTEXT
0x8
#
define
NS_STYLE_TABLE_LAYOUT_AUTO
0
#
define
NS_STYLE_TABLE_LAYOUT_FIXED
1
#
define
NS_STYLE_TABLE_EMPTY_CELLS_HIDE
0
#
define
NS_STYLE_TABLE_EMPTY_CELLS_SHOW
1
#
define
NS_STYLE_CAPTION_SIDE_TOP
0
#
define
NS_STYLE_CAPTION_SIDE_RIGHT
1
#
define
NS_STYLE_CAPTION_SIDE_BOTTOM
2
#
define
NS_STYLE_CAPTION_SIDE_LEFT
3
#
define
NS_STYLE_CAPTION_SIDE_TOP_OUTSIDE
4
#
define
NS_STYLE_CAPTION_SIDE_BOTTOM_OUTSIDE
5
#
define
NS_STYLE_CELL_SCOPE_ROW
0
#
define
NS_STYLE_CELL_SCOPE_COL
1
#
define
NS_STYLE_CELL_SCOPE_ROWGROUP
2
#
define
NS_STYLE_CELL_SCOPE_COLGROUP
3
#
define
NS_STYLE_PAGE_MARKS_NONE
0x00
#
define
NS_STYLE_PAGE_MARKS_CROP
0x01
#
define
NS_STYLE_PAGE_MARKS_REGISTER
0x02
#
define
NS_STYLE_PAGE_SIZE_AUTO
0
#
define
NS_STYLE_PAGE_SIZE_PORTRAIT
1
#
define
NS_STYLE_PAGE_SIZE_LANDSCAPE
2
#
define
NS_STYLE_PAGE_BREAK_AUTO
0
#
define
NS_STYLE_PAGE_BREAK_ALWAYS
1
#
define
NS_STYLE_PAGE_BREAK_AVOID
2
#
define
NS_STYLE_PAGE_BREAK_LEFT
3
#
define
NS_STYLE_PAGE_BREAK_RIGHT
4
enum
class
StyleImeMode
:
uint8_t
{
Auto
Normal
Active
Disabled
Inactive
}
;
enum
class
StyleWindowShadow
:
uint8_t
{
None
Default
Menu
Tooltip
Sheet
}
;
enum
class
StyleDominantBaseline
:
uint8_t
{
Auto
Ideographic
Alphabetic
Hanging
Mathematical
Central
Middle
TextAfterEdge
TextBeforeEdge
}
;
enum
class
StyleImageRendering
:
uint8_t
{
Auto
Optimizespeed
Optimizequality
CrispEdges
}
;
enum
class
StyleMaskType
:
uint8_t
{
Luminance
Alpha
}
;
enum
class
StyleShapeRendering
:
uint8_t
{
Auto
Optimizespeed
Crispedges
Geometricprecision
}
;
enum
class
StyleStrokeLinecap
:
uint8_t
{
Butt
Round
Square
}
;
enum
class
StyleStrokeLinejoin
:
uint8_t
{
Miter
Round
Bevel
}
;
enum
class
StyleTextAnchor
:
uint8_t
{
Start
Middle
End
}
;
#
define
NS_STYLE_TEXT_EMPHASIS_POSITION_OVER
(
1
<
<
0
)
#
define
NS_STYLE_TEXT_EMPHASIS_POSITION_UNDER
(
1
<
<
1
)
#
define
NS_STYLE_TEXT_EMPHASIS_POSITION_LEFT
(
1
<
<
2
)
#
define
NS_STYLE_TEXT_EMPHASIS_POSITION_RIGHT
(
1
<
<
3
)
#
define
NS_STYLE_TEXT_EMPHASIS_POSITION_DEFAULT
\
(
NS_STYLE_TEXT_EMPHASIS_POSITION_OVER
|
NS_STYLE_TEXT_EMPHASIS_POSITION_RIGHT
)
#
define
NS_STYLE_TEXT_EMPHASIS_POSITION_DEFAULT_ZH
\
(
NS_STYLE_TEXT_EMPHASIS_POSITION_UNDER
|
\
NS_STYLE_TEXT_EMPHASIS_POSITION_RIGHT
)
enum
class
StyleTextRendering
:
uint8_t
{
Auto
Optimizespeed
Optimizelegibility
Geometricprecision
}
;
enum
class
StyleColorAdjust
:
uint8_t
{
Economy
=
0
Exact
=
1
}
;
#
define
NS_STYLE_COLOR_INTERPOLATION_AUTO
0
#
define
NS_STYLE_COLOR_INTERPOLATION_SRGB
1
#
define
NS_STYLE_COLOR_INTERPOLATION_LINEARRGB
2
#
define
NS_STYLE_VECTOR_EFFECT_NONE
0
#
define
NS_STYLE_VECTOR_EFFECT_NON_SCALING_STROKE
1
#
define
NS_STYLE_BACKFACE_VISIBILITY_VISIBLE
1
#
define
NS_STYLE_BACKFACE_VISIBILITY_HIDDEN
0
#
define
NS_STYLE_TRANSFORM_STYLE_FLAT
0
#
define
NS_STYLE_TRANSFORM_STYLE_PRESERVE_3D
1
#
define
NS_STYLE_BLEND_NORMAL
0
#
define
NS_STYLE_BLEND_MULTIPLY
1
#
define
NS_STYLE_BLEND_SCREEN
2
#
define
NS_STYLE_BLEND_OVERLAY
3
#
define
NS_STYLE_BLEND_DARKEN
4
#
define
NS_STYLE_BLEND_LIGHTEN
5
#
define
NS_STYLE_BLEND_COLOR_DODGE
6
#
define
NS_STYLE_BLEND_COLOR_BURN
7
#
define
NS_STYLE_BLEND_HARD_LIGHT
8
#
define
NS_STYLE_BLEND_SOFT_LIGHT
9
#
define
NS_STYLE_BLEND_DIFFERENCE
10
#
define
NS_STYLE_BLEND_EXCLUSION
11
#
define
NS_STYLE_BLEND_HUE
12
#
define
NS_STYLE_BLEND_SATURATION
13
#
define
NS_STYLE_BLEND_COLOR
14
#
define
NS_STYLE_BLEND_LUMINOSITY
15
#
define
NS_STYLE_MASK_COMPOSITE_ADD
0
#
define
NS_STYLE_MASK_COMPOSITE_SUBTRACT
1
#
define
NS_STYLE_MASK_COMPOSITE_INTERSECT
2
#
define
NS_STYLE_MASK_COMPOSITE_EXCLUDE
3
#
define
NS_STYLE_CONTROL_CHARACTER_VISIBILITY_HIDDEN
0
#
define
NS_STYLE_CONTROL_CHARACTER_VISIBILITY_VISIBLE
1
#
define
NS_STYLE_COUNTER_SYSTEM_CYCLIC
0
#
define
NS_STYLE_COUNTER_SYSTEM_NUMERIC
1
#
define
NS_STYLE_COUNTER_SYSTEM_ALPHABETIC
2
#
define
NS_STYLE_COUNTER_SYSTEM_SYMBOLIC
3
#
define
NS_STYLE_COUNTER_SYSTEM_ADDITIVE
4
#
define
NS_STYLE_COUNTER_SYSTEM_FIXED
5
#
define
NS_STYLE_COUNTER_SYSTEM_EXTENDS
6
#
define
NS_STYLE_COUNTER_RANGE_INFINITE
0
#
define
NS_STYLE_COUNTER_SPEAKAS_BULLETS
0
#
define
NS_STYLE_COUNTER_SPEAKAS_NUMBERS
1
#
define
NS_STYLE_COUNTER_SPEAKAS_WORDS
2
#
define
NS_STYLE_COUNTER_SPEAKAS_SPELL_OUT
3
#
define
NS_STYLE_COUNTER_SPEAKAS_OTHER
255
/
/
refer
to
another
style
enum
class
StyleScrollBehavior
:
uint8_t
{
Auto
Smooth
}
;
}
#
endif
