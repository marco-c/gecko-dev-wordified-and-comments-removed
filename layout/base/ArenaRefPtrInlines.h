#
ifndef
mozilla_ArenaRefPtrInlines_h
#
define
mozilla_ArenaRefPtrInlines_h
#
include
"
mozilla
/
ArenaObjectID
.
h
"
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
nsStyleStruct
.
h
"
#
include
"
nsStyleContext
.
h
"
namespace
mozilla
{
template
<
typename
T
>
void
ArenaRefPtr
<
T
>
:
:
AssertValidType
(
)
{
static_assert
(
IsSame
<
T
GeckoStyleContext
>
:
:
value
|
|
IsSame
<
T
nsStyleContext
>
:
:
value
"
ArenaRefPtr
<
T
>
template
parameter
T
must
be
declared
in
"
"
nsPresArenaObjectList
and
explicitly
handled
in
"
"
nsPresArena
.
cpp
"
)
;
}
}
template
<
typename
T
>
void
nsPresArena
:
:
RegisterArenaRefPtr
(
mozilla
:
:
ArenaRefPtr
<
T
>
*
aPtr
)
{
MOZ_ASSERT
(
!
mArenaRefPtrs
.
Contains
(
aPtr
)
)
;
mArenaRefPtrs
.
Put
(
aPtr
T
:
:
ArenaObjectID
(
)
)
;
}
#
endif
