"
use
strict
"
;
const
PAGECONTENT
=
"
<
!
DOCTYPE
html
>
"
+
"
<
html
>
"
+
"
<
style
>
"
+
"
html
{
"
+
"
height
:
120vh
;
"
+
"
overflow
-
y
:
scroll
;
"
+
"
}
"
+
"
<
/
style
>
"
+
"
<
/
html
>
"
;
const
pageUrl
=
"
data
:
text
/
html
"
+
encodeURIComponent
(
PAGECONTENT
)
;
add_task
(
async
function
test
(
)
{
if
(
window
.
devicePixelRatio
=
=
1
)
{
ok
(
true
"
Skip
this
test
since
this
test
is
supposed
to
run
on
HiDPI
mode
"
+
"
the
devixePixelRato
on
this
machine
is
"
+
window
.
devicePixelRatio
)
;
return
;
}
const
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
pageUrl
)
;
const
originalScrollPosition
=
await
SpecialPowers
.
spawn
(
tab
.
linkedBrowser
[
]
async
(
)
=
>
{
content
.
document
.
scrollingElement
.
scrollTop
=
100
;
return
content
.
document
.
scrollingElement
.
scrollTop
;
}
)
;
SpecialPowers
.
DOMWindowUtils
.
setHiDPIMode
(
false
)
;
registerCleanupFunction
(
(
)
=
>
{
SpecialPowers
.
DOMWindowUtils
.
restoreHiDPIMode
(
)
;
}
)
;
const
scrollPosition
=
await
SpecialPowers
.
spawn
(
tab
.
linkedBrowser
[
]
async
(
)
=
>
{
return
content
.
document
.
scrollingElement
.
scrollTop
;
}
)
;
is
(
originalScrollPosition
scrollPosition
"
The
scroll
position
should
be
kept
"
)
;
BrowserTestUtils
.
removeTab
(
tab
)
;
}
)
;
