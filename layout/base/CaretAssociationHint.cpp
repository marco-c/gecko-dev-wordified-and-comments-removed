#
include
"
CaretAssociationHint
.
h
"
#
include
"
mozilla
/
RangeBoundary
.
h
"
#
include
"
mozilla
/
SelectionMovementUtils
.
h
"
#
include
"
mozilla
/
intl
/
BidiEmbeddingLevel
.
h
"
#
include
"
nsCaret
.
h
"
#
include
"
nsIContent
.
h
"
#
include
"
nsIFrame
.
h
"
#
include
"
nsTextFrame
.
h
"
namespace
mozilla
{
template
CaretAssociationHint
ComputeCaretAssociationHint
(
CaretAssociationHint
aDefault
intl
:
:
BidiEmbeddingLevel
aBidiLevel
const
RangeBoundary
&
aCaretPoint
)
;
template
CaretAssociationHint
ComputeCaretAssociationHint
(
CaretAssociationHint
aDefault
intl
:
:
BidiEmbeddingLevel
aBidiLevel
const
RawRangeBoundary
&
aCaretPoint
)
;
template
<
typename
PT
typename
CT
>
CaretAssociationHint
ComputeCaretAssociationHint
(
CaretAssociationHint
aDefault
intl
:
:
BidiEmbeddingLevel
aBidiLevel
const
RangeBoundaryBase
<
PT
CT
>
&
aCaretPoint
)
{
MOZ_ASSERT
(
aCaretPoint
.
IsSetAndValid
(
)
)
;
if
(
aDefault
!
=
CaretAssociationHint
:
:
Before
|
|
!
aCaretPoint
.
GetContainer
(
)
-
>
IsContent
(
)
)
{
return
aDefault
;
}
const
nsCaret
:
:
CaretPosition
pos
{
aCaretPoint
.
GetContainer
(
)
static_cast
<
int32_t
>
(
*
aCaretPoint
.
Offset
(
RangeBoundaryBase
<
PT
CT
>
:
:
OffsetFilter
:
:
kValidOffsets
)
)
aDefault
aBidiLevel
}
;
CaretFrameData
frameData
=
nsCaret
:
:
GetFrameAndOffset
(
pos
)
;
nsTextFrame
*
f
=
do_QueryFrame
(
frameData
.
mFrame
)
;
if
(
f
&
&
f
-
>
IsAtEndOfLine
(
)
&
&
f
-
>
HasSignificantTerminalNewline
(
)
)
{
const
bool
caretPointIsAtEndOfFrame
=
aCaretPoint
.
GetContainer
(
)
=
=
f
-
>
GetContent
(
)
&
&
f
-
>
GetContentEnd
(
)
=
=
static_cast
<
int32_t
>
(
*
aCaretPoint
.
Offset
(
RangeBoundaryBase
<
PT
CT
>
:
:
OffsetFilter
:
:
kValidOffsets
)
)
;
const
bool
caretPointIsImmediatelyAfterFrameContent
=
aCaretPoint
.
GetContainer
(
)
=
=
f
-
>
GetContent
(
)
-
>
GetParentNode
(
)
&
&
f
-
>
GetContent
(
)
=
=
aCaretPoint
.
GetPreviousSiblingOfChildAtOffset
(
)
;
if
(
caretPointIsAtEndOfFrame
|
|
caretPointIsImmediatelyAfterFrameContent
)
{
return
CaretAssociationHint
:
:
After
;
}
}
return
frameData
.
mFrame
?
frameData
.
mHint
:
aDefault
;
}
}
