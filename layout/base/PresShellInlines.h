#
ifndef
mozilla_PresShellInlines_h
#
define
mozilla_PresShellInlines_h
#
include
"
nsDocShell
.
h
"
#
include
"
GeckoProfiler
.
h
"
#
include
"
mozilla
/
PresShell
.
h
"
#
include
"
mozilla
/
dom
/
Document
.
h
"
#
include
"
mozilla
/
dom
/
Element
.
h
"
namespace
mozilla
{
void
PresShell
:
:
SetNeedLayoutFlush
(
)
{
mNeedLayoutFlush
=
true
;
if
(
dom
:
:
Document
*
doc
=
mDocument
-
>
GetDisplayDocument
(
)
)
{
if
(
PresShell
*
presShell
=
doc
-
>
GetPresShell
(
)
)
{
presShell
-
>
mNeedLayoutFlush
=
true
;
}
}
#
ifdef
MOZ_GECKO_PROFILER
if
(
!
mReflowCause
)
{
mReflowCause
=
profiler_capture_backtrace
(
)
;
}
#
endif
mLayoutTelemetry
.
IncReqsPerFlush
(
FlushType
:
:
Layout
)
;
}
void
PresShell
:
:
SetNeedStyleFlush
(
)
{
mNeedStyleFlush
=
true
;
PROFILER_MARKER_UNTYPED
(
"
SetNeedStyleFlush
"
LAYOUT
MarkerOptions
(
MarkerStack
:
:
Capture
(
StackCaptureOptions
:
:
NonNative
)
mPresContext
?
MarkerInnerWindowIdFromDocShell
(
mPresContext
-
>
GetDocShell
(
)
)
:
MarkerInnerWindowId
:
:
NoId
(
)
)
)
;
if
(
dom
:
:
Document
*
doc
=
mDocument
-
>
GetDisplayDocument
(
)
)
{
if
(
PresShell
*
presShell
=
doc
-
>
GetPresShell
(
)
)
{
presShell
-
>
mNeedStyleFlush
=
true
;
}
}
#
ifdef
MOZ_GECKO_PROFILER
if
(
!
mStyleCause
)
{
mStyleCause
=
profiler_capture_backtrace
(
)
;
}
#
endif
mLayoutTelemetry
.
IncReqsPerFlush
(
FlushType
:
:
Layout
)
;
}
void
PresShell
:
:
EnsureStyleFlush
(
)
{
SetNeedStyleFlush
(
)
;
ObserveStyleFlushes
(
)
;
}
void
PresShell
:
:
SetNeedThrottledAnimationFlush
(
)
{
mNeedThrottledAnimationFlush
=
true
;
if
(
dom
:
:
Document
*
doc
=
mDocument
-
>
GetDisplayDocument
(
)
)
{
if
(
PresShell
*
presShell
=
doc
-
>
GetPresShell
(
)
)
{
presShell
-
>
mNeedThrottledAnimationFlush
=
true
;
}
}
}
ServoStyleSet
*
PresShell
:
:
StyleSet
(
)
const
{
return
mDocument
-
>
StyleSetForPresShellOrMediaQueryEvaluation
(
)
;
}
inline
void
PresShell
:
:
EventHandler
:
:
OnPresShellDestroy
(
Document
*
aDocument
)
{
if
(
sLastKeyDownEventTargetElement
&
&
sLastKeyDownEventTargetElement
-
>
OwnerDoc
(
)
=
=
aDocument
)
{
sLastKeyDownEventTargetElement
=
nullptr
;
}
}
}
#
endif
