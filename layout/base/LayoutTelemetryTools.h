#
ifndef
mozilla_LayoutTelemetryTools_h
#
define
mozilla_LayoutTelemetryTools_h
#
include
"
mozilla
/
EnumeratedArray
.
h
"
#
include
"
mozilla
/
EnumeratedRange
.
h
"
#
include
"
mozilla
/
FlushType
.
h
"
#
include
"
mozilla
/
Saturate
.
h
"
#
include
"
mozilla
/
TimeStamp
.
h
"
#
define
LAYOUT_TELEMETRY_RECORD
(
subsystem
)
\
layout_telemetry
:
:
AutoRecord
a
(
layout_telemetry
:
:
LayoutSubsystem
:
:
subsystem
)
#
define
LAYOUT_TELEMETRY_RECORD_BASE
(
subsystem
)
\
layout_telemetry
:
:
AutoRecord
a
(
&
mLayoutTelemetry
\
layout_telemetry
:
:
LayoutSubsystem
:
:
subsystem
)
namespace
mozilla
{
namespace
layout_telemetry
{
enum
class
FlushKind
:
uint8_t
{
Style
Layout
Count
}
;
enum
class
LayoutSubsystem
:
uint8_t
{
Restyle
Reflow
ReflowFlex
ReflowGrid
ReflowTable
ReflowText
Count
}
;
using
LayoutSubsystemDurations
=
EnumeratedArray
<
LayoutSubsystem
double
size_t
(
LayoutSubsystem
:
:
Count
)
>
;
using
LayoutFlushCount
=
EnumeratedArray
<
FlushKind
SaturateUint8
size_t
(
FlushKind
:
:
Count
)
>
;
struct
Data
{
Data
(
)
;
void
IncReqsPerFlush
(
FlushType
aFlushType
)
;
void
IncFlushesPerTick
(
FlushType
aFlushType
)
;
void
PingTelemetry
(
)
;
void
PingReqsPerFlushTelemetry
(
FlushType
aFlushType
)
;
void
PingFlushPerTickTelemetry
(
FlushType
aFlushType
)
;
void
PingTotalMsPerTickTelemetry
(
FlushType
aFlushType
)
;
void
PingPerTickTelemetry
(
FlushType
aFlushType
)
;
LayoutFlushCount
mReqsPerFlush
;
LayoutFlushCount
mFlushesPerTick
;
LayoutSubsystemDurations
mLayoutSubsystemDurationMs
;
}
;
class
AutoRecord
{
public
:
explicit
AutoRecord
(
LayoutSubsystem
aSubsystem
)
;
AutoRecord
(
Data
*
aLayoutTelemetry
LayoutSubsystem
aSubsystem
)
;
~
AutoRecord
(
)
;
private
:
AutoRecord
*
mParentRecord
;
Data
*
mLayoutTelemetry
;
LayoutSubsystem
mSubsystem
;
TimeStamp
mStartTime
;
double
mDurationMs
;
}
;
}
}
#
endif
