#
include
"
mozilla
/
PresShell
.
h
"
#
include
"
mozilla
/
ViewportUtils
.
h
"
#
include
"
mozilla
/
layers
/
APZCCallbackHelper
.
h
"
#
include
"
mozilla
/
layers
/
InputAPZContext
.
h
"
#
include
"
mozilla
/
layers
/
ScrollableLayerGuid
.
h
"
#
include
"
nsIContent
.
h
"
#
include
"
nsLayoutUtils
.
h
"
namespace
mozilla
{
using
layers
:
:
APZCCallbackHelper
;
using
layers
:
:
InputAPZContext
;
using
layers
:
:
ScrollableLayerGuid
;
template
<
typename
Units
>
gfx
:
:
Matrix4x4Typed
<
Units
Units
>
ViewportUtils
:
:
GetVisualToLayoutTransform
(
ScrollableLayerGuid
:
:
ViewID
aScrollId
)
{
static_assert
(
std
:
:
is_same_v
<
Units
CSSPixel
>
|
|
std
:
:
is_same_v
<
Units
LayoutDevicePixel
>
"
GetCallbackTransform
(
)
may
only
be
used
with
CSS
or
LayoutDevice
units
"
)
;
if
(
aScrollId
=
=
ScrollableLayerGuid
:
:
NULL_SCROLL_ID
)
{
return
{
}
;
}
nsCOMPtr
<
nsIContent
>
content
=
nsLayoutUtils
:
:
FindContentFor
(
aScrollId
)
;
if
(
!
content
)
{
return
{
}
;
}
float
resolution
=
1
.
0f
;
if
(
PresShell
*
presShell
=
APZCCallbackHelper
:
:
GetRootContentDocumentPresShellForContent
(
content
)
)
{
resolution
=
presShell
-
>
GetResolution
(
)
;
}
gfx
:
:
PointTyped
<
Units
>
transform
;
CSSPoint
transformCSS
=
nsLayoutUtils
:
:
GetCumulativeApzCallbackTransform
(
content
-
>
GetPrimaryFrame
(
)
)
;
if
constexpr
(
std
:
:
is_same_v
<
Units
CSSPixel
>
)
{
transform
=
transformCSS
;
}
else
{
transform
=
transformCSS
*
content
-
>
GetPrimaryFrame
(
)
-
>
PresContext
(
)
-
>
CSSToDevPixelScale
(
)
;
}
return
gfx
:
:
Matrix4x4Typed
<
Units
Units
>
:
:
Scaling
(
1
/
resolution
1
/
resolution
1
)
.
PostTranslate
(
transform
.
x
transform
.
y
0
)
;
}
CSSToCSSMatrix4x4
GetVisualToLayoutTransform
(
PresShell
*
aContext
)
{
ScrollableLayerGuid
:
:
ViewID
targetScrollId
=
InputAPZContext
:
:
GetTargetLayerGuid
(
)
.
mScrollId
;
if
(
targetScrollId
=
=
ScrollableLayerGuid
:
:
NULL_SCROLL_ID
)
{
if
(
nsIFrame
*
rootScrollFrame
=
aContext
-
>
GetRootScrollFrame
(
)
)
{
targetScrollId
=
nsLayoutUtils
:
:
FindOrCreateIDFor
(
rootScrollFrame
-
>
GetContent
(
)
)
;
}
}
return
ViewportUtils
:
:
GetVisualToLayoutTransform
(
targetScrollId
)
;
}
nsPoint
ViewportUtils
:
:
VisualToLayout
(
const
nsPoint
&
aPt
PresShell
*
aContext
)
{
auto
visualToLayout
=
mozilla
:
:
GetVisualToLayoutTransform
(
aContext
)
;
CSSPoint
cssPt
=
CSSPoint
:
:
FromAppUnits
(
aPt
)
;
cssPt
=
visualToLayout
.
TransformPoint
(
cssPt
)
;
return
CSSPoint
:
:
ToAppUnits
(
cssPt
)
;
}
nsRect
ViewportUtils
:
:
VisualToLayout
(
const
nsRect
&
aRect
PresShell
*
aContext
)
{
auto
visualToLayout
=
mozilla
:
:
GetVisualToLayoutTransform
(
aContext
)
;
CSSRect
cssRect
=
CSSRect
:
:
FromAppUnits
(
aRect
)
;
cssRect
=
visualToLayout
.
TransformBounds
(
cssRect
)
;
nsRect
result
=
CSSRect
:
:
ToAppUnits
(
cssRect
)
;
if
(
!
aRect
.
IsEmpty
(
)
&
&
result
.
IsEmpty
(
)
)
{
result
.
width
=
1
;
result
.
height
=
1
;
}
return
result
;
}
nsPoint
ViewportUtils
:
:
LayoutToVisual
(
const
nsPoint
&
aPt
PresShell
*
aContext
)
{
auto
visualToLayout
=
mozilla
:
:
GetVisualToLayoutTransform
(
aContext
)
;
CSSPoint
cssPt
=
CSSPoint
:
:
FromAppUnits
(
aPt
)
;
auto
transformed
=
visualToLayout
.
Inverse
(
)
.
TransformPoint
(
cssPt
)
;
return
CSSPoint
:
:
ToAppUnits
(
transformed
)
;
}
template
CSSToCSSMatrix4x4
ViewportUtils
:
:
GetVisualToLayoutTransform
<
CSSPixel
>
(
ScrollableLayerGuid
:
:
ViewID
)
;
template
LayoutDeviceToLayoutDeviceMatrix4x4
ViewportUtils
:
:
GetVisualToLayoutTransform
<
LayoutDevicePixel
>
(
ScrollableLayerGuid
:
:
ViewID
)
;
}
