#
include
"
mozilla
/
ServoRestyleManager
.
h
"
#
include
"
mozilla
/
ServoStyleSet
.
h
"
using
namespace
mozilla
:
:
dom
;
namespace
mozilla
{
ServoRestyleManager
:
:
ServoRestyleManager
(
nsPresContext
*
aPresContext
)
:
RestyleManagerBase
(
aPresContext
)
{
}
void
ServoRestyleManager
:
:
Disconnect
(
)
{
NS_ERROR
(
"
stylo
:
ServoRestyleManager
:
:
Disconnect
not
implemented
"
)
;
}
void
ServoRestyleManager
:
:
PostRestyleEvent
(
Element
*
aElement
nsRestyleHint
aRestyleHint
nsChangeHint
aMinChangeHint
)
{
if
(
MOZ_UNLIKELY
(
IsDisconnected
(
)
)
|
|
MOZ_UNLIKELY
(
PresContext
(
)
-
>
PresShell
(
)
-
>
IsDestroying
(
)
)
)
{
return
;
}
nsIPresShell
*
presShell
=
PresContext
(
)
-
>
PresShell
(
)
;
if
(
!
ObservingRefreshDriver
(
)
)
{
SetObservingRefreshDriver
(
PresContext
(
)
-
>
RefreshDriver
(
)
-
>
AddStyleFlushObserver
(
presShell
)
)
;
}
aElement
-
>
SetIsDirtyForServo
(
)
;
nsINode
*
cur
=
aElement
;
while
(
(
cur
=
cur
-
>
GetParentNode
(
)
)
)
{
if
(
cur
-
>
HasDirtyDescendantsForServo
(
)
)
break
;
cur
-
>
SetHasDirtyDescendantsForServo
(
)
;
}
presShell
-
>
GetDocument
(
)
-
>
SetNeedStyleFlush
(
)
;
}
void
ServoRestyleManager
:
:
PostRestyleEventForLazyConstruction
(
)
{
NS_ERROR
(
"
stylo
:
ServoRestyleManager
:
:
PostRestyleEventForLazyConstruction
not
implemented
"
)
;
}
void
ServoRestyleManager
:
:
RebuildAllStyleData
(
nsChangeHint
aExtraHint
nsRestyleHint
aRestyleHint
)
{
NS_ERROR
(
"
stylo
:
ServoRestyleManager
:
:
RebuildAllStyleData
not
implemented
"
)
;
}
void
ServoRestyleManager
:
:
PostRebuildAllStyleDataEvent
(
nsChangeHint
aExtraHint
nsRestyleHint
aRestyleHint
)
{
MOZ_CRASH
(
"
stylo
:
ServoRestyleManager
:
:
PostRebuildAllStyleDataEvent
not
implemented
"
)
;
}
void
ServoRestyleManager
:
:
ProcessPendingRestyles
(
)
{
IncrementRestyleGeneration
(
)
;
}
void
ServoRestyleManager
:
:
RestyleForInsertOrChange
(
Element
*
aContainer
nsIContent
*
aChild
)
{
NS_ERROR
(
"
stylo
:
ServoRestyleManager
:
:
RestyleForInsertOrChange
not
implemented
"
)
;
}
void
ServoRestyleManager
:
:
RestyleForAppend
(
Element
*
aContainer
nsIContent
*
aFirstNewContent
)
{
NS_ERROR
(
"
stylo
:
ServoRestyleManager
:
:
RestyleForAppend
not
implemented
"
)
;
}
void
ServoRestyleManager
:
:
RestyleForRemove
(
Element
*
aContainer
nsIContent
*
aOldChild
nsIContent
*
aFollowingSibling
)
{
NS_ERROR
(
"
stylo
:
ServoRestyleManager
:
:
RestyleForRemove
not
implemented
"
)
;
}
nsresult
ServoRestyleManager
:
:
ContentStateChanged
(
nsIContent
*
aContent
EventStates
aStateMask
)
{
if
(
!
aContent
-
>
IsElement
(
)
)
{
return
NS_OK
;
}
Element
*
aElement
=
aContent
-
>
AsElement
(
)
;
nsChangeHint
changeHint
;
nsRestyleHint
restyleHint
;
ContentStateChangedInternal
(
aElement
aStateMask
&
changeHint
&
restyleHint
)
;
return
NS_OK
;
}
void
ServoRestyleManager
:
:
AttributeWillChange
(
Element
*
aElement
int32_t
aNameSpaceID
nsIAtom
*
aAttribute
int32_t
aModType
const
nsAttrValue
*
aNewValue
)
{
NS_ERROR
(
"
stylo
:
ServoRestyleManager
:
:
AttributeWillChange
not
implemented
"
)
;
}
void
ServoRestyleManager
:
:
AttributeChanged
(
Element
*
aElement
int32_t
aNameSpaceID
nsIAtom
*
aAttribute
int32_t
aModType
const
nsAttrValue
*
aOldValue
)
{
NS_ERROR
(
"
stylo
:
ServoRestyleManager
:
:
AttributeChanged
not
implemented
"
)
;
}
nsresult
ServoRestyleManager
:
:
ReparentStyleContext
(
nsIFrame
*
aFrame
)
{
MOZ_CRASH
(
"
stylo
:
ServoRestyleManager
:
:
ReparentStyleContext
not
implemented
"
)
;
}
bool
ServoRestyleManager
:
:
HasPendingRestyles
(
)
{
NS_ERROR
(
"
stylo
:
ServoRestyleManager
:
:
HasPendingRestyles
not
implemented
"
)
;
return
false
;
}
}
