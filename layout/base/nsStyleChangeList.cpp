#
include
"
nsStyleChangeList
.
h
"
#
include
"
nsIContent
.
h
"
#
include
"
nsIFrame
.
h
"
#
include
"
nsFrameManager
.
h
"
void
nsStyleChangeList
:
:
AppendChange
(
nsIFrame
*
aFrame
nsIContent
*
aContent
nsChangeHint
aHint
)
{
MOZ_ASSERT
(
aFrame
|
|
(
aHint
&
nsChangeHint_ReconstructFrame
)
"
must
have
frame
"
)
;
MOZ_ASSERT
(
aHint
"
No
hint
to
process
?
"
)
;
MOZ_ASSERT
(
!
(
aHint
&
nsChangeHint_NeutralChange
)
"
Neutral
changes
do
not
need
extra
processing
"
"
and
should
be
stripped
out
"
)
;
MOZ_ASSERT
(
aContent
|
|
!
(
aHint
&
nsChangeHint_ReconstructFrame
)
"
must
have
content
"
)
;
MOZ_ASSERT
(
!
aContent
|
|
aContent
-
>
IsElement
(
)
|
|
(
aFrame
&
&
aContent
-
>
GetParent
(
)
&
&
aFrame
-
>
PresContext
(
)
-
>
FrameManager
(
)
-
>
GetDisplayContentsStyleFor
(
aContent
-
>
GetParent
(
)
)
)
|
|
(
aContent
-
>
IsNodeOfType
(
nsINode
:
:
eTEXT
)
&
&
aContent
-
>
IsStyledByServo
(
)
&
&
aContent
-
>
HasFlag
(
NODE_NEEDS_FRAME
)
&
&
aHint
&
nsChangeHint_ReconstructFrame
)
"
Shouldn
'
t
be
trying
to
restyle
non
-
elements
directly
"
"
except
if
it
'
s
a
display
:
contents
child
or
a
text
node
"
"
doing
lazy
frame
construction
"
)
;
MOZ_ASSERT
(
!
(
aHint
&
nsChangeHint_AllReflowHints
)
|
|
(
aHint
&
nsChangeHint_NeedReflow
)
"
Reflow
hint
bits
set
without
actually
asking
for
a
reflow
"
)
;
if
(
aContent
&
&
(
aHint
&
nsChangeHint_ReconstructFrame
)
)
{
if
(
IsServo
(
)
)
{
for
(
size_t
i
=
0
;
i
<
Length
(
)
;
+
+
i
)
{
MOZ_ASSERT
(
aContent
!
=
(
*
this
)
[
i
]
.
mContent
|
|
!
(
(
*
this
)
[
i
]
.
mHint
&
nsChangeHint_ReconstructFrame
)
"
Should
not
append
a
non
-
ReconstructFrame
hint
after
\
appending
a
ReconstructFrame
hint
for
the
same
\
content
.
"
)
;
}
}
else
{
RemoveElementsBy
(
[
&
]
(
const
nsStyleChangeData
&
aData
)
{
return
aData
.
mContent
=
=
aContent
;
}
)
;
}
}
if
(
!
IsEmpty
(
)
&
&
aFrame
&
&
aFrame
=
=
LastElement
(
)
.
mFrame
)
{
LastElement
(
)
.
mHint
|
=
aHint
;
return
;
}
AppendElement
(
nsStyleChangeData
{
aFrame
aContent
aHint
}
)
;
}
