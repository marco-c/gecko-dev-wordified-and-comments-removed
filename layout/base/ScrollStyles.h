#
ifndef
mozilla_ScrollStyles_h
#
define
mozilla_ScrollStyles_h
#
include
<
stdint
.
h
>
#
include
"
nsStyleConsts
.
h
"
#
include
"
mozilla
/
dom
/
WindowBinding
.
h
"
struct
nsStyleDisplay
;
namespace
mozilla
{
struct
ScrollStyles
{
StyleOverflow
mHorizontal
;
StyleOverflow
mVertical
;
StyleOverscrollBehavior
mOverscrollBehaviorX
;
StyleOverscrollBehavior
mOverscrollBehaviorY
;
StyleScrollSnapStrictness
mScrollSnapStrictnessX
;
StyleScrollSnapStrictness
mScrollSnapStrictnessY
;
ScrollStyles
(
StyleOverflow
aH
StyleOverflow
aV
)
:
mHorizontal
(
aH
)
mVertical
(
aV
)
mOverscrollBehaviorX
(
StyleOverscrollBehavior
:
:
Auto
)
mOverscrollBehaviorY
(
StyleOverscrollBehavior
:
:
Auto
)
mScrollSnapStrictnessX
(
StyleScrollSnapStrictness
:
:
None
)
mScrollSnapStrictnessY
(
StyleScrollSnapStrictness
:
:
None
)
{
}
ScrollStyles
(
WritingMode
aWritingMode
const
nsStyleDisplay
*
aDisplay
)
;
ScrollStyles
(
WritingMode
aWritingMode
StyleOverflow
aH
StyleOverflow
aV
const
nsStyleDisplay
*
aDisplay
)
;
void
InitializeScrollSnapStrictness
(
WritingMode
aWritingMode
const
nsStyleDisplay
*
aDisplay
)
;
bool
operator
=
=
(
const
ScrollStyles
&
aStyles
)
const
{
return
aStyles
.
mHorizontal
=
=
mHorizontal
&
&
aStyles
.
mVertical
=
=
mVertical
&
&
aStyles
.
mOverscrollBehaviorX
=
=
mOverscrollBehaviorX
&
&
aStyles
.
mOverscrollBehaviorY
=
=
mOverscrollBehaviorY
&
&
aStyles
.
mScrollSnapStrictnessX
=
=
mScrollSnapStrictnessX
&
&
aStyles
.
mScrollSnapStrictnessY
=
=
mScrollSnapStrictnessY
;
}
bool
operator
!
=
(
const
ScrollStyles
&
aStyles
)
const
{
return
!
(
*
this
=
=
aStyles
)
;
}
bool
IsHiddenInBothDirections
(
)
const
{
return
mHorizontal
=
=
StyleOverflow
:
:
Hidden
&
&
mVertical
=
=
StyleOverflow
:
:
Hidden
;
}
}
;
}
#
endif
