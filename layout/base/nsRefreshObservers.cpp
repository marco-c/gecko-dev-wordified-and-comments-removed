#
include
"
nsRefreshObservers
.
h
"
#
include
"
mozilla
/
Likely
.
h
"
#
include
"
nsPresContext
.
h
"
namespace
mozilla
{
ManagedPostRefreshObserver
:
:
ManagedPostRefreshObserver
(
nsPresContext
*
aPc
Action
&
&
aAction
)
:
mPresContext
(
aPc
)
mAction
(
std
:
:
move
(
aAction
)
)
{
}
ManagedPostRefreshObserver
:
:
ManagedPostRefreshObserver
(
nsPresContext
*
aPc
)
:
mPresContext
(
aPc
)
{
MOZ_ASSERT
(
mPresContext
"
Can
'
t
observe
without
a
nsPresContext
"
)
;
}
ManagedPostRefreshObserver
:
:
~
ManagedPostRefreshObserver
(
)
=
default
;
void
ManagedPostRefreshObserver
:
:
Cancel
(
)
{
if
(
mAction
)
{
mAction
(
true
)
;
}
mAction
=
nullptr
;
mPresContext
=
nullptr
;
}
void
ManagedPostRefreshObserver
:
:
DidRefresh
(
)
{
if
(
MOZ_UNLIKELY
(
!
mAction
)
)
{
return
;
}
RefPtr
<
ManagedPostRefreshObserver
>
thisObject
=
this
;
auto
action
=
std
:
:
move
(
mAction
)
;
Unregister
unregister
=
action
(
false
)
;
if
(
unregister
=
=
Unregister
:
:
Yes
)
{
if
(
RefPtr
<
nsPresContext
>
pc
=
std
:
:
move
(
mPresContext
)
)
{
pc
-
>
UnregisterManagedPostRefreshObserver
(
this
)
;
}
}
else
{
mAction
=
std
:
:
move
(
action
)
;
}
}
}
