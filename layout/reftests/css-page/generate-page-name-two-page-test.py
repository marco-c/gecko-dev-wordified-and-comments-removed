import
os
import
sys
i
=
1
ALL_DATA_COMBOS
=
(
    
{
"
p_page
"
:
True
"
use_div
"
:
False
"
div_page
"
:
False
}
    
{
"
p_page
"
:
True
"
use_div
"
:
True
"
div_page
"
:
False
}
    
{
"
p_page
"
:
False
"
use_div
"
:
True
"
div_page
"
:
True
}
)
def
gen_data_combos
(
name
)
:
    
combos
=
[
{
"
p_page
"
:
False
"
use_div
"
:
False
"
div_page
"
:
False
}
]
    
for
data
in
ALL_DATA_COMBOS
:
        
data_copy
=
data
.
copy
(
)
        
data_copy
[
"
p_page
"
]
=
data
[
"
p_page
"
]
and
name
        
data_copy
[
"
div_page
"
]
=
data
[
"
div_page
"
]
and
name
        
combos
.
append
(
data_copy
)
        
for
k
in
(
"
p_page
"
"
div_page
"
)
:
            
if
k
=
=
"
div_page
"
and
not
data
[
"
use_div
"
]
:
                
continue
            
if
not
data
[
k
]
:
                
data_copy_auto
=
data_copy
.
copy
(
)
                
data_copy_auto
[
k
]
=
"
auto
"
                
combos
.
append
(
data_copy_auto
)
    
return
combos
A_DATA_COMBOS
=
gen_data_combos
(
"
a
"
)
B_DATA_COMBOS
=
gen_data_combos
(
"
b
"
)
def
tag
(
name
page
inner
=
"
"
)
:
    
open_tag
=
"
<
"
+
name
    
if
page
:
        
open_tag
+
=
'
style
=
"
page
:
'
+
page
+
'
"
'
    
open_tag
+
=
"
>
"
    
close_tag
=
"
<
/
"
+
name
+
"
>
"
    
return
open_tag
+
inner
+
close_tag
def
generate_page_html
(
txt
p_page
use_div
div_page
)
:
    
p
=
tag
(
"
p
"
p_page
txt
)
    
if
use_div
:
        
return
tag
(
"
div
"
div_page
p
)
    
return
p
BEGIN
=
"
"
"
\
<
!
-
-
AUTOGENERATED
BY
generate
-
page
-
name
-
two
-
page
-
test
.
py
DO
NOT
MODIFY
-
-
>
<
!
DOCTYPE
html
>
<
html
class
=
"
reftest
-
paged
"
>
<
body
>
"
"
"
END
=
"
"
"
<
/
body
>
<
/
html
>
"
"
"
directory
=
os
.
path
.
dirname
(
sys
.
argv
[
0
]
)
def
data_has_no_page
(
d
)
:
    
return
(
not
d
[
"
p_page
"
]
or
d
[
"
p_page
"
]
=
=
"
auto
"
)
and
(
        
not
d
[
"
div_page
"
]
or
d
[
"
div_page
"
]
=
=
"
auto
"
    
)
for
a
in
A_DATA_COMBOS
:
    
for
b
in
B_DATA_COMBOS
:
        
if
data_has_no_page
(
a
)
and
data_has_no_page
(
b
)
:
            
continue
        
file_name
=
"
page
-
name
-
two
-
page
-
"
+
str
(
i
)
.
rjust
(
3
"
0
"
)
+
"
.
html
"
        
i
+
=
1
        
f
=
open
(
os
.
path
.
join
(
directory
file_name
)
"
w
"
)
        
f
.
write
(
BEGIN
)
        
f
.
write
(
generate_page_html
(
"
a
"
*
*
a
)
)
        
f
.
write
(
"
\
n
"
)
        
f
.
write
(
generate_page_html
(
"
b
"
*
*
b
)
)
        
f
.
write
(
END
)
        
f
.
close
(
)
